{"error":"database \"sandeep22\" does not exist","level":"error","message":"Database query error:","text":"\n      CREATE TABLE IF NOT EXISTS users (\n        id SERIAL PRIMARY KEY,\n        ibm_id VARCHAR(50) UNIQUE NOT NULL,\n        email VARCHAR(255) UNIQUE NOT NULL,\n        first_name VARCHAR(100) NOT NULL,\n        last_name VARCHAR(100) NOT NULL,\n        department VARCHAR(100),\n        team VARCHAR(100),\n        expertise TEXT[],\n        reputation INTEGER DEFAULT 0,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-04 22:56:15:5615"}
{"error":"database \"sandeep22\" does not exist","level":"error","message":"Database query error:","text":"\n      CREATE TABLE IF NOT EXISTS users (\n        id SERIAL PRIMARY KEY,\n        ibm_id VARCHAR(50) UNIQUE NOT NULL,\n        email VARCHAR(255) UNIQUE NOT NULL,\n        first_name VARCHAR(100) NOT NULL,\n        last_name VARCHAR(100) NOT NULL,\n        department VARCHAR(100),\n        team VARCHAR(100),\n        expertise TEXT[],\n        reputation INTEGER DEFAULT 0,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-04 22:56:36:5636"}
{"error":"relation \"users\" does not exist","level":"error","message":"Database query error:","params":["EMP001","john.doe@ibm.com","John","Doe","Cloud Development","Watson AI",["watson","cloud","ai"]],"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:49:22:4922"}
{"code":"42P01","file":"parse_relation.c","length":104,"level":"error","line":"1384","message":"Failed to create/update user: relation \"users\" does not exist","name":"error","position":"20","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async createOrUpdateUser (/Users/sandeep22/IBM_project/server/routes/auth.js:69:20)\n    at async /Users/sandeep22/IBM_project/server/routes/auth.js:143:20","timestamp":"2025-08-04 23:49:22:4922"}
{"code":"42P01","file":"parse_relation.c","length":104,"level":"error","line":"1384","message":"Login failed: relation \"users\" does not exist","name":"error","position":"20","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async createOrUpdateUser (/Users/sandeep22/IBM_project/server/routes/auth.js:69:20)\n    at async /Users/sandeep22/IBM_project/server/routes/auth.js:143:20","timestamp":"2025-08-04 23:49:22:4922"}
{"error":"relation \"users\" does not exist","level":"error","message":"Database query error:","params":["EMP001","john.doe@ibm.com","John","Doe","Cloud Development","Watson AI",["watson","cloud","ai"]],"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:49:27:4927"}
{"code":"42P01","file":"parse_relation.c","length":104,"level":"error","line":"1384","message":"Failed to create/update user: relation \"users\" does not exist","name":"error","position":"20","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async createOrUpdateUser (/Users/sandeep22/IBM_project/server/routes/auth.js:69:20)\n    at async /Users/sandeep22/IBM_project/server/routes/auth.js:143:20","timestamp":"2025-08-04 23:49:27:4927"}
{"code":"42P01","file":"parse_relation.c","length":104,"level":"error","line":"1384","message":"Login failed: relation \"users\" does not exist","name":"error","position":"20","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async createOrUpdateUser (/Users/sandeep22/IBM_project/server/routes/auth.js:69:20)\n    at async /Users/sandeep22/IBM_project/server/routes/auth.js:143:20","timestamp":"2025-08-04 23:49:27:4927"}
{"error":"relation \"questions\" does not exist","level":"error","message":"Database query error:","params":[10,0],"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-04 23:49:31:4931"}
{"code":"42P01","file":"parse_relation.c","length":109,"level":"error","line":"1384","message":"Failed to get questions: relation \"questions\" does not exist","name":"error","position":"183","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"questions\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:49:20","timestamp":"2025-08-04 23:49:31:4931"}
{"error":"relation \"users\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-04 23:49:36:4936"}
{"code":"42P01","file":"parse_relation.c","length":105,"level":"error","line":"1384","message":"Failed to get users: relation \"users\" does not exist","name":"error","position":"120","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/users.js:12:20","timestamp":"2025-08-04 23:49:36:4936"}
{"error":"relation \"users\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers,\n        (SELECT COUNT(*) FROM agent_suggestions) as total_suggestions\n    ","timestamp":"2025-08-04 23:49:49:4949"}
{"code":"42P01","file":"parse_relation.c","length":104,"level":"error","line":"1384","message":"Failed to get dashboard analytics: relation \"users\" does not exist","name":"error","position":"46","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/analytics.js:13:26","timestamp":"2025-08-04 23:49:49:4949"}
{"error":"relation \"agent_suggestions\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT agent_name, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN user_accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN user_accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_name\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-04 23:49:58:4958"}
{"code":"42P01","file":"parse_relation.c","length":117,"level":"error","line":"1384","message":"Failed to get agent performance: relation \"agent_suggestions\" does not exist","name":"error","position":"311","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"agent_suggestions\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:12:20","timestamp":"2025-08-04 23:49:58:4958"}
{"error":"database \"sandeep22\" does not exist","level":"error","message":"Database query error:","text":"\n      CREATE TABLE IF NOT EXISTS users (\n        id SERIAL PRIMARY KEY,\n        ibm_id VARCHAR(50) UNIQUE NOT NULL,\n        email VARCHAR(255) UNIQUE NOT NULL,\n        first_name VARCHAR(100) NOT NULL,\n        last_name VARCHAR(100) NOT NULL,\n        department VARCHAR(100),\n        team VARCHAR(100),\n        expertise TEXT[],\n        reputation INTEGER DEFAULT 0,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-04 23:50:02:502"}
{"error":"relation \"users\" does not exist","level":"error","message":"Database query error:","params":["EMP001","john.doe@ibm.com","John","Doe","Cloud Development","Watson AI",["watson","cloud","ai"]],"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:50:36:5036"}
{"code":"42P01","file":"parse_relation.c","length":104,"level":"error","line":"1384","message":"Failed to create/update user: relation \"users\" does not exist","name":"error","position":"20","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async createOrUpdateUser (/Users/sandeep22/IBM_project/server/routes/auth.js:69:20)\n    at async /Users/sandeep22/IBM_project/server/routes/auth.js:143:20","timestamp":"2025-08-04 23:50:36:5036"}
{"code":"42P01","file":"parse_relation.c","length":104,"level":"error","line":"1384","message":"Login failed: relation \"users\" does not exist","name":"error","position":"20","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async createOrUpdateUser (/Users/sandeep22/IBM_project/server/routes/auth.js:69:20)\n    at async /Users/sandeep22/IBM_project/server/routes/auth.js:143:20","timestamp":"2025-08-04 23:50:36:5036"}
{"error":"database \"sandeep22\" does not exist","level":"error","message":"Database query error:","text":"\n      CREATE TABLE IF NOT EXISTS users (\n        id SERIAL PRIMARY KEY,\n        ibm_id VARCHAR(50) UNIQUE NOT NULL,\n        email VARCHAR(255) UNIQUE NOT NULL,\n        first_name VARCHAR(100) NOT NULL,\n        last_name VARCHAR(100) NOT NULL,\n        department VARCHAR(100),\n        team VARCHAR(100),\n        expertise TEXT[],\n        reputation INTEGER DEFAULT 0,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-04 23:50:39:5039"}
{"error":"database \"sandeep22\" does not exist","level":"error","message":"Database query error:","text":"\n      CREATE TABLE IF NOT EXISTS users (\n        id SERIAL PRIMARY KEY,\n        ibm_id VARCHAR(50) UNIQUE NOT NULL,\n        email VARCHAR(255) UNIQUE NOT NULL,\n        first_name VARCHAR(100) NOT NULL,\n        last_name VARCHAR(100) NOT NULL,\n        department VARCHAR(100),\n        team VARCHAR(100),\n        expertise TEXT[],\n        reputation INTEGER DEFAULT 0,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-04 23:51:17:5117"}
{"error":"column \"agent_name\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT agent_name, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN user_accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_name\n    ","timestamp":"2025-08-04 23:53:40:5340"}
{"code":"42703","file":"parse_relation.c","hint":"Perhaps you meant to reference the column \"agent_suggestions.agent_type\".","length":185,"level":"error","line":"3657","message":"Failed to get dashboard analytics: column \"agent_name\" does not exist","name":"error","position":"15","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column \"agent_name\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/analytics.js:31:36","timestamp":"2025-08-04 23:53:40:5340"}
{"error":"column \"agent_name\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT agent_name, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN user_accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN user_accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_name\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-04 23:53:43:5343"}
{"code":"42703","file":"parse_relation.c","hint":"Perhaps you meant to reference the column \"agent_suggestions.agent_type\".","length":185,"level":"error","line":"3657","message":"Failed to get agent performance: column \"agent_name\" does not exist","name":"error","position":"15","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column \"agent_name\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:12:20","timestamp":"2025-08-04 23:53:43:5343"}
{"error":"syntax error at or near \"as\"","level":"error","message":"Database query error:","params":[20],"text":"\n      SELECT as.id, as.agent_name, as.suggestion_type, as.suggestion_data, \n             as.confidence_score, as.user_accepted, as.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions as\n      LEFT JOIN users u ON as.user_id = u.id\n      ORDER BY as.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-04 23:55:36:5536"}
{"code":"42601","file":"scan.l","length":91,"level":"error","line":"1180","message":"Failed to get agent suggestions: syntax error at or near \"as\"","name":"error","position":"15","routine":"scanner_yyerror","severity":"ERROR","stack":"error: syntax error at or near \"as\"\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:50:20","timestamp":"2025-08-04 23:55:36:5536"}
{"error":"column \"agent_name\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT agent_name, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN user_accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_name\n    ","timestamp":"2025-08-04 23:57:11:5711"}
{"code":"42703","file":"parse_relation.c","hint":"Perhaps you meant to reference the column \"agent_suggestions.agent_type\".","length":185,"level":"error","line":"3657","message":"Failed to get dashboard analytics: column \"agent_name\" does not exist","name":"error","position":"15","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column \"agent_name\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/analytics.js:31:36","timestamp":"2025-08-04 23:57:11:5711"}
{"error":"column \"agent_name\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT agent_name, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN user_accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN user_accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_name\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-04 23:57:15:5715"}
{"code":"42703","file":"parse_relation.c","hint":"Perhaps you meant to reference the column \"agent_suggestions.agent_type\".","length":185,"level":"error","line":"3657","message":"Failed to get agent performance: column \"agent_name\" does not exist","name":"error","position":"15","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column \"agent_name\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:12:20","timestamp":"2025-08-04 23:57:15:5715"}
{"error":"invalid input syntax for type integer: \"experts\"","level":"error","message":"Database query error:","params":["experts"],"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-04 23:57:30:5730"}
{"code":"22P02","file":"numutils.c","length":145,"level":"error","line":"323","message":"Failed to get user: invalid input syntax for type integer: \"experts\"","name":"error","routine":"pg_strtoint32","severity":"ERROR","stack":"error: invalid input syntax for type integer: \"experts\"\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/users.js:38:20","timestamp":"2025-08-04 23:57:30:5730","where":"unnamed portal parameter $1 = '...'"}
{"error":"column \"agent_name\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT agent_name, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN user_accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_name\n    ","timestamp":"2025-08-04 23:59:30:5930"}
{"code":"42703","file":"parse_relation.c","hint":"Perhaps you meant to reference the column \"agent_suggestions.agent_type\".","length":185,"level":"error","line":"3657","message":"Failed to get dashboard analytics: column \"agent_name\" does not exist","name":"error","position":"15","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column \"agent_name\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/analytics.js:31:36","timestamp":"2025-08-04 23:59:30:5930"}
{"error":"column \"agent_name\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT agent_name, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN user_accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN user_accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_name\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-04 23:59:36:5936"}
{"code":"42703","file":"parse_relation.c","hint":"Perhaps you meant to reference the column \"agent_suggestions.agent_type\".","length":185,"level":"error","line":"3657","message":"Failed to get agent performance: column \"agent_name\" does not exist","name":"error","position":"15","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column \"agent_name\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:12:20","timestamp":"2025-08-04 23:59:36:5936"}
{"error":"syntax error at or near \"as\"","level":"error","message":"Database query error:","params":[20],"text":"\n      SELECT as.id, as.agent_name, as.suggestion_type, as.suggestion_data, \n             as.confidence_score, as.user_accepted, as.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions as\n      LEFT JOIN users u ON as.user_id = u.id\n      ORDER BY as.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-04 23:59:36:5936"}
{"code":"42601","file":"scan.l","length":91,"level":"error","line":"1180","message":"Failed to get agent suggestions: syntax error at or near \"as\"","name":"error","position":"15","routine":"scanner_yyerror","severity":"ERROR","stack":"error: syntax error at or near \"as\"\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:50:20","timestamp":"2025-08-04 23:59:36:5936"}
{"error":"column \"agent_name\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT agent_name, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN user_accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_name\n    ","timestamp":"2025-08-05 00:01:32:132"}
{"code":"42703","file":"parse_relation.c","hint":"Perhaps you meant to reference the column \"agent_suggestions.agent_type\".","length":185,"level":"error","line":"3657","message":"Failed to get dashboard analytics: column \"agent_name\" does not exist","name":"error","position":"15","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column \"agent_name\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/analytics.js:31:36","timestamp":"2025-08-05 00:01:32:132"}
{"error":"column \"agent_name\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT agent_name, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN user_accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN user_accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_name\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:02:51:251"}
{"code":"42703","file":"parse_relation.c","hint":"Perhaps you meant to reference the column \"agent_suggestions.agent_type\".","length":185,"level":"error","line":"3657","message":"Failed to get agent performance: column \"agent_name\" does not exist","name":"error","position":"15","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column \"agent_name\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:12:20","timestamp":"2025-08-05 00:02:51:251"}
{"error":"syntax error at or near \"as\"","level":"error","message":"Database query error:","params":[20],"text":"\n      SELECT as.id, as.agent_name, as.suggestion_type, as.suggestion_data, \n             as.confidence_score, as.user_accepted, as.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions as\n      LEFT JOIN users u ON as.user_id = u.id\n      ORDER BY as.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:02:51:251"}
{"code":"42601","file":"scan.l","length":91,"level":"error","line":"1180","message":"Failed to get agent suggestions: syntax error at or near \"as\"","name":"error","position":"15","routine":"scanner_yyerror","severity":"ERROR","stack":"error: syntax error at or near \"as\"\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:50:20","timestamp":"2025-08-05 00:02:51:251"}
{"error":"column s.suggestion_type does not exist","level":"error","message":"Database query error:","params":[20],"text":"\n      SELECT s.id, s.agent_type, s.suggestion_type, s.suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:40:55:4055"}
{"code":"42703","file":"parse_relation.c","length":115,"level":"error","line":"3657","message":"Failed to get agent suggestions: column s.suggestion_type does not exist","name":"error","position":"35","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column s.suggestion_type does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:45:20","timestamp":"2025-08-05 00:40:55:4055"}
{"error":"column s.suggestion_type does not exist","level":"error","message":"Database query error:","params":[20],"text":"\n      SELECT s.id, s.agent_type, s.suggestion_type, s.suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:40:56:4056"}
{"code":"42703","file":"parse_relation.c","length":115,"level":"error","line":"3657","message":"Failed to get agent suggestions: column s.suggestion_type does not exist","name":"error","position":"35","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column s.suggestion_type does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:45:20","timestamp":"2025-08-05 00:40:56:4056"}
{"error":"column s.suggestion_type does not exist","level":"error","message":"Database query error:","params":[20],"text":"\n      SELECT s.id, s.agent_type, s.suggestion_type, s.suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:40:57:4057"}
{"code":"42703","file":"parse_relation.c","length":115,"level":"error","line":"3657","message":"Failed to get agent suggestions: column s.suggestion_type does not exist","name":"error","position":"35","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column s.suggestion_type does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:45:20","timestamp":"2025-08-05 00:40:57:4057"}
{"level":"error","message":"Failed to check availability Cannot read properties of undefined (reading 'get')","stack":"TypeError: Cannot read properties of undefined (reading 'get')\n    at SmartRoutingAgent.checkAvailability (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:282:52)\n    at SmartRoutingAgent.calculateSuggestions (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:223:44)\n    at SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:32:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:50:25:5025"}
{"level":"error","message":"Failed to check availability Cannot read properties of undefined (reading 'get')","stack":"TypeError: Cannot read properties of undefined (reading 'get')\n    at SmartRoutingAgent.checkAvailability (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:282:52)\n    at SmartRoutingAgent.calculateSuggestions (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:223:44)\n    at SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:32:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:50:32:5032"}
{"level":"error","message":"Failed to check availability Cannot read properties of undefined (reading 'get')","stack":"TypeError: Cannot read properties of undefined (reading 'get')\n    at SmartRoutingAgent.checkAvailability (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:282:52)\n    at SmartRoutingAgent.calculateSuggestions (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:223:44)\n    at SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:32:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:50:51:5051"}
{"level":"error","message":"Failed to check availability Cannot read properties of undefined (reading 'get')","stack":"TypeError: Cannot read properties of undefined (reading 'get')\n    at SmartRoutingAgent.checkAvailability (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:282:52)\n    at SmartRoutingAgent.calculateSuggestions (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:223:44)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:32:27)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:50:51:5051"}
{"error":"there is no unique or exclusion constraint matching the ON CONFLICT specification","level":"error","message":"Database query error:","params":["Security best practices","Users need comprehensive security guidelines and best practices.",1,"high","open"],"text":"\n              INSERT INTO knowledge_gaps (title, description, frequency, priority, status)\n              VALUES ($1, $2, $3, $4, $5)\n              ON CONFLICT (title) DO UPDATE SET\n                frequency = knowledge_gaps.frequency + 1,\n                updated_at = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:51:5051"}
{"code":"42P10","file":"plancat.c","length":148,"level":"error","line":"879","message":"Failed to create knowledge gap there is no unique or exclusion constraint matching the ON CONFLICT specification","name":"error","routine":"infer_arbiter_indexes","severity":"ERROR","stack":"error: there is no unique or exclusion constraint matching the ON CONFLICT specification\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async KnowledgeGapAgent.act (/Users/sandeep22/IBM_project/server/agents/knowledgeGapAgent.js:74:28)\n    at async AgentOrchestrator.act (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:137:26)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:46:23)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:50:51:5051"}
{"level":"error","message":"Failed to check availability Cannot read properties of undefined (reading 'get')","stack":"TypeError: Cannot read properties of undefined (reading 'get')\n    at SmartRoutingAgent.checkAvailability (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:282:52)\n    at SmartRoutingAgent.calculateSuggestions (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:223:44)\n    at SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:32:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:52:21:5221"}
{"level":"error","message":"Failed to check availability Cannot read properties of undefined (reading 'get')","stack":"TypeError: Cannot read properties of undefined (reading 'get')\n    at SmartRoutingAgent.checkAvailability (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:282:52)\n    at SmartRoutingAgent.calculateSuggestions (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:223:44)\n    at SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:32:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:52:27:5227"}
{"level":"error","message":"Failed to check availability Cannot read properties of undefined (reading 'get')","stack":"TypeError: Cannot read properties of undefined (reading 'get')\n    at SmartRoutingAgent.checkAvailability (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:282:52)\n    at SmartRoutingAgent.calculateSuggestions (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:223:44)\n    at SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:32:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:52:41:5241"}
{"level":"error","message":"Failed to check availability Cannot read properties of undefined (reading 'get')","stack":"TypeError: Cannot read properties of undefined (reading 'get')\n    at SmartRoutingAgent.checkAvailability (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:282:52)\n    at SmartRoutingAgent.calculateSuggestions (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:223:44)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:32:27)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:52:41:5241"}
{"error":"there is no unique or exclusion constraint matching the ON CONFLICT specification","level":"error","message":"Database query error:","params":["Security best practices","Users need comprehensive security guidelines and best practices.",1,"high","open"],"text":"\n              INSERT INTO knowledge_gaps (title, description, frequency, priority, status)\n              VALUES ($1, $2, $3, $4, $5)\n              ON CONFLICT (title) DO UPDATE SET\n                frequency = knowledge_gaps.frequency + 1,\n                updated_at = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:41:5241"}
{"code":"42P10","file":"plancat.c","length":148,"level":"error","line":"879","message":"Failed to create knowledge gap there is no unique or exclusion constraint matching the ON CONFLICT specification","name":"error","routine":"infer_arbiter_indexes","severity":"ERROR","stack":"error: there is no unique or exclusion constraint matching the ON CONFLICT specification\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async KnowledgeGapAgent.act (/Users/sandeep22/IBM_project/server/agents/knowledgeGapAgent.js:74:28)\n    at async AgentOrchestrator.act (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:137:26)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:46:23)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:52:41:5241"}
{"error":"syntax error at or near \"OR\"","level":"error","message":"Database query error:","params":[[]],"text":"\n        SELECT DISTINCT u.id, u.first_name, u.last_name, u.email, u.department, u.team,\n               u.expertise, u.reputation, em.skill, em.proficiency_level, em.evidence_count\n        FROM users u\n        LEFT JOIN expertise_mapping em ON u.id = em.user_id\n        WHERE u.id IS NOT NULL\n        AND (\n          \n          OR u.expertise && $1\n        )\n        ORDER BY u.reputation DESC, em.evidence_count DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 01:03:58:358"}
{"code":"42601","file":"scan.l","length":92,"level":"error","line":"1180","message":"Failed to find potential experts syntax error at or near \"OR\"","name":"error","position":"329","routine":"scanner_yyerror","severity":"ERROR","stack":"error: syntax error at or near \"OR\"\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async SmartRoutingAgent.findPotentialExperts (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:163:22)\n    at async SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:29:32)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 01:03:58:358"}
{"error":"syntax error at or near \"OR\"","level":"error","message":"Database query error:","params":[[]],"text":"\n        SELECT DISTINCT u.id, u.first_name, u.last_name, u.email, u.department, u.team,\n               u.expertise, u.reputation, em.skill, em.proficiency_level, em.evidence_count\n        FROM users u\n        LEFT JOIN expertise_mapping em ON u.id = em.user_id\n        WHERE u.id IS NOT NULL\n        AND (\n          \n          OR u.expertise && $1\n        )\n        ORDER BY u.reputation DESC, em.evidence_count DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 01:07:52:752"}
{"code":"42601","file":"scan.l","length":92,"level":"error","line":"1180","message":"Failed to find potential experts syntax error at or near \"OR\"","name":"error","position":"329","routine":"scanner_yyerror","severity":"ERROR","stack":"error: syntax error at or near \"OR\"\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async SmartRoutingAgent.findPotentialExperts (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:163:22)\n    at async SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:29:32)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 01:07:52:752"}
{"error":"syntax error at or near \"OR\"","level":"error","message":"Database query error:","params":[[]],"text":"\n        SELECT DISTINCT u.id, u.first_name, u.last_name, u.email, u.department, u.team,\n               u.expertise, u.reputation, em.skill, em.proficiency_level, em.evidence_count\n        FROM users u\n        LEFT JOIN expertise_mapping em ON u.id = em.user_id\n        WHERE u.id IS NOT NULL\n        AND (\n          \n          OR u.expertise && $1\n        )\n        ORDER BY u.reputation DESC, em.evidence_count DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 01:16:51:1651"}
{"code":"42601","file":"scan.l","length":92,"level":"error","line":"1180","message":"Failed to find potential experts syntax error at or near \"OR\"","name":"error","position":"329","routine":"scanner_yyerror","severity":"ERROR","stack":"error: syntax error at or near \"OR\"\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async SmartRoutingAgent.findPotentialExperts (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:163:22)\n    at async SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:29:32)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 01:16:51:1651"}
{"error":"syntax error at or near \"OR\"","level":"error","message":"Database query error:","params":[[]],"text":"\n        SELECT DISTINCT u.id, u.first_name, u.last_name, u.email, u.department, u.team,\n               u.expertise, u.reputation, em.skill, em.proficiency_level, em.evidence_count\n        FROM users u\n        LEFT JOIN expertise_mapping em ON u.id = em.user_id\n        WHERE u.id IS NOT NULL\n        AND (\n          \n          OR u.expertise && $1\n        )\n        ORDER BY u.reputation DESC, em.evidence_count DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 01:17:10:1710"}
{"code":"42601","file":"scan.l","length":92,"level":"error","line":"1180","message":"Failed to find potential experts syntax error at or near \"OR\"","name":"error","position":"329","routine":"scanner_yyerror","severity":"ERROR","stack":"error: syntax error at or near \"OR\"\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async SmartRoutingAgent.findPotentialExperts (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:163:22)\n    at async SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:29:32)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 01:17:10:1710"}
