{"error":"database \"sandeep22\" does not exist","level":"error","message":"Database query error:","text":"\n      CREATE TABLE IF NOT EXISTS users (\n        id SERIAL PRIMARY KEY,\n        ibm_id VARCHAR(50) UNIQUE NOT NULL,\n        email VARCHAR(255) UNIQUE NOT NULL,\n        first_name VARCHAR(100) NOT NULL,\n        last_name VARCHAR(100) NOT NULL,\n        department VARCHAR(100),\n        team VARCHAR(100),\n        expertise TEXT[],\n        reputation INTEGER DEFAULT 0,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-04 22:56:15:5615"}
{"error":"database \"sandeep22\" does not exist","level":"error","message":"Database query error:","text":"\n      CREATE TABLE IF NOT EXISTS users (\n        id SERIAL PRIMARY KEY,\n        ibm_id VARCHAR(50) UNIQUE NOT NULL,\n        email VARCHAR(255) UNIQUE NOT NULL,\n        first_name VARCHAR(100) NOT NULL,\n        last_name VARCHAR(100) NOT NULL,\n        department VARCHAR(100),\n        team VARCHAR(100),\n        expertise TEXT[],\n        reputation INTEGER DEFAULT 0,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-04 22:56:36:5636"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-04 23:01:10:110"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-04 23:01:10:110"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-04 23:01:10:110"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-04 23:01:10:110"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-04 23:01:10:110"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-04 23:01:10:110"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-04 23:01:35:135"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-04 23:01:35:135"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-04 23:01:35:135"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-04 23:01:35:135"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-04 23:01:35:135"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-04 23:01:35:135"}
{"ip":"::1","level":"info","message":"GET /favicon.ico","timestamp":"2025-08-04 23:01:58:158","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /manifest.json","timestamp":"2025-08-04 23:01:58:158","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/health","timestamp":"2025-08-04 23:07:22:722","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"GET /manifest.json","timestamp":"2025-08-04 23:07:40:740","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /manifest.json","timestamp":"2025-08-04 23:07:42:742","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /manifest.json","timestamp":"2025-08-04 23:07:45:745","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/health","timestamp":"2025-08-04 23:08:44:844","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"GET /manifest.json","timestamp":"2025-08-04 23:09:00:90","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/health","timestamp":"2025-08-04 23:09:27:927","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"GET /manifest.json","timestamp":"2025-08-04 23:10:20:1020","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /manifest.json","timestamp":"2025-08-04 23:11:49:1149","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /manifest.json","timestamp":"2025-08-04 23:12:48:1248","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /manifest.json","timestamp":"2025-08-04 23:14:39:1439","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /manifest.json","timestamp":"2025-08-04 23:14:45:1445","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-04 23:41:05:415"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-04 23:41:05:415"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-04 23:41:05:415"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-04 23:41:05:415"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-04 23:41:05:415"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-04 23:41:05:415"}
{"ip":"::1","level":"info","message":"GET /manifest.json","timestamp":"2025-08-04 23:41:42:4142","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/health","timestamp":"2025-08-04 23:43:06:436","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"GET /manifest.json","timestamp":"2025-08-04 23:44:40:4440","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/health","timestamp":"2025-08-04 23:45:06:456","userAgent":"curl/8.7.1"}
{"level":"info","message":"SIGTERM received, shutting down gracefully","timestamp":"2025-08-04 23:46:18:4618"}
{"level":"info","message":"Redis connection ended","timestamp":"2025-08-04 23:46:18:4618"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-04 23:49:02:492"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-04 23:49:02:492"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-04 23:49:02:492"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-04 23:49:02:492"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-04 23:49:02:492"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-04 23:49:02:492"}
{"ip":"::1","level":"info","message":"GET /api/health","timestamp":"2025-08-04 23:49:09:499","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:49:15:4915","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:49:22:4922","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:49:22:4922"}
{"error":"relation \"users\" does not exist","level":"error","message":"Database query error:","params":["EMP001","john.doe@ibm.com","John","Doe","Cloud Development","Watson AI",["watson","cloud","ai"]],"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:49:22:4922"}
{"code":"42P01","file":"parse_relation.c","length":104,"level":"error","line":"1384","message":"Failed to create/update user: relation \"users\" does not exist","name":"error","position":"20","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async createOrUpdateUser (/Users/sandeep22/IBM_project/server/routes/auth.js:69:20)\n    at async /Users/sandeep22/IBM_project/server/routes/auth.js:143:20","timestamp":"2025-08-04 23:49:22:4922"}
{"code":"42P01","file":"parse_relation.c","length":104,"level":"error","line":"1384","message":"Login failed: relation \"users\" does not exist","name":"error","position":"20","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async createOrUpdateUser (/Users/sandeep22/IBM_project/server/routes/auth.js:69:20)\n    at async /Users/sandeep22/IBM_project/server/routes/auth.js:143:20","timestamp":"2025-08-04 23:49:22:4922"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:49:27:4927","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:49:27:4927"}
{"error":"relation \"users\" does not exist","level":"error","message":"Database query error:","params":["EMP001","john.doe@ibm.com","John","Doe","Cloud Development","Watson AI",["watson","cloud","ai"]],"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:49:27:4927"}
{"code":"42P01","file":"parse_relation.c","length":104,"level":"error","line":"1384","message":"Failed to create/update user: relation \"users\" does not exist","name":"error","position":"20","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async createOrUpdateUser (/Users/sandeep22/IBM_project/server/routes/auth.js:69:20)\n    at async /Users/sandeep22/IBM_project/server/routes/auth.js:143:20","timestamp":"2025-08-04 23:49:27:4927"}
{"code":"42P01","file":"parse_relation.c","length":104,"level":"error","line":"1384","message":"Login failed: relation \"users\" does not exist","name":"error","position":"20","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async createOrUpdateUser (/Users/sandeep22/IBM_project/server/routes/auth.js:69:20)\n    at async /Users/sandeep22/IBM_project/server/routes/auth.js:143:20","timestamp":"2025-08-04 23:49:27:4927"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-04 23:49:31:4931","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:49:31:4931"}
{"error":"relation \"questions\" does not exist","level":"error","message":"Database query error:","params":[10,0],"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-04 23:49:31:4931"}
{"code":"42P01","file":"parse_relation.c","length":109,"level":"error","line":"1384","message":"Failed to get questions: relation \"questions\" does not exist","name":"error","position":"183","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"questions\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:49:20","timestamp":"2025-08-04 23:49:31:4931"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-04 23:49:36:4936","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:49:36:4936"}
{"error":"relation \"users\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-04 23:49:36:4936"}
{"code":"42P01","file":"parse_relation.c","length":105,"level":"error","line":"1384","message":"Failed to get users: relation \"users\" does not exist","name":"error","position":"120","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/users.js:12:20","timestamp":"2025-08-04 23:49:36:4936"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-04 23:49:49:4949","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:49:49:4949"}
{"error":"relation \"users\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers,\n        (SELECT COUNT(*) FROM agent_suggestions) as total_suggestions\n    ","timestamp":"2025-08-04 23:49:49:4949"}
{"code":"42P01","file":"parse_relation.c","length":104,"level":"error","line":"1384","message":"Failed to get dashboard analytics: relation \"users\" does not exist","name":"error","position":"46","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/analytics.js:13:26","timestamp":"2025-08-04 23:49:49:4949"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-04 23:49:58:4958","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:49:58:4958"}
{"error":"relation \"agent_suggestions\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT agent_name, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN user_accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN user_accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_name\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-04 23:49:58:4958"}
{"code":"42P01","file":"parse_relation.c","length":117,"level":"error","line":"1384","message":"Failed to get agent performance: relation \"agent_suggestions\" does not exist","name":"error","position":"311","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"agent_suggestions\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:12:20","timestamp":"2025-08-04 23:49:58:4958"}
{"error":"database \"sandeep22\" does not exist","level":"error","message":"Database query error:","text":"\n      CREATE TABLE IF NOT EXISTS users (\n        id SERIAL PRIMARY KEY,\n        ibm_id VARCHAR(50) UNIQUE NOT NULL,\n        email VARCHAR(255) UNIQUE NOT NULL,\n        first_name VARCHAR(100) NOT NULL,\n        last_name VARCHAR(100) NOT NULL,\n        department VARCHAR(100),\n        team VARCHAR(100),\n        expertise TEXT[],\n        reputation INTEGER DEFAULT 0,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-04 23:50:02:502"}
{"level":"info","message":"SIGTERM received, shutting down gracefully","timestamp":"2025-08-04 23:50:25:5025"}
{"level":"info","message":"Redis connection ended","timestamp":"2025-08-04 23:50:25:5025"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-04 23:50:27:5027"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-04 23:50:27:5027"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-04 23:50:27:5027"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-04 23:50:27:5027"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-04 23:50:27:5027"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-04 23:50:27:5027"}
{"ip":"::1","level":"info","message":"GET /api/health","timestamp":"2025-08-04 23:50:31:5031","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:50:36:5036","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:50:36:5036"}
{"error":"relation \"users\" does not exist","level":"error","message":"Database query error:","params":["EMP001","john.doe@ibm.com","John","Doe","Cloud Development","Watson AI",["watson","cloud","ai"]],"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:50:36:5036"}
{"code":"42P01","file":"parse_relation.c","length":104,"level":"error","line":"1384","message":"Failed to create/update user: relation \"users\" does not exist","name":"error","position":"20","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async createOrUpdateUser (/Users/sandeep22/IBM_project/server/routes/auth.js:69:20)\n    at async /Users/sandeep22/IBM_project/server/routes/auth.js:143:20","timestamp":"2025-08-04 23:50:36:5036"}
{"code":"42P01","file":"parse_relation.c","length":104,"level":"error","line":"1384","message":"Login failed: relation \"users\" does not exist","name":"error","position":"20","routine":"parserOpenTable","severity":"ERROR","stack":"error: relation \"users\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async createOrUpdateUser (/Users/sandeep22/IBM_project/server/routes/auth.js:69:20)\n    at async /Users/sandeep22/IBM_project/server/routes/auth.js:143:20","timestamp":"2025-08-04 23:50:36:5036"}
{"error":"database \"sandeep22\" does not exist","level":"error","message":"Database query error:","text":"\n      CREATE TABLE IF NOT EXISTS users (\n        id SERIAL PRIMARY KEY,\n        ibm_id VARCHAR(50) UNIQUE NOT NULL,\n        email VARCHAR(255) UNIQUE NOT NULL,\n        first_name VARCHAR(100) NOT NULL,\n        last_name VARCHAR(100) NOT NULL,\n        department VARCHAR(100),\n        team VARCHAR(100),\n        expertise TEXT[],\n        reputation INTEGER DEFAULT 0,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-04 23:50:39:5039"}
{"level":"info","message":"SIGTERM received, shutting down gracefully","timestamp":"2025-08-04 23:51:09:519"}
{"level":"info","message":"Redis connection ended","timestamp":"2025-08-04 23:51:09:519"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-04 23:51:12:5112"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-04 23:51:12:5112"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-04 23:51:12:5112"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-04 23:51:12:5112"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-04 23:51:12:5112"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-04 23:51:12:5112"}
{"error":"database \"sandeep22\" does not exist","level":"error","message":"Database query error:","text":"\n      CREATE TABLE IF NOT EXISTS users (\n        id SERIAL PRIMARY KEY,\n        ibm_id VARCHAR(50) UNIQUE NOT NULL,\n        email VARCHAR(255) UNIQUE NOT NULL,\n        first_name VARCHAR(100) NOT NULL,\n        last_name VARCHAR(100) NOT NULL,\n        department VARCHAR(100),\n        team VARCHAR(100),\n        expertise TEXT[],\n        reputation INTEGER DEFAULT 0,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-04 23:51:17:5117"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:51:32:5132"}
{"duration":50,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS users (\n        id SERIAL PRIMARY KEY,\n        ibm_id VARCHAR(50) UNIQUE NOT NULL,\n        email VARCHAR(255) UNIQUE NOT NULL,\n        first_name VARCHAR(100) NOT NULL,\n        last_name VARCHAR(100) NOT NULL,\n        department VARCHAR(100),\n        team VARCHAR(100),\n        expertise TEXT[],\n        reputation INTEGER DEFAULT 0,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-04 23:51:32:5132"}
{"duration":5,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS tags (\n        id SERIAL PRIMARY KEY,\n        name VARCHAR(100) UNIQUE NOT NULL,\n        category VARCHAR(50) NOT NULL,\n        description TEXT,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-04 23:51:32:5132"}
{"duration":11,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS questions (\n        id SERIAL PRIMARY KEY,\n        title VARCHAR(500) NOT NULL,\n        content TEXT NOT NULL,\n        user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,\n        status VARCHAR(20) DEFAULT 'open',\n        view_count INTEGER DEFAULT 0,\n        vote_count INTEGER DEFAULT 0,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-04 23:51:32:5132"}
{"duration":3,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS question_tags (\n        question_id INTEGER REFERENCES questions(id) ON DELETE CASCADE,\n        tag_id INTEGER REFERENCES tags(id) ON DELETE CASCADE,\n        PRIMARY KEY (question_id, tag_id)\n      )\n    ","timestamp":"2025-08-04 23:51:32:5132"}
{"duration":4,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS answers (\n        id SERIAL PRIMARY KEY,\n        content TEXT NOT NULL,\n        question_id INTEGER REFERENCES questions(id) ON DELETE CASCADE,\n        user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,\n        is_accepted BOOLEAN DEFAULT FALSE,\n        vote_count INTEGER DEFAULT 0,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-04 23:51:32:5132"}
{"duration":9,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS votes (\n        id SERIAL PRIMARY KEY,\n        user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,\n        question_id INTEGER REFERENCES questions(id) ON DELETE CASCADE,\n        answer_id INTEGER REFERENCES answers(id) ON DELETE CASCADE,\n        vote_type VARCHAR(10) NOT NULL CHECK (vote_type IN ('up', 'down')),\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        UNIQUE(user_id, question_id),\n        UNIQUE(user_id, answer_id)\n      )\n    ","timestamp":"2025-08-04 23:51:32:5132"}
{"duration":5,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS agent_suggestions (\n        id SERIAL PRIMARY KEY,\n        agent_type VARCHAR(50) NOT NULL,\n        question_id INTEGER REFERENCES questions(id) ON DELETE CASCADE,\n        suggested_user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,\n        confidence_score DECIMAL(3,2) NOT NULL,\n        reasoning TEXT,\n        accepted BOOLEAN DEFAULT FALSE,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-04 23:51:32:5132"}
{"duration":5,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS agent_performance (\n        id SERIAL PRIMARY KEY,\n        agent_type VARCHAR(50) NOT NULL,\n        total_suggestions INTEGER DEFAULT 0,\n        accepted_suggestions INTEGER DEFAULT 0,\n        average_confidence DECIMAL(3,2) DEFAULT 0,\n        last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-04 23:51:32:5132"}
{"duration":4,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS knowledge_gaps (\n        id SERIAL PRIMARY KEY,\n        title VARCHAR(500) NOT NULL,\n        description TEXT,\n        frequency INTEGER DEFAULT 1,\n        priority VARCHAR(20) DEFAULT 'medium',\n        assigned_to INTEGER REFERENCES users(id),\n        status VARCHAR(20) DEFAULT 'open',\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-04 23:51:32:5132"}
{"duration":4,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS expertise_mapping (\n        id SERIAL PRIMARY KEY,\n        user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,\n        skill VARCHAR(100) NOT NULL,\n        proficiency_level VARCHAR(20) DEFAULT 'intermediate',\n        evidence_count INTEGER DEFAULT 0,\n        last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        UNIQUE(user_id, skill)\n      )\n    ","timestamp":"2025-08-04 23:51:32:5132"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      INSERT INTO tags (name, category, description) VALUES\n      ('Watson', 'AI', 'IBM Watson AI and machine learning technologies'),\n      ('Cloud Pak', 'Cloud', 'IBM Cloud Pak for Data, AI, and Integration'),\n      ('Red Hat', 'Infrastructure', 'Red Hat OpenShift and container technologies'),\n      ('IBM Cloud', 'Cloud', 'IBM Cloud platform and services'),\n      ('Kubernetes', 'Infrastructure', 'Container orchestration and management'),\n      ('Docker', 'Infrastructure', 'Containerization technology'),\n      ('Microservices', 'Architecture', 'Microservices architecture patterns'),\n      ('API', 'Development', 'Application Programming Interfaces'),\n      ('Security', 'Security', 'Security and compliance topics'),\n      ('DevOps', 'Process', 'Development operations and CI/CD')\n      ON CONFLICT (name) DO NOTHING\n    ","timestamp":"2025-08-04 23:51:32:5132"}
{"level":"info","message":"Database initialized successfully","timestamp":"2025-08-04 23:51:32:5132"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:52:00:520","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:52:00:520"}
{"duration":10,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:52:00:520"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-04 23:52:00:520","userId":1}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-04 23:52:04:524","userAgent":"curl/8.7.1"}
{"duration":6,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-04 23:52:04:524"}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-04 23:52:15:5215","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:52:21:5221","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:52:21:5221"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-04 23:52:21:5221","userId":1}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-04 23:52:21:5221","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:53:13:5313","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:53:13:5313"}
{"duration":9,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:53:13:5313"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-04 23:53:13:5313","userId":1}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-04 23:53:13:5313","userAgent":"curl/8.7.1"}
{"level":"info","message":"SIGTERM received, shutting down gracefully","timestamp":"2025-08-04 23:53:21:5321"}
{"level":"info","message":"Redis connection ended","timestamp":"2025-08-04 23:53:21:5321"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-04 23:53:24:5324"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-04 23:53:24:5324"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-04 23:53:24:5324"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-04 23:53:24:5324"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-04 23:53:24:5324"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-04 23:53:24:5324"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:53:32:5332","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:53:32:5332"}
{"duration":13,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:53:32:5332"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-04 23:53:32:5332","userId":1}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-04 23:53:32:5332","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-04 23:53:32:5332"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:53:32:5332"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-04 23:53:32:5332"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:53:32:5332"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-04 23:53:32:5332"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:53:32:5332"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-04 23:53:32:5332"}
{"action":"question_created","details":{"questionId":1,"title":"How to deploy Watson AI on IBM Cloud?"},"level":"info","message":"User action","timestamp":"2025-08-04 23:53:32:5332","userId":1}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-04 23:53:36:5336","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-04 23:53:36:5336"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-04 23:53:40:5340","userAgent":"curl/8.7.1"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers,\n        (SELECT COUNT(*) FROM agent_suggestions) as total_suggestions\n    ","timestamp":"2025-08-04 23:53:40:5340"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-04 23:53:40:5340"}
{"error":"column \"agent_name\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT agent_name, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN user_accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_name\n    ","timestamp":"2025-08-04 23:53:40:5340"}
{"code":"42703","file":"parse_relation.c","hint":"Perhaps you meant to reference the column \"agent_suggestions.agent_type\".","length":185,"level":"error","line":"3657","message":"Failed to get dashboard analytics: column \"agent_name\" does not exist","name":"error","position":"15","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column \"agent_name\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/analytics.js:31:36","timestamp":"2025-08-04 23:53:40:5340"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-04 23:53:43:5343","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:53:43:5343"}
{"error":"column \"agent_name\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT agent_name, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN user_accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN user_accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_name\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-04 23:53:43:5343"}
{"code":"42703","file":"parse_relation.c","hint":"Perhaps you meant to reference the column \"agent_suggestions.agent_type\".","length":185,"level":"error","line":"3657","message":"Failed to get agent performance: column \"agent_name\" does not exist","name":"error","position":"15","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column \"agent_name\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:12:20","timestamp":"2025-08-04 23:53:43:5343"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-04 23:53:48:5348","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:53:48:5348"}
{"duration":4,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-04 23:53:48:5348"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:53:53:5353","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:53:53:5353"}
{"action":"login","details":{"ibmId":"EMP002"},"level":"info","message":"User action","timestamp":"2025-08-04 23:53:53:5353","userId":5}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-04 23:53:53:5353","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-04 23:53:53:5353"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:53:53:5353"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-04 23:53:53:5353"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:53:53:5353"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-04 23:53:53:5353"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:53:53:5353"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-04 23:53:53:5353"}
{"action":"question_created","details":{"questionId":2,"title":"Kubernetes deployment best practices"},"level":"info","message":"User action","timestamp":"2025-08-04 23:53:53:5353","userId":5}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-04 23:53:57:5357","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":2,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-04 23:53:57:5357"}
{"ip":"::1","level":"info","message":"GET /api/health","timestamp":"2025-08-04 23:55:06:556","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:55:14:5514","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:55:14:5514"}
{"duration":7,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:55:14:5514"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-04 23:55:14:5514","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:55:14:5514","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:55:14:5514"}
{"action":"login","details":{"ibmId":"EMP002"},"level":"info","message":"User action","timestamp":"2025-08-04 23:55:14:5514","userId":5}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:55:14:5514","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:55:14:5514"}
{"action":"login","details":{"ibmId":"EMP003"},"level":"info","message":"User action","timestamp":"2025-08-04 23:55:14:5514","userId":8}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:55:23:5523","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:55:23:5523"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-04 23:55:23:5523","userId":1}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-04 23:55:23:5523","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-04 23:55:23:5523"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:55:23:5523"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:55:23:5523"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:55:23:5523"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:55:23:5523"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-04 23:55:23:5523"}
{"action":"question_created","details":{"questionId":3,"title":"Watson AI integration with Kubernetes"},"level":"info","message":"User action","timestamp":"2025-08-04 23:55:23:5523","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:55:23:5523","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:55:23:5523"}
{"action":"login","details":{"ibmId":"EMP003"},"level":"info","message":"User action","timestamp":"2025-08-04 23:55:23:5523","userId":8}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-04 23:55:23:5523","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-04 23:55:23:5523"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:55:23:5523"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-04 23:55:23:5523"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:55:23:5523"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:55:23:5523"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-04 23:55:23:5523"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:55:23:5523"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-04 23:55:23:5523"}
{"action":"question_created","details":{"questionId":4,"title":"IBM Cloud security best practices"},"level":"info","message":"User action","timestamp":"2025-08-04 23:55:23:5523","userId":8}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-04 23:55:31:5531","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":4,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-04 23:55:31:5531"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-04 23:55:31:5531","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-04 23:55:31:5531"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-04 23:55:31:5531","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-04 23:55:31:5531"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-04 23:55:31:5531","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":2,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE (q.title ILIKE $1 OR q.content ILIKE $1)\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-04 23:55:31:5531"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-04 23:55:36:5536","userAgent":"curl/8.7.1"}
{"error":"syntax error at or near \"as\"","level":"error","message":"Database query error:","params":[20],"text":"\n      SELECT as.id, as.agent_name, as.suggestion_type, as.suggestion_data, \n             as.confidence_score, as.user_accepted, as.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions as\n      LEFT JOIN users u ON as.user_id = u.id\n      ORDER BY as.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-04 23:55:36:5536"}
{"code":"42601","file":"scan.l","length":91,"level":"error","line":"1180","message":"Failed to get agent suggestions: syntax error at or near \"as\"","name":"error","position":"15","routine":"scanner_yyerror","severity":"ERROR","stack":"error: syntax error at or near \"as\"\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:50:20","timestamp":"2025-08-04 23:55:36:5536"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:55:45:5545","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:55:45:5545"}
{"duration":9,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:55:45:5545"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-04 23:55:45:5545","userId":1}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-04 23:55:45:5545","userAgent":"curl/8.7.1"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-04 23:55:45:5545"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:55:45:5545"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:55:45:5545"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:55:45:5545"}
{"action":"question_created","details":{"questionId":5,"title":"Duplicate: How to deploy Watson AI on IBM Cloud?"},"level":"info","message":"User action","timestamp":"2025-08-04 23:55:45:5545","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:55:52:5552","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:55:52:5552"}
{"action":"login","details":{"ibmId":"EMP002"},"level":"info","message":"User action","timestamp":"2025-08-04 23:55:52:5552","userId":5}
{"ip":"::1","level":"info","message":"POST /api/answers","timestamp":"2025-08-04 23:55:52:5552","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:56:02:562","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:56:02:562"}
{"action":"login","details":{"ibmId":"EMP002"},"level":"info","message":"User action","timestamp":"2025-08-04 23:56:02:562","userId":5}
{"ip":"::1","level":"info","message":"POST /api/questions/1/answers","timestamp":"2025-08-04 23:56:02:562","userAgent":"curl/8.7.1"}
{"level":"info","message":"SIGTERM received, shutting down gracefully","timestamp":"2025-08-04 23:56:29:5629"}
{"level":"info","message":"Redis connection ended","timestamp":"2025-08-04 23:56:29:5629"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-04 23:56:32:5632"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-04 23:56:32:5632"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-04 23:56:32:5632"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-04 23:56:32:5632"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-04 23:56:32:5632"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-04 23:56:32:5632"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:56:40:5640","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:56:40:5640"}
{"duration":13,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:56:40:5640"}
{"action":"login","details":{"ibmId":"EMP002"},"level":"info","message":"User action","timestamp":"2025-08-04 23:56:40:5640","userId":5}
{"ip":"::1","level":"info","message":"POST /api/questions/1/answers","timestamp":"2025-08-04 23:56:40:5640","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:56:47:5647","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:56:47:5647"}
{"action":"login","details":{"ibmId":"EMP002"},"level":"info","message":"User action","timestamp":"2025-08-04 23:56:47:5647","userId":5}
{"ip":"::1","level":"info","message":"POST /api/questions/1/answers","timestamp":"2025-08-04 23:56:47:5647","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:56:57:5657","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:56:57:5657"}
{"action":"login","details":{"ibmId":"EMP002"},"level":"info","message":"User action","timestamp":"2025-08-04 23:56:57:5657","userId":5}
{"ip":"::1","level":"info","message":"POST /api/answers/questions/1/answers","timestamp":"2025-08-04 23:56:57:5657","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id FROM questions WHERE id = $1\n    ","timestamp":"2025-08-04 23:56:57:5657"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO answers (content, question_id, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, content, created_at\n    ","timestamp":"2025-08-04 23:56:57:5657"}
{"action":"answer_created","details":{"answerId":1,"questionId":"1"},"level":"info","message":"User action","timestamp":"2025-08-04 23:56:57:5657","userId":5}
{"ip":"::1","level":"info","message":"GET /api/answers/questions/1/answers","timestamp":"2025-08-04 23:57:02:572","userAgent":"curl/8.7.1"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT a.id, a.content, a.is_accepted, a.vote_count, a.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team\n      FROM answers a\n      LEFT JOIN users u ON a.user_id = u.id\n      WHERE a.question_id = $1\n      ORDER BY a.is_accepted DESC, a.vote_count DESC, a.created_at ASC\n    ","timestamp":"2025-08-04 23:57:02:572"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-04 23:57:06:576","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-04 23:57:06:576"}
{"ip":"::1","level":"info","message":"GET /api/tags/popular","timestamp":"2025-08-04 23:57:06:576","userAgent":"curl/8.7.1"}
{"duration":0,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.id, t.name, t.category,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category\n      ORDER BY question_count DESC\n      LIMIT $1\n    ","timestamp":"2025-08-04 23:57:06:576"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-04 23:57:11:5711","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers,\n        (SELECT COUNT(*) FROM agent_suggestions) as total_suggestions\n    ","timestamp":"2025-08-04 23:57:11:5711"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-04 23:57:11:5711"}
{"error":"column \"agent_name\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT agent_name, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN user_accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_name\n    ","timestamp":"2025-08-04 23:57:11:5711"}
{"code":"42703","file":"parse_relation.c","hint":"Perhaps you meant to reference the column \"agent_suggestions.agent_type\".","length":185,"level":"error","line":"3657","message":"Failed to get dashboard analytics: column \"agent_name\" does not exist","name":"error","position":"15","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column \"agent_name\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/analytics.js:31:36","timestamp":"2025-08-04 23:57:11:5711"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-04 23:57:15:5715","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:57:15:5715"}
{"error":"column \"agent_name\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT agent_name, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN user_accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN user_accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_name\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-04 23:57:15:5715"}
{"code":"42703","file":"parse_relation.c","hint":"Perhaps you meant to reference the column \"agent_suggestions.agent_type\".","length":185,"level":"error","line":"3657","message":"Failed to get agent performance: column \"agent_name\" does not exist","name":"error","position":"15","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column \"agent_name\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:12:20","timestamp":"2025-08-04 23:57:15:5715"}
{"ip":"::1","level":"info","message":"GET /api/questions/1","timestamp":"2025-08-04 23:57:20:5720","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:57:20:5720"}
{"duration":9,"level":"debug","message":"Executed query","rows":1,"text":"\n      UPDATE questions\n      SET view_count = view_count + 1\n      WHERE id = $1\n    ","timestamp":"2025-08-04 23:57:20:5720"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n      WHERE q.id = $1\n      GROUP BY q.id, u.id, u.first_name, u.last_name, u.department, u.team\n    ","timestamp":"2025-08-04 23:57:20:5720"}
{"ip":"::1","level":"info","message":"GET /api/answers/questions/1/answers","timestamp":"2025-08-04 23:57:20:5720","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT a.id, a.content, a.is_accepted, a.vote_count, a.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team\n      FROM answers a\n      LEFT JOIN users u ON a.user_id = u.id\n      WHERE a.question_id = $1\n      ORDER BY a.is_accepted DESC, a.vote_count DESC, a.created_at ASC\n    ","timestamp":"2025-08-04 23:57:20:5720"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-04 23:57:25:5725","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE (q.title ILIKE $1 OR q.content ILIKE $1)\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-04 23:57:25:5725"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-04 23:57:25:5725","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-04 23:57:25:5725"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-04 23:57:25:5725","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-04 23:57:25:5725"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-04 23:57:30:5730","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-04 23:57:30:5730"}
{"ip":"::1","level":"info","message":"GET /api/users/experts","timestamp":"2025-08-04 23:57:30:5730","userAgent":"curl/8.7.1"}
{"error":"invalid input syntax for type integer: \"experts\"","level":"error","message":"Database query error:","params":["experts"],"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-04 23:57:30:5730"}
{"code":"22P02","file":"numutils.c","length":145,"level":"error","line":"323","message":"Failed to get user: invalid input syntax for type integer: \"experts\"","name":"error","routine":"pg_strtoint32","severity":"ERROR","stack":"error: invalid input syntax for type integer: \"experts\"\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/users.js:38:20","timestamp":"2025-08-04 23:57:30:5730","where":"unnamed portal parameter $1 = '...'"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-04 23:57:34:5734","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:57:34:5734"}
{"duration":7,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-04 23:57:34:5734"}
{"ip":"::1","level":"info","message":"GET /api/health","timestamp":"2025-08-04 23:58:06:586","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:58:24:5824","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:58:24:5824"}
{"duration":6,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:58:24:5824"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-04 23:58:24:5824","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:58:24:5824","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:58:24:5824"}
{"action":"login","details":{"ibmId":"EMP002"},"level":"info","message":"User action","timestamp":"2025-08-04 23:58:24:5824","userId":5}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:58:24:5824","userAgent":"curl/8.7.1"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:58:24:5824"}
{"action":"login","details":{"ibmId":"EMP003"},"level":"info","message":"User action","timestamp":"2025-08-04 23:58:24:5824","userId":8}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:58:39:5839","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:58:39:5839"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-04 23:58:39:5839","userId":1}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-04 23:58:39:5839","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-04 23:58:39:5839"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:58:39:5839"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:58:39:5839"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-04 23:58:39:5839"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:58:39:5839"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:58:39:5839"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-04 23:58:39:5839"}
{"action":"question_created","details":{"questionId":6,"title":"Machine Learning model deployment"},"level":"info","message":"User action","timestamp":"2025-08-04 23:58:39:5839","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:58:39:5839","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:58:39:5839"}
{"action":"login","details":{"ibmId":"EMP003"},"level":"info","message":"User action","timestamp":"2025-08-04 23:58:39:5839","userId":8}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-04 23:58:39:5839","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-04 23:58:39:5839"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:58:39:5839"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:58:39:5839"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-04 23:58:39:5839"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:58:39:5839"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-04 23:58:39:5839"}
{"action":"question_created","details":{"questionId":7,"title":"Data encryption in IBM Cloud"},"level":"info","message":"User action","timestamp":"2025-08-04 23:58:39:5839","userId":8}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-04 23:58:50:5850","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-04 23:58:50:5850"}
{"action":"login","details":{"ibmId":"EMP002"},"level":"info","message":"User action","timestamp":"2025-08-04 23:58:50:5850","userId":5}
{"ip":"::1","level":"info","message":"POST /api/answers/questions/6/answers","timestamp":"2025-08-04 23:58:50:5850","userAgent":"curl/8.7.1"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id FROM questions WHERE id = $1\n    ","timestamp":"2025-08-04 23:58:50:5850"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO answers (content, question_id, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, content, created_at\n    ","timestamp":"2025-08-04 23:58:50:5850"}
{"action":"answer_created","details":{"answerId":2,"questionId":"6"},"level":"info","message":"User action","timestamp":"2025-08-04 23:58:50:5850","userId":5}
{"ip":"::1","level":"info","message":"POST /api/answers/questions/7/answers","timestamp":"2025-08-04 23:58:50:5850","userAgent":"curl/8.7.1"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id FROM questions WHERE id = $1\n    ","timestamp":"2025-08-04 23:58:50:5850"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO answers (content, question_id, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, content, created_at\n    ","timestamp":"2025-08-04 23:58:50:5850"}
{"action":"answer_created","details":{"answerId":3,"questionId":"7"},"level":"info","message":"User action","timestamp":"2025-08-04 23:58:50:5850","userId":8}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-04 23:58:58:5858","userAgent":"curl/8.7.1"}
{"duration":3,"level":"debug","message":"Executed query","rows":7,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-04 23:58:58:5858"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-04 23:58:58:5858","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-04 23:58:58:5858"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-04 23:58:58:5858","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-04 23:58:58:5858"}
{"ip":"::1","level":"info","message":"GET /api/answers/questions/6/answers","timestamp":"2025-08-04 23:59:04:594","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT a.id, a.content, a.is_accepted, a.vote_count, a.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team\n      FROM answers a\n      LEFT JOIN users u ON a.user_id = u.id\n      WHERE a.question_id = $1\n      ORDER BY a.is_accepted DESC, a.vote_count DESC, a.created_at ASC\n    ","timestamp":"2025-08-04 23:59:04:594"}
{"ip":"::1","level":"info","message":"GET /api/answers/questions/7/answers","timestamp":"2025-08-04 23:59:04:594","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT a.id, a.content, a.is_accepted, a.vote_count, a.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team\n      FROM answers a\n      LEFT JOIN users u ON a.user_id = u.id\n      WHERE a.question_id = $1\n      ORDER BY a.is_accepted DESC, a.vote_count DESC, a.created_at ASC\n    ","timestamp":"2025-08-04 23:59:04:594"}
{"ip":"::1","level":"info","message":"GET /api/answers/questions/1/answers","timestamp":"2025-08-04 23:59:04:594","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT a.id, a.content, a.is_accepted, a.vote_count, a.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team\n      FROM answers a\n      LEFT JOIN users u ON a.user_id = u.id\n      WHERE a.question_id = $1\n      ORDER BY a.is_accepted DESC, a.vote_count DESC, a.created_at ASC\n    ","timestamp":"2025-08-04 23:59:04:594"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-04 23:59:11:5911","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":23,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-04 23:59:11:5911"}
{"ip":"::1","level":"info","message":"GET /api/tags/popular","timestamp":"2025-08-04 23:59:11:5911","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.id, t.name, t.category,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category\n      ORDER BY question_count DESC\n      LIMIT $1\n    ","timestamp":"2025-08-04 23:59:11:5911"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-04 23:59:11:5911","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-04 23:59:11:5911"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-04 23:59:19:5919","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-04 23:59:19:5919"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-04 23:59:19:5919","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-04 23:59:19:5919"}
{"ip":"::1","level":"info","message":"GET /api/questions/6","timestamp":"2025-08-04 23:59:25:5925","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      UPDATE questions\n      SET view_count = view_count + 1\n      WHERE id = $1\n    ","timestamp":"2025-08-04 23:59:25:5925"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n      WHERE q.id = $1\n      GROUP BY q.id, u.id, u.first_name, u.last_name, u.department, u.team\n    ","timestamp":"2025-08-04 23:59:25:5925"}
{"ip":"::1","level":"info","message":"GET /api/questions/7","timestamp":"2025-08-04 23:59:25:5925","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      UPDATE questions\n      SET view_count = view_count + 1\n      WHERE id = $1\n    ","timestamp":"2025-08-04 23:59:25:5925"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n      WHERE q.id = $1\n      GROUP BY q.id, u.id, u.first_name, u.last_name, u.department, u.team\n    ","timestamp":"2025-08-04 23:59:25:5925"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-04 23:59:30:5930","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers,\n        (SELECT COUNT(*) FROM agent_suggestions) as total_suggestions\n    ","timestamp":"2025-08-04 23:59:30:5930"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-04 23:59:30:5930"}
{"error":"column \"agent_name\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT agent_name, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN user_accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_name\n    ","timestamp":"2025-08-04 23:59:30:5930"}
{"code":"42703","file":"parse_relation.c","hint":"Perhaps you meant to reference the column \"agent_suggestions.agent_type\".","length":185,"level":"error","line":"3657","message":"Failed to get dashboard analytics: column \"agent_name\" does not exist","name":"error","position":"15","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column \"agent_name\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/analytics.js:31:36","timestamp":"2025-08-04 23:59:30:5930"}
{"ip":"::1","level":"info","message":"GET /api/analytics/questions","timestamp":"2025-08-04 23:59:30:5930","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:59:30:5930"}
{"duration":9,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT DATE(created_at) as date, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY DATE(created_at)\n      ORDER BY date\n    ","timestamp":"2025-08-04 23:59:30:5930"}
{"duration":2,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.name as tag, COUNT(*) as count\n      FROM questions q\n      JOIN question_tags qt ON q.id = qt.question_id\n      JOIN tags t ON qt.tag_id = t.id\n      WHERE q.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY t.name\n      ORDER BY count DESC\n      LIMIT 10\n    ","timestamp":"2025-08-04 23:59:30:5930"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT status, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY status\n    ","timestamp":"2025-08-04 23:59:30:5930"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-04 23:59:36:5936","userAgent":"curl/8.7.1"}
{"error":"column \"agent_name\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT agent_name, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN user_accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN user_accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_name\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-04 23:59:36:5936"}
{"code":"42703","file":"parse_relation.c","hint":"Perhaps you meant to reference the column \"agent_suggestions.agent_type\".","length":185,"level":"error","line":"3657","message":"Failed to get agent performance: column \"agent_name\" does not exist","name":"error","position":"15","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column \"agent_name\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:12:20","timestamp":"2025-08-04 23:59:36:5936"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-04 23:59:36:5936","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:59:36:5936"}
{"error":"syntax error at or near \"as\"","level":"error","message":"Database query error:","params":[20],"text":"\n      SELECT as.id, as.agent_name, as.suggestion_type, as.suggestion_data, \n             as.confidence_score, as.user_accepted, as.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions as\n      LEFT JOIN users u ON as.user_id = u.id\n      ORDER BY as.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-04 23:59:36:5936"}
{"code":"42601","file":"scan.l","length":91,"level":"error","line":"1180","message":"Failed to get agent suggestions: syntax error at or near \"as\"","name":"error","position":"15","routine":"scanner_yyerror","severity":"ERROR","stack":"error: syntax error at or near \"as\"\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:50:20","timestamp":"2025-08-04 23:59:36:5936"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-04 23:59:44:5944","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-04 23:59:44:5944"}
{"duration":11,"level":"debug","message":"Executed query","rows":7,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-04 23:59:44:5944"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-04 23:59:44:5944","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-04 23:59:44:5944"}
{"ip":"::1","level":"info","message":"GET /api/health","timestamp":"2025-08-05 00:00:19:019","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:00:27:027","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:00:27:027"}
{"duration":12,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:00:27:027"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:00:27:027","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:00:27:027","userAgent":"curl/8.7.1"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:00:27:027"}
{"action":"login","details":{"ibmId":"EMP002"},"level":"info","message":"User action","timestamp":"2025-08-05 00:00:27:027","userId":5}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:00:27:027","userAgent":"curl/8.7.1"}
{"duration":5,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:00:27:027"}
{"action":"login","details":{"ibmId":"EMP003"},"level":"info","message":"User action","timestamp":"2025-08-05 00:00:27:027","userId":8}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:00:38:038","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:00:38:038"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:00:38:038","userId":1}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:00:38:038","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:00:38:038"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:00:38:038"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:00:38:038"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:00:38:038"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:00:38:038"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:00:38:038"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:00:38:038"}
{"action":"question_created","details":{"questionId":8,"title":"Test: AI Model Optimization"},"level":"info","message":"User action","timestamp":"2025-08-05 00:00:38:038","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:00:38:038","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:00:38:038"}
{"action":"login","details":{"ibmId":"EMP002"},"level":"info","message":"User action","timestamp":"2025-08-05 00:00:38:038","userId":5}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:00:38:038","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:00:38:038"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:00:38:038"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:00:38:038"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:00:38:038"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:00:38:038"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:00:38:038"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:00:38:038"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:00:38:038"}
{"action":"question_created","details":{"questionId":9,"title":"Test: CI/CD Pipeline Setup"},"level":"info","message":"User action","timestamp":"2025-08-05 00:00:38:038","userId":5}
{"ip":"::1","level":"info","message":"POST /api/answers/questions/8/answers","timestamp":"2025-08-05 00:00:48:048","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id FROM questions WHERE id = $1\n    ","timestamp":"2025-08-05 00:00:48:048"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO answers (content, question_id, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, content, created_at\n    ","timestamp":"2025-08-05 00:00:48:048"}
{"action":"answer_created","details":{"answerId":4,"questionId":"8"},"level":"info","message":"User action","timestamp":"2025-08-05 00:00:48:048","userId":5}
{"ip":"::1","level":"info","message":"POST /api/answers/questions/9/answers","timestamp":"2025-08-05 00:00:48:048","userAgent":"curl/8.7.1"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id FROM questions WHERE id = $1\n    ","timestamp":"2025-08-05 00:00:48:048"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO answers (content, question_id, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, content, created_at\n    ","timestamp":"2025-08-05 00:00:48:048"}
{"action":"answer_created","details":{"answerId":5,"questionId":"9"},"level":"info","message":"User action","timestamp":"2025-08-05 00:00:48:048","userId":1}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:00:56:056","userAgent":"curl/8.7.1"}
{"duration":3,"level":"debug","message":"Executed query","rows":9,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:00:56:056"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:00:56:056","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:00:56:056"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:00:56:056","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:00:56:056"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:00:56:056","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE (q.title ILIKE $1 OR q.content ILIKE $1)\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:00:56:056"}
{"ip":"::1","level":"info","message":"GET /api/answers/questions/8/answers","timestamp":"2025-08-05 00:01:02:12","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT a.id, a.content, a.is_accepted, a.vote_count, a.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team\n      FROM answers a\n      LEFT JOIN users u ON a.user_id = u.id\n      WHERE a.question_id = $1\n      ORDER BY a.is_accepted DESC, a.vote_count DESC, a.created_at ASC\n    ","timestamp":"2025-08-05 00:01:02:12"}
{"ip":"::1","level":"info","message":"GET /api/answers/questions/9/answers","timestamp":"2025-08-05 00:01:02:12","userAgent":"curl/8.7.1"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT a.id, a.content, a.is_accepted, a.vote_count, a.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team\n      FROM answers a\n      LEFT JOIN users u ON a.user_id = u.id\n      WHERE a.question_id = $1\n      ORDER BY a.is_accepted DESC, a.vote_count DESC, a.created_at ASC\n    ","timestamp":"2025-08-05 00:01:02:12"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:01:11:111","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":28,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:01:11:111"}
{"ip":"::1","level":"info","message":"GET /api/tags/popular","timestamp":"2025-08-05 00:01:11:111","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.id, t.name, t.category,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category\n      ORDER BY question_count DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:01:11:111"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:01:11:111","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:01:11:111"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:01:17:117","userAgent":"curl/8.7.1"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:01:17:117"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:01:17:117","userAgent":"curl/8.7.1"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:01:17:117"}
{"ip":"::1","level":"info","message":"GET /api/questions/8","timestamp":"2025-08-05 00:01:24:124","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      UPDATE questions\n      SET view_count = view_count + 1\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:01:24:124"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n      WHERE q.id = $1\n      GROUP BY q.id, u.id, u.first_name, u.last_name, u.department, u.team\n    ","timestamp":"2025-08-05 00:01:24:124"}
{"ip":"::1","level":"info","message":"GET /api/questions/9","timestamp":"2025-08-05 00:01:24:124","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      UPDATE questions\n      SET view_count = view_count + 1\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:01:24:124"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n      WHERE q.id = $1\n      GROUP BY q.id, u.id, u.first_name, u.last_name, u.department, u.team\n    ","timestamp":"2025-08-05 00:01:24:124"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:01:32:132","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers,\n        (SELECT COUNT(*) FROM agent_suggestions) as total_suggestions\n    ","timestamp":"2025-08-05 00:01:32:132"}
{"duration":0,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:01:32:132"}
{"error":"column \"agent_name\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT agent_name, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN user_accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_name\n    ","timestamp":"2025-08-05 00:01:32:132"}
{"code":"42703","file":"parse_relation.c","hint":"Perhaps you meant to reference the column \"agent_suggestions.agent_type\".","length":185,"level":"error","line":"3657","message":"Failed to get dashboard analytics: column \"agent_name\" does not exist","name":"error","position":"15","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column \"agent_name\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/analytics.js:31:36","timestamp":"2025-08-05 00:01:32:132"}
{"ip":"::1","level":"info","message":"GET /api/analytics/questions","timestamp":"2025-08-05 00:01:32:132","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:01:32:132"}
{"duration":9,"level":"debug","message":"Executed query","rows":2,"text":"\n      SELECT DATE(created_at) as date, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY DATE(created_at)\n      ORDER BY date\n    ","timestamp":"2025-08-05 00:01:32:132"}
{"duration":2,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.name as tag, COUNT(*) as count\n      FROM questions q\n      JOIN question_tags qt ON q.id = qt.question_id\n      JOIN tags t ON qt.tag_id = t.id\n      WHERE q.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY t.name\n      ORDER BY count DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 00:01:32:132"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT status, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY status\n    ","timestamp":"2025-08-05 00:01:32:132"}
{"level":"info","message":"SIGTERM received, shutting down gracefully","timestamp":"2025-08-05 00:02:14:214"}
{"level":"info","message":"Redis connection ended","timestamp":"2025-08-05 00:02:14:214"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 00:02:17:217"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-05 00:02:17:217"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-05 00:02:17:217"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-05 00:02:17:217"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-05 00:02:17:217"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-05 00:02:17:217"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:02:35:235","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:02:35:235"}
{"duration":10,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:02:35:235"}
{"duration":3,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:02:35:235"}
{"ip":"::1","level":"info","message":"GET /api/analytics/questions","timestamp":"2025-08-05 00:02:35:235","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":2,"text":"\n      SELECT DATE(created_at) as date, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY DATE(created_at)\n      ORDER BY date\n    ","timestamp":"2025-08-05 00:02:35:235"}
{"duration":2,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.name as tag, COUNT(*) as count\n      FROM questions q\n      JOIN question_tags qt ON q.id = qt.question_id\n      JOIN tags t ON qt.tag_id = t.id\n      WHERE q.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY t.name\n      ORDER BY count DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 00:02:35:235"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT status, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY status\n    ","timestamp":"2025-08-05 00:02:35:235"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:02:45:245","userAgent":"curl/8.7.1"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:02:45:245"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:02:45:245"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:02:51:251","userAgent":"curl/8.7.1"}
{"error":"column \"agent_name\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT agent_name, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN user_accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN user_accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_name\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:02:51:251"}
{"code":"42703","file":"parse_relation.c","hint":"Perhaps you meant to reference the column \"agent_suggestions.agent_type\".","length":185,"level":"error","line":"3657","message":"Failed to get agent performance: column \"agent_name\" does not exist","name":"error","position":"15","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column \"agent_name\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:12:20","timestamp":"2025-08-05 00:02:51:251"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:02:51:251","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:02:51:251"}
{"error":"syntax error at or near \"as\"","level":"error","message":"Database query error:","params":[20],"text":"\n      SELECT as.id, as.agent_name, as.suggestion_type, as.suggestion_data, \n             as.confidence_score, as.user_accepted, as.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions as\n      LEFT JOIN users u ON as.user_id = u.id\n      ORDER BY as.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:02:51:251"}
{"code":"42601","file":"scan.l","length":91,"level":"error","line":"1180","message":"Failed to get agent suggestions: syntax error at or near \"as\"","name":"error","position":"15","routine":"scanner_yyerror","severity":"ERROR","stack":"error: syntax error at or near \"as\"\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:50:20","timestamp":"2025-08-05 00:02:51:251"}
{"level":"info","message":"SIGTERM received, shutting down gracefully","timestamp":"2025-08-05 00:03:13:313"}
{"level":"info","message":"Redis connection ended","timestamp":"2025-08-05 00:03:13:313"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 00:03:16:316"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-05 00:03:16:316"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-05 00:03:16:316"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-05 00:03:16:316"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-05 00:03:16:316"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-05 00:03:16:316"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:03:26:326","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:03:26:326","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"GET /api/health","timestamp":"2025-08-05 00:03:34:334","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:03:34:334","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:03:34:334"}
{"duration":9,"level":"debug","message":"Executed query","rows":9,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:03:34:334"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:03:34:334","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:03:34:334"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:03:34:334","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":28,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:03:34:334"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:03:42:342","userAgent":"curl/8.7.1"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:03:42:342"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:03:42:342"}
{"ip":"::1","level":"info","message":"GET /api/analytics/questions","timestamp":"2025-08-05 00:03:42:342","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":2,"text":"\n      SELECT DATE(created_at) as date, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY DATE(created_at)\n      ORDER BY date\n    ","timestamp":"2025-08-05 00:03:42:342"}
{"duration":0,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.name as tag, COUNT(*) as count\n      FROM questions q\n      JOIN question_tags qt ON q.id = qt.question_id\n      JOIN tags t ON qt.tag_id = t.id\n      WHERE q.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY t.name\n      ORDER BY count DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 00:03:42:342"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT status, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY status\n    ","timestamp":"2025-08-05 00:03:42:342"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:03:49:349","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:03:49:349","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:03:58:358","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":4,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE (q.title ILIKE $1 OR q.content ILIKE $1)\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:03:58:358"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:03:58:358","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:03:58:358"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:03:58:358","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:03:58:358"}
{"ip":"::1","level":"info","message":"GET /api/health","timestamp":"2025-08-05 00:06:52:652","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:06:58:658","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:06:58:658"}
{"duration":6,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:06:58:658"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:06:58:658","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:06:58:658","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:06:58:658"}
{"action":"login","details":{"ibmId":"EMP002"},"level":"info","message":"User action","timestamp":"2025-08-05 00:06:58:658","userId":5}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:06:58:658","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:06:58:658"}
{"action":"login","details":{"ibmId":"EMP003"},"level":"info","message":"User action","timestamp":"2025-08-05 00:06:58:658","userId":8}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:07:04:74","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:07:04:74"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:07:04:74","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:07:04:74"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:07:10:710","userAgent":"curl/8.7.1"}
{"duration":3,"level":"debug","message":"Executed query","rows":9,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:07:10:710"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:07:10:710","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":9,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:07:10:710"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:07:10:710","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":4,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE (q.title ILIKE $1 OR q.content ILIKE $1)\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:07:10:710"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:07:10:710","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:07:10:710"}
{"ip":"::1","level":"info","message":"GET /api/answers/questions/8/answers","timestamp":"2025-08-05 00:07:17:717","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT a.id, a.content, a.is_accepted, a.vote_count, a.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team\n      FROM answers a\n      LEFT JOIN users u ON a.user_id = u.id\n      WHERE a.question_id = $1\n      ORDER BY a.is_accepted DESC, a.vote_count DESC, a.created_at ASC\n    ","timestamp":"2025-08-05 00:07:17:717"}
{"ip":"::1","level":"info","message":"GET /api/answers/questions/9/answers","timestamp":"2025-08-05 00:07:17:717","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT a.id, a.content, a.is_accepted, a.vote_count, a.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team\n      FROM answers a\n      LEFT JOIN users u ON a.user_id = u.id\n      WHERE a.question_id = $1\n      ORDER BY a.is_accepted DESC, a.vote_count DESC, a.created_at ASC\n    ","timestamp":"2025-08-05 00:07:17:717"}
{"ip":"::1","level":"info","message":"GET /api/answers/questions/8/answers","timestamp":"2025-08-05 00:07:17:717","userAgent":"curl/8.7.1"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT a.id, a.content, a.is_accepted, a.vote_count, a.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team\n      FROM answers a\n      LEFT JOIN users u ON a.user_id = u.id\n      WHERE a.question_id = $1\n      ORDER BY a.is_accepted DESC, a.vote_count DESC, a.created_at ASC\n    ","timestamp":"2025-08-05 00:07:17:717"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:07:24:724","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":28,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:07:24:724"}
{"ip":"::1","level":"info","message":"GET /api/tags/popular","timestamp":"2025-08-05 00:07:24:724","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.id, t.name, t.category,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category\n      ORDER BY question_count DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:07:24:724"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:07:24:724","userAgent":"curl/8.7.1"}
{"duration":0,"level":"debug","message":"Executed query","rows":28,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:07:24:724"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:07:30:730","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:07:30:730"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:07:30:730"}
{"ip":"::1","level":"info","message":"GET /api/analytics/questions","timestamp":"2025-08-05 00:07:30:730","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":2,"text":"\n      SELECT DATE(created_at) as date, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY DATE(created_at)\n      ORDER BY date\n    ","timestamp":"2025-08-05 00:07:30:730"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.name as tag, COUNT(*) as count\n      FROM questions q\n      JOIN question_tags qt ON q.id = qt.question_id\n      JOIN tags t ON qt.tag_id = t.id\n      WHERE q.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY t.name\n      ORDER BY count DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 00:07:30:730"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT status, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY status\n    ","timestamp":"2025-08-05 00:07:30:730"}
{"ip":"::1","level":"info","message":"GET /api/analytics/users","timestamp":"2025-08-05 00:07:30:730","userAgent":"curl/8.7.1"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) as questions_asked,\n             COUNT(DISTINCT a.id) as answers_given,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id AND q.created_at >= NOW() - INTERVAL '30 days'\n      LEFT JOIN answers a ON u.id = a.user_id AND a.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY (COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id)) DESC\n      LIMIT 20\n    ","timestamp":"2025-08-05 00:07:30:730"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT department, COUNT(*) as count\n      FROM users\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY department\n      ORDER BY count DESC\n    ","timestamp":"2025-08-05 00:07:30:730"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id) as total_contributions,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id\n      LEFT JOIN answers a ON u.id = a.user_id\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY total_contributions DESC, u.reputation DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 00:07:30:730"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:07:36:736","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:07:36:736","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"GET /api/questions/8","timestamp":"2025-08-05 00:07:42:742","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      UPDATE questions\n      SET view_count = view_count + 1\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:07:42:742"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n      WHERE q.id = $1\n      GROUP BY q.id, u.id, u.first_name, u.last_name, u.department, u.team\n    ","timestamp":"2025-08-05 00:07:42:742"}
{"ip":"::1","level":"info","message":"GET /api/questions/9","timestamp":"2025-08-05 00:07:42:742","userAgent":"curl/8.7.1"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      UPDATE questions\n      SET view_count = view_count + 1\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:07:42:742"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n      WHERE q.id = $1\n      GROUP BY q.id, u.id, u.first_name, u.last_name, u.department, u.team\n    ","timestamp":"2025-08-05 00:07:42:742"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:07:49:749","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE (q.title ILIKE $1 OR q.content ILIKE $1)\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:07:49:749"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:07:49:749","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:07:49:749"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:07:49:749","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:07:49:749"}
{"ip":"::1","level":"info","message":"GET /api/health","timestamp":"2025-08-05 00:07:58:758","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:07:58:758","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":9,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:07:58:758"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:07:58:758","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:07:58:758"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:07:58:758","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":28,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:07:58:758"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:07:58:758","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":4,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE (q.title ILIKE $1 OR q.content ILIKE $1)\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:07:58:758"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:15:22:1522","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:15:22:1522","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:15:22:1522","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:15:22:1522","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:15:22:1522","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:15:22:1522"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:15:22:1522"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:15:22:1522"}
{"duration":10,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:15:22:1522"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:15:22:1522"}
{"duration":11,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:15:22:1522"}
{"duration":11,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:15:22:1522"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:15:29:1529","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:15:29:1529","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":28,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:15:29:1529"}
{"duration":4,"level":"debug","message":"Executed query","rows":9,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:15:29:1529"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:15:34:1534","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:15:34:1534","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:15:34:1534"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:15:34:1534","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:15:34:1534"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:15:34:1534"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:15:34:1534"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:15:36:1536","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:15:36:1536","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":28,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:15:36:1536"}
{"duration":2,"level":"debug","message":"Executed query","rows":9,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:15:36:1536"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:15:41:1541","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:15:41:1541","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:15:41:1541"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:15:41:1541","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:15:41:1541"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:15:41:1541"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:15:41:1541"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:15:45:1545","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:15:45:1545","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":0,"level":"debug","message":"Executed query","rows":28,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:15:45:1545"}
{"duration":2,"level":"debug","message":"Executed query","rows":9,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:15:45:1545"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:15:48:1548","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:15:48:1548","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:15:48:1548"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:15:48:1548","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:15:48:1548"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:15:48:1548"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:15:48:1548"}
{"ip":"::1","level":"info","message":"GET /api/analytics/questions","timestamp":"2025-08-05 00:15:49:1549","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/users","timestamp":"2025-08-05 00:15:49:1549","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:15:49:1549","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":2,"text":"\n      SELECT DATE(created_at) as date, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY DATE(created_at)\n      ORDER BY date\n    ","timestamp":"2025-08-05 00:15:49:1549"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:15:49:1549"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) as questions_asked,\n             COUNT(DISTINCT a.id) as answers_given,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id AND q.created_at >= NOW() - INTERVAL '30 days'\n      LEFT JOIN answers a ON u.id = a.user_id AND a.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY (COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id)) DESC\n      LIMIT 20\n    ","timestamp":"2025-08-05 00:15:49:1549"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.name as tag, COUNT(*) as count\n      FROM questions q\n      JOIN question_tags qt ON q.id = qt.question_id\n      JOIN tags t ON qt.tag_id = t.id\n      WHERE q.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY t.name\n      ORDER BY count DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 00:15:49:1549"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:15:49:1549"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT status, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY status\n    ","timestamp":"2025-08-05 00:15:49:1549"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT department, COUNT(*) as count\n      FROM users\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY department\n      ORDER BY count DESC\n    ","timestamp":"2025-08-05 00:15:49:1549"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id) as total_contributions,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id\n      LEFT JOIN answers a ON u.id = a.user_id\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY total_contributions DESC, u.reputation DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 00:15:49:1549"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:15:52:1552","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":28,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:15:52:1552"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:16:18:1618","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:16:25:1625","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:16:33:1633","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:16:34:1634","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:16:34:1634","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:16:48:1648","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:16:49:1649","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:16:50:1650","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:16:50:1650","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:17:01:171","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:17:01:171","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:17:01:171","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:17:01:171"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:17:01:171"}
{"duration":18,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:17:01:171"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:17:01:171"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:17:01:171"}
{"duration":15,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:17:01:171"}
{"duration":21,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:17:01:171"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:17:03:173","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:17:03:173","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:17:03:173","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:17:03:173"}
{"duration":3,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:17:03:173"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:17:03:173"}
{"duration":6,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:17:03:173"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:17:05:175","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":28,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:17:05:175"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:17:08:178","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/users","timestamp":"2025-08-05 00:17:08:178","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/questions","timestamp":"2025-08-05 00:17:08:178","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:17:08:178"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) as questions_asked,\n             COUNT(DISTINCT a.id) as answers_given,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id AND q.created_at >= NOW() - INTERVAL '30 days'\n      LEFT JOIN answers a ON u.id = a.user_id AND a.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY (COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id)) DESC\n      LIMIT 20\n    ","timestamp":"2025-08-05 00:17:08:178"}
{"duration":2,"level":"debug","message":"Executed query","rows":2,"text":"\n      SELECT DATE(created_at) as date, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY DATE(created_at)\n      ORDER BY date\n    ","timestamp":"2025-08-05 00:17:08:178"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:17:08:178"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT department, COUNT(*) as count\n      FROM users\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY department\n      ORDER BY count DESC\n    ","timestamp":"2025-08-05 00:17:08:178"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id) as total_contributions,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id\n      LEFT JOIN answers a ON u.id = a.user_id\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY total_contributions DESC, u.reputation DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 00:17:08:178"}
{"duration":3,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.name as tag, COUNT(*) as count\n      FROM questions q\n      JOIN question_tags qt ON q.id = qt.question_id\n      JOIN tags t ON qt.tag_id = t.id\n      WHERE q.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY t.name\n      ORDER BY count DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 00:17:08:178"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT status, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY status\n    ","timestamp":"2025-08-05 00:17:08:178"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:17:09:179","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:17:09:179","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/questions","timestamp":"2025-08-05 00:17:58:1758","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/users","timestamp":"2025-08-05 00:17:58:1758","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:17:58:1758"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:17:58:1758"}
{"duration":13,"level":"debug","message":"Executed query","rows":2,"text":"\n      SELECT DATE(created_at) as date, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY DATE(created_at)\n      ORDER BY date\n    ","timestamp":"2025-08-05 00:17:58:1758"}
{"duration":11,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) as questions_asked,\n             COUNT(DISTINCT a.id) as answers_given,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id AND q.created_at >= NOW() - INTERVAL '30 days'\n      LEFT JOIN answers a ON u.id = a.user_id AND a.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY (COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id)) DESC\n      LIMIT 20\n    ","timestamp":"2025-08-05 00:17:58:1758"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT department, COUNT(*) as count\n      FROM users\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY department\n      ORDER BY count DESC\n    ","timestamp":"2025-08-05 00:17:58:1758"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.name as tag, COUNT(*) as count\n      FROM questions q\n      JOIN question_tags qt ON q.id = qt.question_id\n      JOIN tags t ON qt.tag_id = t.id\n      WHERE q.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY t.name\n      ORDER BY count DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 00:17:58:1758"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id) as total_contributions,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id\n      LEFT JOIN answers a ON u.id = a.user_id\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY total_contributions DESC, u.reputation DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 00:17:58:1758"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT status, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY status\n    ","timestamp":"2025-08-05 00:17:58:1758"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:18:27:1827","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:18:27:1827","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:18:27:1827","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:18:27:1827"}
{"duration":0,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:18:27:1827"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:18:27:1827"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:18:27:1827"}
{"duration":7,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:18:27:1827"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:18:29:1829","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":28,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:18:29:1829"}
{"ip":"::1","level":"info","message":"GET /api/health","timestamp":"2025-08-05 00:18:37:1837","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:18:37:1837","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:18:37:1837"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:18:37:1837","userId":1}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:18:37:1837","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":9,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:18:37:1837"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:18:37:1837","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:18:37:1837"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:18:37:1837"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:19:49:1949","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:19:49:1949"}
{"duration":5,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:19:49:1949"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:19:49:1949","userId":1}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:19:49:1949","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:19:49:1949","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:19:49:1949","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:19:49:1949","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:19:49:1949"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:19:49:1949"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:19:49:1949"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:19:49:1949"}
{"duration":7,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:19:49:1949"}
{"duration":9,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:19:49:1949"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:19:53:1953","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":28,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:19:53:1953"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:19:59:1959","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:20:02:202","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:20:02:202"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:20:02:202","userId":1}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:20:02:202","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:20:02:202","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:20:02:202","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:20:02:202","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:20:02:202"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:20:02:202"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:20:02:202"}
{"duration":4,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:20:02:202"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:20:04:204","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":28,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:20:04:204"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:20:10:2010","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":28,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:20:10:2010"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:20:14:2014","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:20:14:2014","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:20:14:2014","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:20:14:2014"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:20:14:2014"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:20:14:2014"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:20:14:2014"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:20:52:2052","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:20:52:2052","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:20:52:2052","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:20:52:2052"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:20:52:2052"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:20:52:2052"}
{"duration":11,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:20:52:2052"}
{"duration":12,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:20:52:2052"}
{"duration":12,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:20:52:2052"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:20:52:2052"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:20:54:2054","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:20:54:2054","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":28,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:20:54:2054"}
{"duration":2,"level":"debug","message":"Executed query","rows":9,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:20:54:2054"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:20:57:2057","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:20:57:2057"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:21:00:210","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:21:00:210"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:21:01:211","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":9,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:21:01:211"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:21:06:216","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":28,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:21:06:216"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:21:15:2115","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:21:15:2115"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:21:15:2115","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:21:21:2121","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:21:21:2121"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:21:21:2121","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:21:38:2138","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:21:38:2138"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:21:38:2138","userId":1}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:21:38:2138","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:21:38:2138"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:21:38:2138"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:21:38:2138"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:21:38:2138"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:21:38:2138"}
{"action":"question_created","details":{"questionId":10,"title":"Test Question via API"},"level":"info","message":"User action","timestamp":"2025-08-05 00:21:38:2138","userId":1}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:21:45:2145","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:21:45:2145"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:24:35:2435","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:24:35:2435"}
{"duration":7,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:24:35:2435"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:24:35:2435","userId":1}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:24:35:2435","userAgent":"curl/8.7.1"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:24:35:2435"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:24:35:2435"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:24:35:2435"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:24:35:2435"}
{"action":"question_created","details":{"questionId":11,"title":"UI Test Question"},"level":"info","message":"User action","timestamp":"2025-08-05 00:24:35:2435","userId":1}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:24:39:2439","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:24:39:2439"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:24:39:2439"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:24:39:2439"}
{"action":"question_created","details":{"questionId":12,"title":"UI Test Question"},"level":"info","message":"User action","timestamp":"2025-08-05 00:24:39:2439","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:24:55:2455","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:24:55:2455"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:24:55:2455","userId":1}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:24:55:2455","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:25:00:250","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:25:00:250"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:25:00:250","userId":1}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:25:00:250","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:25:05:255","userAgent":"curl/8.7.1"}
{"level":"info","message":"SIGTERM received, shutting down gracefully","timestamp":"2025-08-05 00:25:58:2558"}
{"level":"info","message":"Redis connection ended","timestamp":"2025-08-05 00:25:58:2558"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 00:26:01:261"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-05 00:26:01:261"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-05 00:26:01:261"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-05 00:26:01:261"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-05 00:26:01:261"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-05 00:26:01:261"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:26:07:267","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:26:07:267"}
{"duration":12,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:26:07:267"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:26:07:267","userId":1}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:26:07:267","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:26:07:267"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:26:16:2616","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:26:16:2616"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:26:16:2616","userId":1}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:26:16:2616","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:26:16:2616"}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:26:16:2616","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:26:16:2616"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:26:16:2616"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:26:16:2616"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:26:16:2616"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:26:16:2616"}
{"action":"question_created","details":{"questionId":13,"title":"UI Test After Fix"},"level":"info","message":"User action","timestamp":"2025-08-05 00:26:16:2616","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:26:39:2639","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:26:39:2639"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:26:39:2639","userId":1}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:26:39:2639","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:26:39:2639","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:26:39:2639"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:26:39:2639","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:26:39:2639"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:26:39:2639","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:26:39:2639"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:26:39:2639"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:26:39:2639"}
{"duration":7,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:26:39:2639"}
{"duration":10,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:26:39:2639"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:26:42:2642","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:26:42:2642"}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:27:02:272","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:27:02:272"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:27:02:272"}
{"action":"question_created","details":{"questionId":14,"title":"sandeep"},"level":"info","message":"User action","timestamp":"2025-08-05 00:27:02:272","userId":1}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:27:02:272","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:27:02:272","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:27:02:272"}
{"duration":3,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:27:02:272"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:27:11:2711","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:27:11:2711","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:27:11:2711","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:27:11:2711"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:27:11:2711"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:27:11:2711"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:27:11:2711"}
{"duration":5,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:27:11:2711"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:27:14:2714","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:27:14:2714","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:27:14:2714"}
{"duration":4,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:27:14:2714"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:27:33:2733","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:27:33:2733"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:27:35:2735","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:27:35:2735"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:27:36:2736","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:27:36:2736"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:27:37:2737","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:27:37:2737"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:27:38:2738","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:27:38:2738"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:27:38:2738","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:27:38:2738"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:27:39:2739","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE t.name = $1\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:27:39:2739"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:27:42:2742","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:27:42:2742"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:27:49:2749","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":5,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:27:49:2749"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:27:54:2754","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/questions","timestamp":"2025-08-05 00:27:54:2754","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/users","timestamp":"2025-08-05 00:27:54:2754","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:27:54:2754"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:27:54:2754"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:27:54:2754"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:27:54:2754"}
{"duration":8,"level":"debug","message":"Executed query","rows":2,"text":"\n      SELECT DATE(created_at) as date, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY DATE(created_at)\n      ORDER BY date\n    ","timestamp":"2025-08-05 00:27:54:2754"}
{"duration":8,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) as questions_asked,\n             COUNT(DISTINCT a.id) as answers_given,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id AND q.created_at >= NOW() - INTERVAL '30 days'\n      LEFT JOIN answers a ON u.id = a.user_id AND a.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY (COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id)) DESC\n      LIMIT 20\n    ","timestamp":"2025-08-05 00:27:54:2754"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT department, COUNT(*) as count\n      FROM users\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY department\n      ORDER BY count DESC\n    ","timestamp":"2025-08-05 00:27:54:2754"}
{"duration":2,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.name as tag, COUNT(*) as count\n      FROM questions q\n      JOIN question_tags qt ON q.id = qt.question_id\n      JOIN tags t ON qt.tag_id = t.id\n      WHERE q.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY t.name\n      ORDER BY count DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 00:27:54:2754"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id) as total_contributions,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id\n      LEFT JOIN answers a ON u.id = a.user_id\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY total_contributions DESC, u.reputation DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 00:27:54:2754"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT status, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY status\n    ","timestamp":"2025-08-05 00:27:54:2754"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:27:59:2759","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:27:59:2759","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:28:11:2811","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:28:11:2811","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:28:11:2811","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:28:11:2811"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:28:11:2811"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:28:11:2811"}
{"duration":3,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:28:11:2811"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:30:50:3050","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:30:50:3050","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:30:50:3050","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:30:50:3050"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:30:50:3050"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:30:50:3050"}
{"duration":18,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:30:50:3050"}
{"duration":22,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:30:50:3050"}
{"duration":21,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:30:50:3050"}
{"duration":6,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:30:50:3050"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:30:52:3052","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:30:52:3052"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:30:56:3056","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:30:56:3056"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:31:45:3145","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:31:45:3145"}
{"duration":8,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:31:45:3145"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:31:45:3145","userId":1}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:31:45:3145","userAgent":"curl/8.7.1"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:31:45:3145"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:31:45:3145"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:31:45:3145"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:31:45:3145"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:31:45:3145"}
{"action":"question_created","details":{"questionId":15,"title":"How to deploy Watson AI models in Kubernetes?"},"level":"info","message":"User action","timestamp":"2025-08-05 00:31:45:3145","userId":1}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:32:08:328","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:32:25:3225","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:32:25:3225"}
{"duration":12,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:32:25:3225"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:33:20:3320","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:33:20:3320"}
{"duration":11,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:33:20:3320"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:33:27:3327","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:33:27:3327"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:33:33:3333","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:33:33:3333"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:33:38:3338","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:33:38:3338"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:33:42:3342","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:33:42:3342"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:33:46:3346","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:33:46:3346"}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:33:50:3350","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:33:50:3350"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:33:50:3350"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:33:50:3350"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:33:50:3350"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:33:50:3350"}
{"action":"question_created","details":{"questionId":16,"title":"How to deploy Watson AI models in Kubernetes?"},"level":"info","message":"User action","timestamp":"2025-08-05 00:33:50:3350","userId":1}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:33:50:3350","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:33:50:3350","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:33:50:3350"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:33:50:3350"}
{"duration":7,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:33:50:3350"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:33:56:3356","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:33:56:3356"}
{"level":"info","message":"SIGTERM received, shutting down gracefully","timestamp":"2025-08-05 00:40:16:4016"}
{"level":"info","message":"Redis connection ended","timestamp":"2025-08-05 00:40:16:4016"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 00:40:20:4020"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-05 00:40:20:4020"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-05 00:40:20:4020"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-05 00:40:20:4020"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-05 00:40:20:4020"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-05 00:40:20:4020"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:40:25:4025","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:40:25:4025"}
{"duration":12,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:40:25:4025"}
{"duration":3,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:40:25:4025"}
{"duration":4,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 00:40:25:4025"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:40:25:4025","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:40:25:4025"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:40:33:4033","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:40:33:4033"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:40:33:4033","userId":1}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:40:33:4033","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:40:33:4033"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:40:33:4033","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:40:33:4033"}
{"duration":0,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:40:33:4033"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 00:40:33:4033"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:40:33:4033","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:40:33:4033"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:40:55:4055","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:40:55:4055","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"error":"column s.suggestion_type does not exist","level":"error","message":"Database query error:","params":[20],"text":"\n      SELECT s.id, s.agent_type, s.suggestion_type, s.suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:40:55:4055"}
{"code":"42703","file":"parse_relation.c","length":115,"level":"error","line":"3657","message":"Failed to get agent suggestions: column s.suggestion_type does not exist","name":"error","position":"35","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column s.suggestion_type does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:45:20","timestamp":"2025-08-05 00:40:55:4055"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:40:55:4055"}
{"duration":12,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:40:55:4055"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:40:56:4056","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:40:56:4056","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:40:56:4056"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:40:56:4056","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:40:56:4056"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:40:56:4056"}
{"error":"column s.suggestion_type does not exist","level":"error","message":"Database query error:","params":[20],"text":"\n      SELECT s.id, s.agent_type, s.suggestion_type, s.suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:40:56:4056"}
{"code":"42703","file":"parse_relation.c","length":115,"level":"error","line":"3657","message":"Failed to get agent suggestions: column s.suggestion_type does not exist","name":"error","position":"35","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column s.suggestion_type does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:45:20","timestamp":"2025-08-05 00:40:56:4056"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:40:56:4056","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:40:56:4056"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:40:57:4057","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"error":"column s.suggestion_type does not exist","level":"error","message":"Database query error:","params":[20],"text":"\n      SELECT s.id, s.agent_type, s.suggestion_type, s.suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:40:57:4057"}
{"code":"42703","file":"parse_relation.c","length":115,"level":"error","line":"3657","message":"Failed to get agent suggestions: column s.suggestion_type does not exist","name":"error","position":"35","routine":"errorMissingColumn","severity":"ERROR","stack":"error: column s.suggestion_type does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/agents.js:45:20","timestamp":"2025-08-05 00:40:57:4057"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:40:58:4058","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:40:58:4058","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:40:58:4058","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:40:58:4058"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:40:58:4058"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:40:58:4058"}
{"duration":12,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:40:58:4058"}
{"duration":11,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:40:58:4058"}
{"duration":13,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:40:58:4058"}
{"duration":4,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:40:58:4058"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 00:40:58:4058"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:41:00:410","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:41:00:410","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:41:00:410"}
{"duration":3,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:41:00:410"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:41:01:411","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:41:01:411"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:41:09:419","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":8,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:41:09:419"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:41:17:4117","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:41:17:4117"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:41:24:4124","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:41:24:4124"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:41:27:4127","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:41:27:4127"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:41:27:4127","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:41:27:4127"}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:41:32:4132","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:41:32:4132"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:41:32:4132"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:41:32:4132"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:41:32:4132"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:41:32:4132"}
{"action":"question_created","details":{"questionId":17,"title":"\"How to deploy Watson AI models in Kubernetes?\""},"level":"info","message":"User action","timestamp":"2025-08-05 00:41:32:4132","userId":1}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:41:32:4132","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:41:32:4132","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:41:32:4132"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:41:32:4132"}
{"duration":8,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:41:32:4132"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:41:37:4137","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:41:37:4137","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:41:37:4137"}
{"duration":5,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:41:37:4137"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:41:44:4144","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:41:44:4144","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:41:44:4144"}
{"duration":4,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:41:44:4144"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:41:47:4147","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE (q.title ILIKE $1 OR q.content ILIKE $1)\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:41:47:4147"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:41:50:4150","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE (q.title ILIKE $1 OR q.content ILIKE $1)\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:41:50:4150"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:41:53:4153","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":9,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE (q.title ILIKE $1 OR q.content ILIKE $1)\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:41:53:4153"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:41:56:4156","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":9,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE (q.title ILIKE $1 OR q.content ILIKE $1)\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:41:56:4156"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:41:59:4159","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":6,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE (q.title ILIKE $1 OR q.content ILIKE $1)\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:41:59:4159"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:42:04:424","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":6,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE (q.title ILIKE $1 OR q.content ILIKE $1)\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:42:04:424"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:42:05:425","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":6,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE (q.title ILIKE $1 OR q.content ILIKE $1)\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:42:05:425"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:42:07:427","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n     WHERE (q.title ILIKE $1 OR q.content ILIKE $1)\n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $2 OFFSET $3\n    ","timestamp":"2025-08-05 00:42:07:427"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:42:15:4215","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:42:15:4215"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:42:23:4223","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:42:23:4223","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:42:23:4223"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:42:23:4223"}
{"duration":6,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:42:23:4223"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:42:25:4225","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:42:25:4225","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:42:25:4225","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:42:25:4225"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:42:25:4225"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:42:25:4225"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 00:42:25:4225"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:42:25:4225"}
{"duration":7,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:42:25:4225"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:42:31:4231","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:42:31:4231","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:42:31:4231","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:42:31:4231"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:42:31:4231"}
{"duration":3,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:42:31:4231"}
{"duration":0,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:42:31:4231"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 00:42:31:4231"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:42:31:4231","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:42:31:4231","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:42:31:4231"}
{"duration":3,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:42:31:4231"}
{"ip":"::1","level":"info","message":"GET /api/questions/17","timestamp":"2025-08-05 00:42:33:4233","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/answers/questions/17/answers","timestamp":"2025-08-05 00:42:33:4233","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      UPDATE questions\n      SET view_count = view_count + 1\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:42:33:4233"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT a.id, a.content, a.is_accepted, a.vote_count, a.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team\n      FROM answers a\n      LEFT JOIN users u ON a.user_id = u.id\n      WHERE a.question_id = $1\n      ORDER BY a.is_accepted DESC, a.vote_count DESC, a.created_at ASC\n    ","timestamp":"2025-08-05 00:42:33:4233"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n      WHERE q.id = $1\n      GROUP BY q.id, u.id, u.first_name, u.last_name, u.department, u.team\n    ","timestamp":"2025-08-05 00:42:33:4233"}
{"ip":"::1","level":"info","message":"POST /api/answers/questions/17/answers","timestamp":"2025-08-05 00:42:56:4256","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id FROM questions WHERE id = $1\n    ","timestamp":"2025-08-05 00:42:56:4256"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO answers (content, question_id, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, content, created_at\n    ","timestamp":"2025-08-05 00:42:56:4256"}
{"action":"answer_created","details":{"answerId":6,"questionId":"17"},"level":"info","message":"User action","timestamp":"2025-08-05 00:42:56:4256","userId":1}
{"ip":"::1","level":"info","message":"GET /api/answers/questions/17/answers","timestamp":"2025-08-05 00:42:56:4256","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT a.id, a.content, a.is_accepted, a.vote_count, a.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team\n      FROM answers a\n      LEFT JOIN users u ON a.user_id = u.id\n      WHERE a.question_id = $1\n      ORDER BY a.is_accepted DESC, a.vote_count DESC, a.created_at ASC\n    ","timestamp":"2025-08-05 00:42:56:4256"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:42:58:4258","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 00:42:58:4258","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:42:58:4258"}
{"duration":2,"level":"debug","message":"Executed query","rows":32,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 00:42:58:4258"}
{"level":"info","message":"SIGTERM received, shutting down gracefully","timestamp":"2025-08-05 00:44:59:4459"}
{"level":"info","message":"Redis connection ended","timestamp":"2025-08-05 00:44:59:4459"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 00:45:03:453"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-05 00:45:03:453"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-05 00:45:03:453"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-05 00:45:03:453"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-05 00:45:03:453"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-05 00:45:03:453"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:45:11:4511","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:45:11:4511"}
{"duration":11,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:45:11:4511"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:45:11:4511","userAgent":"curl/8.7.1"}
{"duration":3,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:45:11:4511"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:45:18:4518","userAgent":"curl/8.7.1"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:45:18:4518"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:45:18:4518","userId":1}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:45:18:4518","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:45:18:4518"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:45:18:4518"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:45:18:4518"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:45:18:4518"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:45:18:4518"}
{"action":"question_created","details":{"questionId":18,"title":"Watson AI Model Deployment Issue"},"level":"info","message":"User action","timestamp":"2025-08-05 00:45:18:4518","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:45:27:4527","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:45:27:4527"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:45:27:4527","userId":1}
{"ip":"::1","level":"info","message":"POST /api/agents/suggestions","timestamp":"2025-08-05 00:45:27:4527","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:45:41:4541","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:45:41:4541"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:45:41:4541","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:45:41:4541"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:45:56:4556","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:45:56:4556","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:45:56:4556"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:45:56:4556"}
{"duration":9,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:45:56:4556"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:45:57:4557","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:45:57:4557","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:45:57:4557"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:45:57:4557"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:45:57:4557","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:45:57:4557"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:45:57:4557","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:45:57:4557"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:46:33:4633","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:46:33:4633"}
{"duration":8,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:46:33:4633"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:46:33:4633","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:46:33:4633"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:46:42:4642","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:46:42:4642"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:46:42:4642","userId":1}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:46:42:4642","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:46:42:4642"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:46:42:4642"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:46:42:4642"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:46:42:4642"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:46:42:4642"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:46:42:4642"}
{"action":"question_created","details":{"questionId":19,"title":"Kubernetes Deployment Best Practices"},"level":"info","message":"User action","timestamp":"2025-08-05 00:46:42:4642","userId":1}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:46:50:4650","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:46:50:4650"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:46:50:4650"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:46:50:4650"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:46:50:4650"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:46:50:4650"}
{"action":"question_created","details":{"questionId":20,"title":"Kubernetes Deployment Best Practices"},"level":"info","message":"User action","timestamp":"2025-08-05 00:46:50:4650","userId":1}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:46:58:4658","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:46:58:4658"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:46:58:4658"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:46:58:4658"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:46:58:4658"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:46:58:4658"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:46:58:4658"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:46:58:4658"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:46:58:4658"}
{"action":"question_created","details":{"questionId":21,"title":"Watson AI Model Training Issues"},"level":"info","message":"User action","timestamp":"2025-08-05 00:46:58:4658","userId":1}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:47:06:476","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:47:06:476"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:47:06:476"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:47:06:476"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:47:06:476"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:47:06:476"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:47:06:476"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:47:06:476"}
{"action":"question_created","details":{"questionId":22,"title":"Docker Container Security Vulnerabilities"},"level":"info","message":"User action","timestamp":"2025-08-05 00:47:06:476","userId":1}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:47:19:4719","userAgent":"curl/8.7.1"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:47:19:4719"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:47:19:4719","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:47:19:4719"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:47:43:4743","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:47:43:4743","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:47:43:4743"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:47:43:4743"}
{"duration":9,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:47:43:4743"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:47:49:4749","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/users","timestamp":"2025-08-05 00:47:49:4749","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/questions","timestamp":"2025-08-05 00:47:49:4749","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:47:49:4749"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:47:49:4749"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) as questions_asked,\n             COUNT(DISTINCT a.id) as answers_given,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id AND q.created_at >= NOW() - INTERVAL '30 days'\n      LEFT JOIN answers a ON u.id = a.user_id AND a.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY (COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id)) DESC\n      LIMIT 20\n    ","timestamp":"2025-08-05 00:47:49:4749"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT department, COUNT(*) as count\n      FROM users\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY department\n      ORDER BY count DESC\n    ","timestamp":"2025-08-05 00:47:49:4749"}
{"duration":2,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 00:47:49:4749"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id) as total_contributions,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id\n      LEFT JOIN answers a ON u.id = a.user_id\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY total_contributions DESC, u.reputation DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 00:47:49:4749"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:47:49:4749"}
{"duration":7,"level":"debug","message":"Executed query","rows":2,"text":"\n      SELECT DATE(created_at) as date, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY DATE(created_at)\n      ORDER BY date\n    ","timestamp":"2025-08-05 00:47:49:4749"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.name as tag, COUNT(*) as count\n      FROM questions q\n      JOIN question_tags qt ON q.id = qt.question_id\n      JOIN tags t ON qt.tag_id = t.id\n      WHERE q.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY t.name\n      ORDER BY count DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 00:47:49:4749"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT status, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY status\n    ","timestamp":"2025-08-05 00:47:49:4749"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:48:01:481","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:48:01:481","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:48:01:481"}
{"duration":3,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:48:01:481"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:48:42:4842","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:48:42:4842","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:48:42:4842"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:48:42:4842"}
{"duration":8,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:48:42:4842"}
{"duration":8,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:48:42:4842"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:48:43:4843","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:48:43:4843","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:48:43:4843"}
{"duration":2,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:48:43:4843"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:48:43:4843","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:48:43:4843","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:48:43:4843"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:48:43:4843"}
{"level":"info","message":"SIGTERM received, shutting down gracefully","timestamp":"2025-08-05 00:50:07:507"}
{"level":"info","message":"Redis connection ended","timestamp":"2025-08-05 00:50:07:507"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 00:50:10:5010"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-05 00:50:10:5010"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-05 00:50:10:5010"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-05 00:50:10:5010"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-05 00:50:10:5010"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-05 00:50:10:5010"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:50:17:5017","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:50:17:5017"}
{"duration":10,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:50:17:5017"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:50:17:5017","userId":1}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:50:25:5025","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:50:25:5025"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:50:25:5025"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:50:25:5025"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:50:25:5025"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:50:25:5025"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:50:25:5025"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:50:25:5025"}
{"action":"question_created","details":{"questionId":23,"title":"IBM Cloud Pak for Data Setup"},"level":"info","message":"User action","timestamp":"2025-08-05 00:50:25:5025","userId":1}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 00:50:25:5025"}
{"action":"start","agentType":"orchestrator","confidence":1,"details":{"questionId":23},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:25:5025"}
{"context":{"teamContext":"","timestamp":"2025-08-04T19:20:25.875Z","urgency":"normal","userExpertise":[]},"level":"debug","message":"Perception completed","metadata":{"hasCode":true,"hasError":false,"technologyKeywords":["cloud","kubernetes","ibm cloud","cloud pak"],"wordCount":23},"question":{"content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?","id":23,"tags":["ibm-cloud","kubernetes","deployment","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","userId":1},"timestamp":"2025-08-05 00:50:25:5025"}
{"action":"reason","agentType":"SmartRoutingAgent","confidence":1,"details":{"questionId":23},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:25:5025"}
{"action":"reason","agentType":"DuplicateDetectionAgent","confidence":1,"details":{"questionId":23},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:25:5025"}
{"action":"reason","agentType":"KnowledgeGapAgent","confidence":1,"details":{"questionId":23},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:25:5025"}
{"action":"reason","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"questionId":23},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:25:5025"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n        SELECT DISTINCT u.id, u.first_name, u.last_name, u.email, u.department, u.team,\n               u.expertise, u.reputation, em.skill, em.proficiency_level, em.evidence_count\n        FROM users u\n        LEFT JOIN expertise_mapping em ON u.id = em.user_id\n        WHERE u.id IS NOT NULL\n        AND (\n          em.skill = $1 OR em.skill = $2\n          OR u.expertise && $3\n        )\n        ORDER BY u.reputation DESC, em.evidence_count DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 00:50:25:5025"}
{"level":"error","message":"Failed to check availability Cannot read properties of undefined (reading 'get')","stack":"TypeError: Cannot read properties of undefined (reading 'get')\n    at SmartRoutingAgent.checkAvailability (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:282:52)\n    at SmartRoutingAgent.calculateSuggestions (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:223:44)\n    at SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:32:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:50:25:5025"}
{"action":"reason_complete","agentType":"SmartRoutingAgent","confidence":0.13,"details":{"agentType":"SmartRoutingAgent","confidence":0.13,"reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:20:25.879Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:25:5025"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:50:25:5025"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:50:25:5025"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:50:25:5025"}
{"duration":6,"level":"debug","message":"Executed query","rows":0,"text":"\n          SELECT id, title, frequency, priority\n          FROM knowledge_gaps\n          WHERE title ILIKE $1 OR description ILIKE $2\n          ORDER BY frequency DESC\n          LIMIT 1\n        ","timestamp":"2025-08-05 00:50:25:5025"}
{"duration":7,"level":"debug","message":"Executed query","rows":38,"text":"\n        SELECT \n          q.title, q.content, q.created_at,\n          a.content as answer_content, a.is_accepted,\n          array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN answers a ON q.user_id = a.user_id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.user_id = $1 OR a.user_id = $1\n        GROUP BY q.id, a.id\n        ORDER BY q.created_at DESC, a.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 00:50:25:5025"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          SELECT id, title, frequency, priority\n          FROM knowledge_gaps\n          WHERE title ILIKE $1 OR description ILIKE $2\n          ORDER BY frequency DESC\n          LIMIT 1\n        ","timestamp":"2025-08-05 00:50:25:5025"}
{"action":"reason_complete","agentType":"KnowledgeGapAgent","confidence":0.5,"details":{"agentType":"KnowledgeGapAgent","confidence":0.5,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Setup\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":23,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Setup","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":23,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:25.883Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:25:5025"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n        SELECT a.content, a.created_at, q.title, q.content as question_content,\n               array_agg(t.name) as tags\n        FROM answers a\n        JOIN questions q ON a.question_id = q.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE a.user_id = $1 AND a.is_accepted = true\n        GROUP BY a.id, q.id\n        ORDER BY a.created_at DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 00:50:25:5025"}
{"action":"reason_complete","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Setup\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis","timestamp":"2025-08-04T19:20:25.884Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:25:5025"}
{"duration":7,"level":"debug","message":"Executed query","rows":15,"text":"\n        SELECT q.id, q.title, q.content, q.created_at, q.vote_count, q.view_count,\n               u.first_name, u.last_name,\n               array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN users u ON q.user_id = u.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.id != $1\n        AND (\n          (q.title ILIKE $2 OR q.content ILIKE $2) OR (q.title ILIKE $3 OR q.content ILIKE $3) OR (q.title ILIKE $4 OR q.content ILIKE $4) OR (q.title ILIKE $5 OR q.content ILIKE $5) OR (q.title ILIKE $6 OR q.content ILIKE $6) OR (q.title ILIKE $7 OR q.content ILIKE $7) OR (q.title ILIKE $8 OR q.content ILIKE $8) OR (q.title ILIKE $9 OR q.content ILIKE $9) OR (q.title ILIKE $10 OR q.content ILIKE $10)\n        )\n        GROUP BY q.id, u.first_name, u.last_name\n        ORDER BY q.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 00:50:25:5025"}
{"action":"reason_complete","agentType":"DuplicateDetectionAgent","confidence":0.7999999999999999,"details":{"agentType":"DuplicateDetectionAgent","confidence":0.7999999999999999,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Found 1 similar questions. Most similar: \"IBM Cloud Pak for Data Setup\" (80.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:25.869Z","questionId":23,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarity":0.7999999999999999,"tags":["ibm-cloud","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:25.885Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:25:5025"}
{"duplicate":{"agentType":"DuplicateDetectionAgent","confidence":0.7999999999999999,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Found 1 similar questions. Most similar: \"IBM Cloud Pak for Data Setup\" (80.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:25.869Z","questionId":23,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarity":0.7999999999999999,"tags":["ibm-cloud","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:25.885Z"},"expertise":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Setup\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis","timestamp":"2025-08-04T19:20:25.884Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"agentType":"KnowledgeGapAgent","confidence":0.5,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Setup\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":23,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Setup","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":23,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:25.883Z"},"level":"debug","message":"Reasoning completed","routing":{"agentType":"SmartRoutingAgent","confidence":0.13,"reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:20:25.879Z"},"timestamp":"2025-08-05 00:50:25:5025"}
{"action":"act","agentType":"DuplicateDetectionAgent","confidence":0.7999999999999999,"details":{"similarQuestions":[{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:25.869Z","questionId":23,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarity":0.7999999999999999,"tags":["ibm-cloud","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:25.885Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:25:5025"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:25:5025"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:25:5025"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:25:5025"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:25:5025"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:25:5025"}
{"action":"act","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:20:25.889Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:25:5025"}
{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:25.869Z","questionId":23,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarity":0.7999999999999999,"tags":["ibm-cloud","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:25.885Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.7999999999999999,"executed":true,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Found 1 similar questions. Most similar: \"IBM Cloud Pak for Data Setup\" (80.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:25.869Z","questionId":23,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarity":0.7999999999999999,"tags":["ibm-cloud","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:25.886Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:20:25.889Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Setup\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis","timestamp":"2025-08-04T19:20:25.889Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0.5,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Setup\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":23,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Setup","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":23,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:25.886Z"},"level":"debug","message":"Actions completed","routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0.13,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:20:25.885Z"},"timestamp":"2025-08-05 00:50:25:5025"}
{"action":"complete","agentType":"orchestrator","confidence":0.6074999999999999,"details":{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:25.869Z","questionId":23,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarity":0.7999999999999999,"tags":["ibm-cloud","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:25.885Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.7999999999999999,"executed":true,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Found 1 similar questions. Most similar: \"IBM Cloud Pak for Data Setup\" (80.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:25.869Z","questionId":23,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarity":0.7999999999999999,"tags":["ibm-cloud","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:25.886Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:20:25.889Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Setup\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis","timestamp":"2025-08-04T19:20:25.889Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0.5,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Setup\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":23,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Setup","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":23,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:25.886Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0.13,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:20:25.885Z"},"timestamp":"2025-08-04T19:20:25.875Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:25:5025"}
{"agentResults":{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:25.869Z","questionId":23,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarity":0.7999999999999999,"tags":["ibm-cloud","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:25.885Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.7999999999999999,"executed":true,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Found 1 similar questions. Most similar: \"IBM Cloud Pak for Data Setup\" (80.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:25.869Z","questionId":23,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarity":0.7999999999999999,"tags":["ibm-cloud","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:25.886Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:20:25.889Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Setup\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis","timestamp":"2025-08-04T19:20:25.889Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0.5,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Setup\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":23,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Setup","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":23,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:25.886Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0.13,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:20:25.885Z"},"timestamp":"2025-08-04T19:20:25.875Z"},"level":"info","message":"Agent orchestration completed","questionId":23,"timestamp":"2025-08-05 00:50:25:5025"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 00:50:25:5025"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 00:50:25:5025"}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:50:32:5032","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:50:32:5032"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:50:32:5032"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:50:32:5032"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:50:32:5032"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:50:32:5032"}
{"action":"question_created","details":{"questionId":24,"title":"IBM Cloud Pak for Data Setup"},"level":"info","message":"User action","timestamp":"2025-08-05 00:50:32:5032","userId":1}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 00:50:32:5032"}
{"action":"start","agentType":"orchestrator","confidence":1,"details":{"questionId":24},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:32:5032"}
{"context":{"teamContext":"","timestamp":"2025-08-04T19:20:32.928Z","urgency":"normal","userExpertise":[]},"level":"debug","message":"Perception completed","metadata":{"hasCode":true,"hasError":false,"technologyKeywords":["cloud","kubernetes","ibm cloud","cloud pak"],"wordCount":23},"question":{"content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?","id":24,"tags":["ibm-cloud","kubernetes","deployment","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","userId":1},"timestamp":"2025-08-05 00:50:32:5032"}
{"action":"reason","agentType":"SmartRoutingAgent","confidence":1,"details":{"questionId":24},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:32:5032"}
{"action":"reason","agentType":"DuplicateDetectionAgent","confidence":1,"details":{"questionId":24},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:32:5032"}
{"action":"reason","agentType":"KnowledgeGapAgent","confidence":1,"details":{"questionId":24},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:32:5032"}
{"action":"reason","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"questionId":24},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:32:5032"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n        SELECT DISTINCT u.id, u.first_name, u.last_name, u.email, u.department, u.team,\n               u.expertise, u.reputation, em.skill, em.proficiency_level, em.evidence_count\n        FROM users u\n        LEFT JOIN expertise_mapping em ON u.id = em.user_id\n        WHERE u.id IS NOT NULL\n        AND (\n          em.skill = $1 OR em.skill = $2\n          OR u.expertise && $3\n        )\n        ORDER BY u.reputation DESC, em.evidence_count DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 00:50:32:5032"}
{"level":"error","message":"Failed to check availability Cannot read properties of undefined (reading 'get')","stack":"TypeError: Cannot read properties of undefined (reading 'get')\n    at SmartRoutingAgent.checkAvailability (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:282:52)\n    at SmartRoutingAgent.calculateSuggestions (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:223:44)\n    at SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:32:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:50:32:5032"}
{"duration":3,"level":"debug","message":"Executed query","rows":40,"text":"\n        SELECT \n          q.title, q.content, q.created_at,\n          a.content as answer_content, a.is_accepted,\n          array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN answers a ON q.user_id = a.user_id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.user_id = $1 OR a.user_id = $1\n        GROUP BY q.id, a.id\n        ORDER BY q.created_at DESC, a.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 00:50:32:5032"}
{"action":"reason_complete","agentType":"SmartRoutingAgent","confidence":0.13,"details":{"agentType":"SmartRoutingAgent","confidence":0.13,"reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:20:32.931Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:32:5032"}
{"duration":3,"level":"debug","message":"Executed query","rows":0,"text":"\n          SELECT id, title, frequency, priority\n          FROM knowledge_gaps\n          WHERE title ILIKE $1 OR description ILIKE $2\n          ORDER BY frequency DESC\n          LIMIT 1\n        ","timestamp":"2025-08-05 00:50:32:5032"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          SELECT id, title, frequency, priority\n          FROM knowledge_gaps\n          WHERE title ILIKE $1 OR description ILIKE $2\n          ORDER BY frequency DESC\n          LIMIT 1\n        ","timestamp":"2025-08-05 00:50:32:5032"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n        SELECT a.content, a.created_at, q.title, q.content as question_content,\n               array_agg(t.name) as tags\n        FROM answers a\n        JOIN questions q ON a.question_id = q.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE a.user_id = $1 AND a.is_accepted = true\n        GROUP BY a.id, q.id\n        ORDER BY a.created_at DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 00:50:32:5032"}
{"action":"reason_complete","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Setup\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis","timestamp":"2025-08-04T19:20:32.933Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:32:5032"}
{"action":"reason_complete","agentType":"KnowledgeGapAgent","confidence":0.5,"details":{"agentType":"KnowledgeGapAgent","confidence":0.5,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Setup\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":24,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Setup","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":24,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:32.933Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:32:5032"}
{"duration":4,"level":"debug","message":"Executed query","rows":16,"text":"\n        SELECT q.id, q.title, q.content, q.created_at, q.vote_count, q.view_count,\n               u.first_name, u.last_name,\n               array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN users u ON q.user_id = u.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.id != $1\n        AND (\n          (q.title ILIKE $2 OR q.content ILIKE $2) OR (q.title ILIKE $3 OR q.content ILIKE $3) OR (q.title ILIKE $4 OR q.content ILIKE $4) OR (q.title ILIKE $5 OR q.content ILIKE $5) OR (q.title ILIKE $6 OR q.content ILIKE $6) OR (q.title ILIKE $7 OR q.content ILIKE $7) OR (q.title ILIKE $8 OR q.content ILIKE $8) OR (q.title ILIKE $9 OR q.content ILIKE $9) OR (q.title ILIKE $10 OR q.content ILIKE $10)\n        )\n        GROUP BY q.id, u.first_name, u.last_name\n        ORDER BY q.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 00:50:32:5032"}
{"action":"reason_complete","agentType":"DuplicateDetectionAgent","confidence":0.7849999999999999,"details":{"agentType":"DuplicateDetectionAgent","confidence":0.7849999999999999,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Found 2 similar questions. Most similar: \"IBM Cloud Pak for Data Setup\" (80.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:25.869Z","questionId":23,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarity":0.7999999999999999,"tags":["ibm-cloud","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:32.925Z","questionId":24,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 0.0%; Technology similarity: 0.0%","similarity":0.7,"tags":[],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:32.934Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:32:5032"}
{"duplicate":{"agentType":"DuplicateDetectionAgent","confidence":0.7849999999999999,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Found 2 similar questions. Most similar: \"IBM Cloud Pak for Data Setup\" (80.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:25.869Z","questionId":23,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarity":0.7999999999999999,"tags":["ibm-cloud","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:32.925Z","questionId":24,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 0.0%; Technology similarity: 0.0%","similarity":0.7,"tags":[],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:32.934Z"},"expertise":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Setup\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis","timestamp":"2025-08-04T19:20:32.933Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"agentType":"KnowledgeGapAgent","confidence":0.5,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Setup\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":24,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Setup","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":24,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:32.933Z"},"level":"debug","message":"Reasoning completed","routing":{"agentType":"SmartRoutingAgent","confidence":0.13,"reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:20:32.931Z"},"timestamp":"2025-08-05 00:50:32:5032"}
{"action":"act","agentType":"DuplicateDetectionAgent","confidence":0.7849999999999999,"details":{"similarQuestions":[{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:25.869Z","questionId":23,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarity":0.7999999999999999,"tags":["ibm-cloud","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:32.925Z","questionId":24,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 0.0%; Technology similarity: 0.0%","similarity":0.7,"tags":[],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:32.934Z","type":"duplicate_suggestions","warning":"Found 2 similar questions. Consider checking these before posting."},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:32:5032"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:32:5032"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:32:5032"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:32:5032"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:32:5032"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:32:5032"}
{"action":"act","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:20:32.937Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:32:5032"}
{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:25.869Z","questionId":23,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarity":0.7999999999999999,"tags":["ibm-cloud","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:32.925Z","questionId":24,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 0.0%; Technology similarity: 0.0%","similarity":0.7,"tags":[],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:32.934Z","type":"duplicate_suggestions","warning":"Found 2 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.7849999999999999,"executed":true,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Found 2 similar questions. Most similar: \"IBM Cloud Pak for Data Setup\" (80.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:25.869Z","questionId":23,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarity":0.7999999999999999,"tags":["ibm-cloud","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:32.925Z","questionId":24,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 0.0%; Technology similarity: 0.0%","similarity":0.7,"tags":[],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:32.934Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:20:32.937Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Setup\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis","timestamp":"2025-08-04T19:20:32.937Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0.5,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Setup\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":24,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Setup","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":24,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:32.934Z"},"level":"debug","message":"Actions completed","routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0.13,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:20:32.934Z"},"timestamp":"2025-08-05 00:50:32:5032"}
{"action":"complete","agentType":"orchestrator","confidence":0.60375,"details":{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:25.869Z","questionId":23,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarity":0.7999999999999999,"tags":["ibm-cloud","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:32.925Z","questionId":24,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 0.0%; Technology similarity: 0.0%","similarity":0.7,"tags":[],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:32.934Z","type":"duplicate_suggestions","warning":"Found 2 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.7849999999999999,"executed":true,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Found 2 similar questions. Most similar: \"IBM Cloud Pak for Data Setup\" (80.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:25.869Z","questionId":23,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarity":0.7999999999999999,"tags":["ibm-cloud","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:32.925Z","questionId":24,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 0.0%; Technology similarity: 0.0%","similarity":0.7,"tags":[],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:32.934Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:20:32.937Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Setup\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis","timestamp":"2025-08-04T19:20:32.937Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0.5,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Setup\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":24,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Setup","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":24,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:32.934Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0.13,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:20:32.934Z"},"timestamp":"2025-08-04T19:20:32.928Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:32:5032"}
{"agentResults":{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:25.869Z","questionId":23,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarity":0.7999999999999999,"tags":["ibm-cloud","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:32.925Z","questionId":24,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 0.0%; Technology similarity: 0.0%","similarity":0.7,"tags":[],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:32.934Z","type":"duplicate_suggestions","warning":"Found 2 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.7849999999999999,"executed":true,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Found 2 similar questions. Most similar: \"IBM Cloud Pak for Data Setup\" (80.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:25.869Z","questionId":23,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 50.0%; Technology similarity: 0.0%","similarity":0.7999999999999999,"tags":["ibm-cloud","cloud-pak"],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I need help setting up IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for deployment?...","createdAt":"2025-08-04T19:20:32.925Z","questionId":24,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 0.0%; Technology similarity: 0.0%","similarity":0.7,"tags":[],"title":"IBM Cloud Pak for Data Setup","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:32.934Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:20:32.937Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Setup\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis","timestamp":"2025-08-04T19:20:32.937Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0.5,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Setup\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":24,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Setup","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":24,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"IBM Cloud Pak for Data Setup\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:32.934Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0.13,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:20:32.934Z"},"timestamp":"2025-08-04T19:20:32.928Z"},"level":"info","message":"Agent orchestration completed","questionId":24,"timestamp":"2025-08-05 00:50:32:5032"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 00:50:32:5032"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 00:50:32:5032"}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:50:40:5040","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:50:40:5040"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:50:40:5040"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:50:40:5040"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:50:40:5040"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:50:40:5040"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:50:40:5040"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:50:40:5040"}
{"action":"question_created","details":{"questionId":25,"title":"Watson AI Model Documentation Missing"},"level":"info","message":"User action","timestamp":"2025-08-05 00:50:40:5040","userId":1}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 00:50:40:5040"}
{"action":"start","agentType":"orchestrator","confidence":1,"details":{"questionId":25},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:40:5040"}
{"context":{"teamContext":"","timestamp":"2025-08-04T19:20:40.525Z","urgency":"normal","userExpertise":[]},"level":"debug","message":"Perception completed","metadata":{"hasCode":true,"hasError":false,"technologyKeywords":["watson","ai"],"wordCount":23},"question":{"content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing.","id":25,"tags":["watson","ai","documentation","training","missing"],"title":"Watson AI Model Documentation Missing","userId":1},"timestamp":"2025-08-05 00:50:40:5040"}
{"action":"reason","agentType":"SmartRoutingAgent","confidence":1,"details":{"questionId":25},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:40:5040"}
{"action":"reason","agentType":"DuplicateDetectionAgent","confidence":1,"details":{"questionId":25},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:40:5040"}
{"action":"reason","agentType":"KnowledgeGapAgent","confidence":1,"details":{"questionId":25},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:40:5040"}
{"action":"reason","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"questionId":25},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:40:5040"}
{"duration":2,"level":"debug","message":"Executed query","rows":42,"text":"\n        SELECT \n          q.title, q.content, q.created_at,\n          a.content as answer_content, a.is_accepted,\n          array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN answers a ON q.user_id = a.user_id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.user_id = $1 OR a.user_id = $1\n        GROUP BY q.id, a.id\n        ORDER BY q.created_at DESC, a.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 00:50:40:5040"}
{"duration":4,"level":"debug","message":"Executed query","rows":0,"text":"\n        SELECT DISTINCT u.id, u.first_name, u.last_name, u.email, u.department, u.team,\n               u.expertise, u.reputation, em.skill, em.proficiency_level, em.evidence_count\n        FROM users u\n        LEFT JOIN expertise_mapping em ON u.id = em.user_id\n        WHERE u.id IS NOT NULL\n        AND (\n          em.skill = $1\n          OR u.expertise && $2\n        )\n        ORDER BY u.reputation DESC, em.evidence_count DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 00:50:40:5040"}
{"duration":4,"level":"debug","message":"Executed query","rows":0,"text":"\n          SELECT id, title, frequency, priority\n          FROM knowledge_gaps\n          WHERE title ILIKE $1 OR description ILIKE $2\n          ORDER BY frequency DESC\n          LIMIT 1\n        ","timestamp":"2025-08-05 00:50:40:5040"}
{"duration":4,"level":"debug","message":"Executed query","rows":11,"text":"\n        SELECT q.id, q.title, q.content, q.created_at, q.vote_count, q.view_count,\n               u.first_name, u.last_name,\n               array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN users u ON q.user_id = u.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.id != $1\n        AND (\n          (q.title ILIKE $2 OR q.content ILIKE $2) OR (q.title ILIKE $3 OR q.content ILIKE $3) OR (q.title ILIKE $4 OR q.content ILIKE $4) OR (q.title ILIKE $5 OR q.content ILIKE $5) OR (q.title ILIKE $6 OR q.content ILIKE $6) OR (q.title ILIKE $7 OR q.content ILIKE $7) OR (q.title ILIKE $8 OR q.content ILIKE $8)\n        )\n        GROUP BY q.id, u.first_name, u.last_name\n        ORDER BY q.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 00:50:40:5040"}
{"duration":2,"level":"debug","message":"Executed query","rows":0,"text":"\n        SELECT a.content, a.created_at, q.title, q.content as question_content,\n               array_agg(t.name) as tags\n        FROM answers a\n        JOIN questions q ON a.question_id = q.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE a.user_id = $1 AND a.is_accepted = true\n        GROUP BY a.id, q.id\n        ORDER BY a.created_at DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 00:50:40:5040"}
{"action":"reason_complete","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"watson_ai","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned watson in question","skill":"watson_ai","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"Watson AI Model Documentation Missing\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis","timestamp":"2025-08-04T19:20:40.531Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:40:5040"}
{"action":"reason_complete","agentType":"SmartRoutingAgent","confidence":0,"details":{"agentType":"SmartRoutingAgent","confidence":0,"reasoning":"Question requires expertise in: watson_ai. Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:20:40.529Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:40:5040"}
{"action":"reason_complete","agentType":"KnowledgeGapAgent","confidence":0.30000000000000004,"details":{"agentType":"KnowledgeGapAgent","confidence":0.30000000000000004,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":1},"knowledgeGaps":[{"description":"Users need better documentation for Watson AI services and APIs.","frequency":1,"priority":"high","questionId":25,"technologies":["watson"],"title":"Watson AI documentation gaps","type":"technology_specific"}],"reasoning":"Analyzed question: \"Watson AI Model Documentation Missing\". Identified 1 potential knowledge gaps. High priority gaps: 1. Most critical: Watson AI documentation gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:40.530Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:40:5040"}
{"action":"reason_complete","agentType":"DuplicateDetectionAgent","confidence":0.74,"details":{"agentType":"DuplicateDetectionAgent","confidence":0.74,"reasoning":"Analyzed question: \"Watson AI Model Documentation Missing\". Found 1 similar questions. Most similar: \"Watson AI Model Documentation Missing\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing....","createdAt":"2025-08-04T19:20:40.516Z","questionId":25,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["missing"],"title":"Watson AI Model Documentation Missing","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:40.531Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:40:5040"}
{"duplicate":{"agentType":"DuplicateDetectionAgent","confidence":0.74,"reasoning":"Analyzed question: \"Watson AI Model Documentation Missing\". Found 1 similar questions. Most similar: \"Watson AI Model Documentation Missing\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing....","createdAt":"2025-08-04T19:20:40.516Z","questionId":25,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["missing"],"title":"Watson AI Model Documentation Missing","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:40.531Z"},"expertise":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"watson_ai","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned watson in question","skill":"watson_ai","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"Watson AI Model Documentation Missing\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis","timestamp":"2025-08-04T19:20:40.531Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"agentType":"KnowledgeGapAgent","confidence":0.30000000000000004,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":1},"knowledgeGaps":[{"description":"Users need better documentation for Watson AI services and APIs.","frequency":1,"priority":"high","questionId":25,"technologies":["watson"],"title":"Watson AI documentation gaps","type":"technology_specific"}],"reasoning":"Analyzed question: \"Watson AI Model Documentation Missing\". Identified 1 potential knowledge gaps. High priority gaps: 1. Most critical: Watson AI documentation gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:40.530Z"},"level":"debug","message":"Reasoning completed","routing":{"agentType":"SmartRoutingAgent","confidence":0,"reasoning":"Question requires expertise in: watson_ai. Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:20:40.529Z"},"timestamp":"2025-08-05 00:50:40:5040"}
{"action":"act","agentType":"DuplicateDetectionAgent","confidence":0.74,"details":{"similarQuestions":[{"author":"John Doe","content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing....","createdAt":"2025-08-04T19:20:40.516Z","questionId":25,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["missing"],"title":"Watson AI Model Documentation Missing","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:40.533Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:40:5040"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:40:5040"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:40:5040"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:40:5040"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:40:5040"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:40:5040"}
{"action":"act","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:20:40.540Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"watson_ai"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:40:5040"}
{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing....","createdAt":"2025-08-04T19:20:40.516Z","questionId":25,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["missing"],"title":"Watson AI Model Documentation Missing","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:40.533Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.74,"executed":true,"reasoning":"Analyzed question: \"Watson AI Model Documentation Missing\". Found 1 similar questions. Most similar: \"Watson AI Model Documentation Missing\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing....","createdAt":"2025-08-04T19:20:40.516Z","questionId":25,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["missing"],"title":"Watson AI Model Documentation Missing","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:40.533Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:20:40.540Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"watson_ai"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"watson_ai","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned watson in question","skill":"watson_ai","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"Watson AI Model Documentation Missing\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis","timestamp":"2025-08-04T19:20:40.540Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0.30000000000000004,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":1},"knowledgeGaps":[{"description":"Users need better documentation for Watson AI services and APIs.","frequency":1,"priority":"high","questionId":25,"technologies":["watson"],"title":"Watson AI documentation gaps","type":"technology_specific"}],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"Watson AI Model Documentation Missing\". Identified 1 potential knowledge gaps. High priority gaps: 1. Most critical: Watson AI documentation gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:40.533Z"},"level":"debug","message":"Actions completed","routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: watson_ai. Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:20:40.533Z"},"timestamp":"2025-08-05 00:50:40:5040"}
{"action":"complete","agentType":"orchestrator","confidence":0.68,"details":{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing....","createdAt":"2025-08-04T19:20:40.516Z","questionId":25,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["missing"],"title":"Watson AI Model Documentation Missing","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:40.533Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.74,"executed":true,"reasoning":"Analyzed question: \"Watson AI Model Documentation Missing\". Found 1 similar questions. Most similar: \"Watson AI Model Documentation Missing\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing....","createdAt":"2025-08-04T19:20:40.516Z","questionId":25,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["missing"],"title":"Watson AI Model Documentation Missing","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:40.533Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:20:40.540Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"watson_ai"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"watson_ai","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned watson in question","skill":"watson_ai","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"Watson AI Model Documentation Missing\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis","timestamp":"2025-08-04T19:20:40.540Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0.30000000000000004,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":1},"knowledgeGaps":[{"description":"Users need better documentation for Watson AI services and APIs.","frequency":1,"priority":"high","questionId":25,"technologies":["watson"],"title":"Watson AI documentation gaps","type":"technology_specific"}],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"Watson AI Model Documentation Missing\". Identified 1 potential knowledge gaps. High priority gaps: 1. Most critical: Watson AI documentation gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:40.533Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: watson_ai. Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:20:40.533Z"},"timestamp":"2025-08-04T19:20:40.525Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:40:5040"}
{"agentResults":{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing....","createdAt":"2025-08-04T19:20:40.516Z","questionId":25,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["missing"],"title":"Watson AI Model Documentation Missing","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:40.533Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.74,"executed":true,"reasoning":"Analyzed question: \"Watson AI Model Documentation Missing\". Found 1 similar questions. Most similar: \"Watson AI Model Documentation Missing\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing....","createdAt":"2025-08-04T19:20:40.516Z","questionId":25,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["missing"],"title":"Watson AI Model Documentation Missing","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:40.533Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:20:40.540Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"watson_ai"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":2,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"watson_ai","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned watson in question","skill":"watson_ai","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"Watson AI Model Documentation Missing\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis","timestamp":"2025-08-04T19:20:40.540Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0.30000000000000004,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":1},"knowledgeGaps":[{"description":"Users need better documentation for Watson AI services and APIs.","frequency":1,"priority":"high","questionId":25,"technologies":["watson"],"title":"Watson AI documentation gaps","type":"technology_specific"}],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"Watson AI Model Documentation Missing\". Identified 1 potential knowledge gaps. High priority gaps: 1. Most critical: Watson AI documentation gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:40.533Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: watson_ai. Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:20:40.533Z"},"timestamp":"2025-08-04T19:20:40.525Z"},"level":"info","message":"Agent orchestration completed","questionId":25,"timestamp":"2025-08-05 00:50:40:5040"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 00:50:40:5040"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 00:50:40:5040"}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:50:51:5051","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:50:51:5051"}
{"action":"question_created","details":{"questionId":26,"title":"Docker Security Best Practices"},"level":"info","message":"User action","timestamp":"2025-08-05 00:50:51:5051","userId":1}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 00:50:51:5051"}
{"action":"start","agentType":"orchestrator","confidence":1,"details":{"questionId":26},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:51:5051"}
{"context":{"teamContext":"","timestamp":"2025-08-04T19:20:51.547Z","urgency":"normal","userExpertise":[]},"level":"debug","message":"Perception completed","metadata":{"hasCode":true,"hasError":false,"technologyKeywords":["docker","security","ai"],"wordCount":22},"question":{"content":"I need to implement security best practices for our Docker containers. How can I scan for vulnerabilities and ensure secure container deployment?","id":26,"tags":["docker","security","containers","vulnerabilities","best-practices"],"title":"Docker Security Best Practices","userId":1},"timestamp":"2025-08-05 00:50:51:5051"}
{"action":"reason","agentType":"SmartRoutingAgent","confidence":1,"details":{"questionId":26},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:51:5051"}
{"action":"reason","agentType":"DuplicateDetectionAgent","confidence":1,"details":{"questionId":26},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:51:5051"}
{"action":"reason","agentType":"KnowledgeGapAgent","confidence":1,"details":{"questionId":26},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:51:5051"}
{"action":"reason","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"questionId":26},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          SELECT id, title, frequency, priority\n          FROM knowledge_gaps\n          WHERE title ILIKE $1 OR description ILIKE $2\n          ORDER BY frequency DESC\n          LIMIT 1\n        ","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":2,"level":"debug","message":"Executed query","rows":2,"text":"\n        SELECT DISTINCT u.id, u.first_name, u.last_name, u.email, u.department, u.team,\n               u.expertise, u.reputation, em.skill, em.proficiency_level, em.evidence_count\n        FROM users u\n        LEFT JOIN expertise_mapping em ON u.id = em.user_id\n        WHERE u.id IS NOT NULL\n        AND (\n          em.skill = $1 OR em.skill = $2 OR em.skill = $3\n          OR u.expertise && $4\n        )\n        ORDER BY u.reputation DESC, em.evidence_count DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 00:50:51:5051"}
{"level":"error","message":"Failed to check availability Cannot read properties of undefined (reading 'get')","stack":"TypeError: Cannot read properties of undefined (reading 'get')\n    at SmartRoutingAgent.checkAvailability (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:282:52)\n    at SmartRoutingAgent.calculateSuggestions (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:223:44)\n    at SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:32:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:50:51:5051"}
{"level":"error","message":"Failed to check availability Cannot read properties of undefined (reading 'get')","stack":"TypeError: Cannot read properties of undefined (reading 'get')\n    at SmartRoutingAgent.checkAvailability (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:282:52)\n    at SmartRoutingAgent.calculateSuggestions (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:223:44)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:32:27)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":2,"level":"debug","message":"Executed query","rows":44,"text":"\n        SELECT \n          q.title, q.content, q.created_at,\n          a.content as answer_content, a.is_accepted,\n          array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN answers a ON q.user_id = a.user_id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.user_id = $1 OR a.user_id = $1\n        GROUP BY q.id, a.id\n        ORDER BY q.created_at DESC, a.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          SELECT id, title, frequency, priority\n          FROM knowledge_gaps\n          WHERE title ILIKE $1 OR description ILIKE $2\n          ORDER BY frequency DESC\n          LIMIT 1\n        ","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":1,"level":"debug","message":"Executed query","rows":19,"text":"\n        SELECT q.id, q.title, q.content, q.created_at, q.vote_count, q.view_count,\n               u.first_name, u.last_name,\n               array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN users u ON q.user_id = u.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.id != $1\n        AND (\n          (q.title ILIKE $2 OR q.content ILIKE $2) OR (q.title ILIKE $3 OR q.content ILIKE $3) OR (q.title ILIKE $4 OR q.content ILIKE $4) OR (q.title ILIKE $5 OR q.content ILIKE $5) OR (q.title ILIKE $6 OR q.content ILIKE $6) OR (q.title ILIKE $7 OR q.content ILIKE $7) OR (q.title ILIKE $8 OR q.content ILIKE $8) OR (q.title ILIKE $9 OR q.content ILIKE $9)\n        )\n        GROUP BY q.id, u.first_name, u.last_name\n        ORDER BY q.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          SELECT id, title, frequency, priority\n          FROM knowledge_gaps\n          WHERE title ILIKE $1 OR description ILIKE $2\n          ORDER BY frequency DESC\n          LIMIT 1\n        ","timestamp":"2025-08-05 00:50:51:5051"}
{"action":"reason_complete","agentType":"SmartRoutingAgent","confidence":0.13,"details":{"agentType":"SmartRoutingAgent","confidence":0.13,"reasoning":"Question requires expertise in: docker, containerization, security. Found 2 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["docker"],"team":"Red Hat","userId":5},{"confidence":0.13,"department":"Security","email":"mike.johnson@ibm.com","firstName":"Mike","lastName":"Johnson","reasoning":"Reputation: 0; Skill matches: security; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["security"],"team":"Cyber Security","userId":8}],"timestamp":"2025-08-04T19:20:51.549Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n        SELECT a.content, a.created_at, q.title, q.content as question_content,\n               array_agg(t.name) as tags\n        FROM answers a\n        JOIN questions q ON a.question_id = q.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE a.user_id = $1 AND a.is_accepted = true\n        GROUP BY a.id, q.id\n        ORDER BY a.created_at DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 00:50:51:5051"}
{"action":"reason_complete","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.76,"evidenceCount":5,"proficiency":"intermediate","skill":"security","sources":["question_content","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"docker","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned docker in question","skill":"docker","source":"question_content"},{"confidence":0.6,"evidence":"Mentioned security in question","skill":"security","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"Docker Security Best Practices\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 76.0% confidence). Evidence sources: question_content, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:20:51.550Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:51:5051"}
{"action":"reason_complete","agentType":"DuplicateDetectionAgent","confidence":0.74,"details":{"agentType":"DuplicateDetectionAgent","confidence":0.74,"reasoning":"Analyzed question: \"Docker Security Best Practices\". Found 1 similar questions. Most similar: \"Docker Security Best Practices\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need to implement security best practices for our Docker containers. How can I scan for vulnerabilities and ensure secure container deployment?...","createdAt":"2025-08-04T19:20:51.543Z","questionId":26,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["best-practices"],"title":"Docker Security Best Practices","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:51.550Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:51:5051"}
{"action":"reason_complete","agentType":"KnowledgeGapAgent","confidence":0.7,"details":{"agentType":"KnowledgeGapAgent","confidence":0.7,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":3},"knowledgeGaps":[{"description":"Users are asking about best practices for \"Docker Security Best Practices\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":26,"technologies":["docker","security","ai"],"title":"Best practices guide needed for: Docker Security Best Practices","type":"best_practices"},{"description":"Users need help with Docker containerization and best practices.","frequency":1,"priority":"medium","questionId":26,"technologies":["docker"],"title":"Docker containerization guides","type":"technology_specific"},{"description":"Users need comprehensive security guidelines and best practices.","frequency":1,"priority":"high","questionId":26,"technologies":["security"],"title":"Security best practices","type":"technology_specific"}],"reasoning":"Analyzed question: \"Docker Security Best Practices\". Identified 3 potential knowledge gaps. High priority gaps: 1. Most critical: Security best practices. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:51.550Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:51:5051"}
{"duplicate":{"agentType":"DuplicateDetectionAgent","confidence":0.74,"reasoning":"Analyzed question: \"Docker Security Best Practices\". Found 1 similar questions. Most similar: \"Docker Security Best Practices\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need to implement security best practices for our Docker containers. How can I scan for vulnerabilities and ensure secure container deployment?...","createdAt":"2025-08-04T19:20:51.543Z","questionId":26,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["best-practices"],"title":"Docker Security Best Practices","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:51.550Z"},"expertise":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.76,"evidenceCount":5,"proficiency":"intermediate","skill":"security","sources":["question_content","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"docker","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned docker in question","skill":"docker","source":"question_content"},{"confidence":0.6,"evidence":"Mentioned security in question","skill":"security","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"Docker Security Best Practices\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 76.0% confidence). Evidence sources: question_content, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:20:51.550Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"agentType":"KnowledgeGapAgent","confidence":0.7,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":3},"knowledgeGaps":[{"description":"Users are asking about best practices for \"Docker Security Best Practices\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":26,"technologies":["docker","security","ai"],"title":"Best practices guide needed for: Docker Security Best Practices","type":"best_practices"},{"description":"Users need help with Docker containerization and best practices.","frequency":1,"priority":"medium","questionId":26,"technologies":["docker"],"title":"Docker containerization guides","type":"technology_specific"},{"description":"Users need comprehensive security guidelines and best practices.","frequency":1,"priority":"high","questionId":26,"technologies":["security"],"title":"Security best practices","type":"technology_specific"}],"reasoning":"Analyzed question: \"Docker Security Best Practices\". Identified 3 potential knowledge gaps. High priority gaps: 1. Most critical: Security best practices. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:51.550Z"},"level":"debug","message":"Reasoning completed","routing":{"agentType":"SmartRoutingAgent","confidence":0.13,"reasoning":"Question requires expertise in: docker, containerization, security. Found 2 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["docker"],"team":"Red Hat","userId":5},{"confidence":0.13,"department":"Security","email":"mike.johnson@ibm.com","firstName":"Mike","lastName":"Johnson","reasoning":"Reputation: 0; Skill matches: security; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["security"],"team":"Cyber Security","userId":8}],"timestamp":"2025-08-04T19:20:51.549Z"},"timestamp":"2025-08-05 00:50:51:5051"}
{"action":"act","agentType":"DuplicateDetectionAgent","confidence":0.74,"details":{"similarQuestions":[{"author":"John Doe","content":"I need to implement security best practices for our Docker containers. How can I scan for vulnerabilities and ensure secure container deployment?...","createdAt":"2025-08-04T19:20:51.543Z","questionId":26,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["best-practices"],"title":"Docker Security Best Practices","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:51.550Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:51:5051"}
{"error":"there is no unique or exclusion constraint matching the ON CONFLICT specification","level":"error","message":"Database query error:","params":["Security best practices","Users need comprehensive security guidelines and best practices.",1,"high","open"],"text":"\n              INSERT INTO knowledge_gaps (title, description, frequency, priority, status)\n              VALUES ($1, $2, $3, $4, $5)\n              ON CONFLICT (title) DO UPDATE SET\n                frequency = knowledge_gaps.frequency + 1,\n                updated_at = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:51:5051"}
{"code":"42P10","file":"plancat.c","length":148,"level":"error","line":"879","message":"Failed to create knowledge gap there is no unique or exclusion constraint matching the ON CONFLICT specification","name":"error","routine":"infer_arbiter_indexes","severity":"ERROR","stack":"error: there is no unique or exclusion constraint matching the ON CONFLICT specification\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async KnowledgeGapAgent.act (/Users/sandeep22/IBM_project/server/agents/knowledgeGapAgent.js:74:28)\n    at async AgentOrchestrator.act (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:137:26)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:46:23)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:50:51:5051"}
{"action":"act","agentType":"KnowledgeGapAgent","confidence":0.7,"details":{"gaps":[],"highPriorityGaps":0,"timestamp":"2025-08-04T19:20:51.552Z","totalGaps":3,"type":"knowledge_gaps_identified"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:50:51:5051"}
{"action":"act","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:20:51.554Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.76,"evidenceCount":5,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"docker"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:51:5051"}
{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I need to implement security best practices for our Docker containers. How can I scan for vulnerabilities and ensure secure container deployment?...","createdAt":"2025-08-04T19:20:51.543Z","questionId":26,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["best-practices"],"title":"Docker Security Best Practices","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:51.550Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.74,"executed":true,"reasoning":"Analyzed question: \"Docker Security Best Practices\". Found 1 similar questions. Most similar: \"Docker Security Best Practices\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need to implement security best practices for our Docker containers. How can I scan for vulnerabilities and ensure secure container deployment?...","createdAt":"2025-08-04T19:20:51.543Z","questionId":26,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["best-practices"],"title":"Docker Security Best Practices","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:51.550Z"},"expertise":{"action":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:20:51.554Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.76,"evidenceCount":5,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"docker"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.76,"evidenceCount":5,"proficiency":"intermediate","skill":"security","sources":["question_content","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"docker","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned docker in question","skill":"docker","source":"question_content"},{"confidence":0.6,"evidence":"Mentioned security in question","skill":"security","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"Docker Security Best Practices\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 76.0% confidence). Evidence sources: question_content, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:20:51.554Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":{"gaps":[],"highPriorityGaps":0,"timestamp":"2025-08-04T19:20:51.552Z","totalGaps":3,"type":"knowledge_gaps_identified"},"agentType":"KnowledgeGapAgent","confidence":0.7,"executed":true,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":3},"knowledgeGaps":[{"description":"Users are asking about best practices for \"Docker Security Best Practices\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":26,"technologies":["docker","security","ai"],"title":"Best practices guide needed for: Docker Security Best Practices","type":"best_practices"},{"description":"Users need help with Docker containerization and best practices.","frequency":1,"priority":"medium","questionId":26,"technologies":["docker"],"title":"Docker containerization guides","type":"technology_specific"},{"description":"Users need comprehensive security guidelines and best practices.","frequency":1,"priority":"high","questionId":26,"technologies":["security"],"title":"Security best practices","type":"technology_specific"}],"reasoning":"Analyzed question: \"Docker Security Best Practices\". Identified 3 potential knowledge gaps. High priority gaps: 1. Most critical: Security best practices. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:51.552Z"},"level":"debug","message":"Actions completed","routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0.13,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: docker, containerization, security. Found 2 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["docker"],"team":"Red Hat","userId":5},{"confidence":0.13,"department":"Security","email":"mike.johnson@ibm.com","firstName":"Mike","lastName":"Johnson","reasoning":"Reputation: 0; Skill matches: security; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["security"],"team":"Cyber Security","userId":8}],"timestamp":"2025-08-04T19:20:51.550Z"},"timestamp":"2025-08-05 00:50:51:5051"}
{"action":"complete","agentType":"orchestrator","confidence":0.6425,"details":{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I need to implement security best practices for our Docker containers. How can I scan for vulnerabilities and ensure secure container deployment?...","createdAt":"2025-08-04T19:20:51.543Z","questionId":26,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["best-practices"],"title":"Docker Security Best Practices","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:51.550Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.74,"executed":true,"reasoning":"Analyzed question: \"Docker Security Best Practices\". Found 1 similar questions. Most similar: \"Docker Security Best Practices\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need to implement security best practices for our Docker containers. How can I scan for vulnerabilities and ensure secure container deployment?...","createdAt":"2025-08-04T19:20:51.543Z","questionId":26,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["best-practices"],"title":"Docker Security Best Practices","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:51.550Z"},"expertise":{"action":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:20:51.554Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.76,"evidenceCount":5,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"docker"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.76,"evidenceCount":5,"proficiency":"intermediate","skill":"security","sources":["question_content","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"docker","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned docker in question","skill":"docker","source":"question_content"},{"confidence":0.6,"evidence":"Mentioned security in question","skill":"security","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"Docker Security Best Practices\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 76.0% confidence). Evidence sources: question_content, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:20:51.554Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":{"gaps":[],"highPriorityGaps":0,"timestamp":"2025-08-04T19:20:51.552Z","totalGaps":3,"type":"knowledge_gaps_identified"},"agentType":"KnowledgeGapAgent","confidence":0.7,"executed":true,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":3},"knowledgeGaps":[{"description":"Users are asking about best practices for \"Docker Security Best Practices\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":26,"technologies":["docker","security","ai"],"title":"Best practices guide needed for: Docker Security Best Practices","type":"best_practices"},{"description":"Users need help with Docker containerization and best practices.","frequency":1,"priority":"medium","questionId":26,"technologies":["docker"],"title":"Docker containerization guides","type":"technology_specific"},{"description":"Users need comprehensive security guidelines and best practices.","frequency":1,"priority":"high","questionId":26,"technologies":["security"],"title":"Security best practices","type":"technology_specific"}],"reasoning":"Analyzed question: \"Docker Security Best Practices\". Identified 3 potential knowledge gaps. High priority gaps: 1. Most critical: Security best practices. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:51.552Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0.13,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: docker, containerization, security. Found 2 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["docker"],"team":"Red Hat","userId":5},{"confidence":0.13,"department":"Security","email":"mike.johnson@ibm.com","firstName":"Mike","lastName":"Johnson","reasoning":"Reputation: 0; Skill matches: security; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["security"],"team":"Cyber Security","userId":8}],"timestamp":"2025-08-04T19:20:51.550Z"},"timestamp":"2025-08-04T19:20:51.547Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:50:51:5051"}
{"agentResults":{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I need to implement security best practices for our Docker containers. How can I scan for vulnerabilities and ensure secure container deployment?...","createdAt":"2025-08-04T19:20:51.543Z","questionId":26,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["best-practices"],"title":"Docker Security Best Practices","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:51.550Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.74,"executed":true,"reasoning":"Analyzed question: \"Docker Security Best Practices\". Found 1 similar questions. Most similar: \"Docker Security Best Practices\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need to implement security best practices for our Docker containers. How can I scan for vulnerabilities and ensure secure container deployment?...","createdAt":"2025-08-04T19:20:51.543Z","questionId":26,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["best-practices"],"title":"Docker Security Best Practices","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:20:51.550Z"},"expertise":{"action":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:20:51.554Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.76,"evidenceCount":5,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"docker"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.76,"evidenceCount":5,"proficiency":"intermediate","skill":"security","sources":["question_content","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"docker","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned docker in question","skill":"docker","source":"question_content"},{"confidence":0.6,"evidence":"Mentioned security in question","skill":"security","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"Docker Security Best Practices\". Discovered 5 expertise areas. Strongest expertise: security (intermediate level, 76.0% confidence). Evidence sources: question_content, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:20:51.554Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":{"gaps":[],"highPriorityGaps":0,"timestamp":"2025-08-04T19:20:51.552Z","totalGaps":3,"type":"knowledge_gaps_identified"},"agentType":"KnowledgeGapAgent","confidence":0.7,"executed":true,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":3},"knowledgeGaps":[{"description":"Users are asking about best practices for \"Docker Security Best Practices\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":26,"technologies":["docker","security","ai"],"title":"Best practices guide needed for: Docker Security Best Practices","type":"best_practices"},{"description":"Users need help with Docker containerization and best practices.","frequency":1,"priority":"medium","questionId":26,"technologies":["docker"],"title":"Docker containerization guides","type":"technology_specific"},{"description":"Users need comprehensive security guidelines and best practices.","frequency":1,"priority":"high","questionId":26,"technologies":["security"],"title":"Security best practices","type":"technology_specific"}],"reasoning":"Analyzed question: \"Docker Security Best Practices\". Identified 3 potential knowledge gaps. High priority gaps: 1. Most critical: Security best practices. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:20:51.552Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0.13,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: docker, containerization, security. Found 2 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["docker"],"team":"Red Hat","userId":5},{"confidence":0.13,"department":"Security","email":"mike.johnson@ibm.com","firstName":"Mike","lastName":"Johnson","reasoning":"Reputation: 0; Skill matches: security; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["security"],"team":"Cyber Security","userId":8}],"timestamp":"2025-08-04T19:20:51.550Z"},"timestamp":"2025-08-04T19:20:51.547Z"},"level":"info","message":"Agent orchestration completed","questionId":26,"timestamp":"2025-08-05 00:50:51:5051"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 00:50:51:5051"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 00:50:51:5051"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:50:58:5058","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:50:58:5058"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:50:58:5058","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":9,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:50:58:5058"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:51:24:5124","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:51:24:5124","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:51:24:5124"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:51:24:5124"}
{"duration":10,"level":"debug","message":"Executed query","rows":9,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:51:24:5124"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:51:25:5125","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:51:25:5125","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:51:25:5125","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:51:25:5125"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:51:25:5125"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:51:25:5125","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:51:25:5125"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:51:25:5125"}
{"duration":12,"level":"debug","message":"Executed query","rows":9,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:51:25:5125"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:52:07:527","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:52:07:527"}
{"duration":6,"level":"debug","message":"Executed query","rows":9,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:52:07:527"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:52:14:5214","userAgent":"curl/8.7.1"}
{"duration":4,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:52:14:5214"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:52:14:5214","userId":1}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:52:21:5221","userAgent":"curl/8.7.1"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:52:21:5221"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:21:5221"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:21:5221"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:21:5221"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:21:5221"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:21:5221"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:52:21:5221"}
{"action":"question_created","details":{"questionId":27,"title":"IBM Cloud Pak for Data Deployment"},"level":"info","message":"User action","timestamp":"2025-08-05 00:52:21:5221","userId":1}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 00:52:21:5221"}
{"action":"start","agentType":"orchestrator","confidence":1,"details":{"questionId":27},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:21:5221"}
{"context":{"teamContext":"","timestamp":"2025-08-04T19:22:21.472Z","urgency":"normal","userExpertise":[]},"level":"debug","message":"Perception completed","metadata":{"hasCode":true,"hasError":false,"technologyKeywords":["cloud","kubernetes","ibm cloud","cloud pak"],"wordCount":23},"question":{"content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?","id":27,"tags":["ibm-cloud","kubernetes","deployment","cloud-pak","production"],"title":"IBM Cloud Pak for Data Deployment","userId":1},"timestamp":"2025-08-05 00:52:21:5221"}
{"action":"reason","agentType":"SmartRoutingAgent","confidence":1,"details":{"questionId":27},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:21:5221"}
{"action":"reason","agentType":"DuplicateDetectionAgent","confidence":1,"details":{"questionId":27},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:21:5221"}
{"action":"reason","agentType":"KnowledgeGapAgent","confidence":1,"details":{"questionId":27},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:21:5221"}
{"action":"reason","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"questionId":27},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:21:5221"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n        SELECT DISTINCT u.id, u.first_name, u.last_name, u.email, u.department, u.team,\n               u.expertise, u.reputation, em.skill, em.proficiency_level, em.evidence_count\n        FROM users u\n        LEFT JOIN expertise_mapping em ON u.id = em.user_id\n        WHERE u.id IS NOT NULL\n        AND (\n          em.skill = $1 OR em.skill = $2\n          OR u.expertise && $3\n        )\n        ORDER BY u.reputation DESC, em.evidence_count DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 00:52:21:5221"}
{"level":"error","message":"Failed to check availability Cannot read properties of undefined (reading 'get')","stack":"TypeError: Cannot read properties of undefined (reading 'get')\n    at SmartRoutingAgent.checkAvailability (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:282:52)\n    at SmartRoutingAgent.calculateSuggestions (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:223:44)\n    at SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:32:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:52:21:5221"}
{"action":"reason_complete","agentType":"SmartRoutingAgent","confidence":0.13,"details":{"agentType":"SmartRoutingAgent","confidence":0.13,"reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:22:21.476Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:21:5221"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:52:21:5221"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:52:21:5221"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:52:21:5221"}
{"duration":6,"level":"debug","message":"Executed query","rows":0,"text":"\n          SELECT id, title, frequency, priority\n          FROM knowledge_gaps\n          WHERE title ILIKE $1 OR description ILIKE $2\n          ORDER BY frequency DESC\n          LIMIT 1\n        ","timestamp":"2025-08-05 00:52:21:5221"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          SELECT id, title, frequency, priority\n          FROM knowledge_gaps\n          WHERE title ILIKE $1 OR description ILIKE $2\n          ORDER BY frequency DESC\n          LIMIT 1\n        ","timestamp":"2025-08-05 00:52:21:5221"}
{"action":"reason_complete","agentType":"KnowledgeGapAgent","confidence":0.5,"details":{"agentType":"KnowledgeGapAgent","confidence":0.5,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Deployment\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":27,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Deployment","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":27,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:21.480Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:21:5221"}
{"duration":9,"level":"debug","message":"Executed query","rows":46,"text":"\n        SELECT \n          q.title, q.content, q.created_at,\n          a.content as answer_content, a.is_accepted,\n          array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN answers a ON q.user_id = a.user_id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.user_id = $1 OR a.user_id = $1\n        GROUP BY q.id, a.id\n        ORDER BY q.created_at DESC, a.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 00:52:21:5221"}
{"duration":8,"level":"debug","message":"Executed query","rows":17,"text":"\n        SELECT q.id, q.title, q.content, q.created_at, q.vote_count, q.view_count,\n               u.first_name, u.last_name,\n               array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN users u ON q.user_id = u.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.id != $1\n        AND (\n          (q.title ILIKE $2 OR q.content ILIKE $2) OR (q.title ILIKE $3 OR q.content ILIKE $3) OR (q.title ILIKE $4 OR q.content ILIKE $4) OR (q.title ILIKE $5 OR q.content ILIKE $5) OR (q.title ILIKE $6 OR q.content ILIKE $6) OR (q.title ILIKE $7 OR q.content ILIKE $7) OR (q.title ILIKE $8 OR q.content ILIKE $8) OR (q.title ILIKE $9 OR q.content ILIKE $9) OR (q.title ILIKE $10 OR q.content ILIKE $10)\n        )\n        GROUP BY q.id, u.first_name, u.last_name\n        ORDER BY q.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 00:52:21:5221"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n        SELECT a.content, a.created_at, q.title, q.content as question_content,\n               array_agg(t.name) as tags\n        FROM answers a\n        JOIN questions q ON a.question_id = q.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE a.user_id = $1 AND a.is_accepted = true\n        GROUP BY a.id, q.id\n        ORDER BY a.created_at DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 00:52:21:5221"}
{"action":"reason_complete","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Deployment\". Discovered 5 expertise areas. Strongest expertise: security (expert level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:21.482Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:21:5221"}
{"action":"reason_complete","agentType":"DuplicateDetectionAgent","confidence":0.74,"details":{"agentType":"DuplicateDetectionAgent","confidence":0.74,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Found 1 similar questions. Most similar: \"IBM Cloud Pak for Data Deployment\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:21.465Z","questionId":27,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["production"],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:21.482Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:21:5221"}
{"duplicate":{"agentType":"DuplicateDetectionAgent","confidence":0.74,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Found 1 similar questions. Most similar: \"IBM Cloud Pak for Data Deployment\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:21.465Z","questionId":27,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["production"],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:21.482Z"},"expertise":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Deployment\". Discovered 5 expertise areas. Strongest expertise: security (expert level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:21.482Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"agentType":"KnowledgeGapAgent","confidence":0.5,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Deployment\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":27,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Deployment","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":27,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:21.480Z"},"level":"debug","message":"Reasoning completed","routing":{"agentType":"SmartRoutingAgent","confidence":0.13,"reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:22:21.476Z"},"timestamp":"2025-08-05 00:52:21:5221"}
{"action":"act","agentType":"DuplicateDetectionAgent","confidence":0.74,"details":{"similarQuestions":[{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:21.465Z","questionId":27,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["production"],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:21.482Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:21:5221"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:21:5221"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:21:5221"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:21:5221"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:21:5221"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:21:5221"}
{"action":"act","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:22:21.485Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:21:5221"}
{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:21.465Z","questionId":27,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["production"],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:21.482Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.74,"executed":true,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Found 1 similar questions. Most similar: \"IBM Cloud Pak for Data Deployment\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:21.465Z","questionId":27,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["production"],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:21.482Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:22:21.485Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Deployment\". Discovered 5 expertise areas. Strongest expertise: security (expert level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:21.485Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0.5,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Deployment\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":27,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Deployment","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":27,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:21.482Z"},"level":"debug","message":"Actions completed","routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0.13,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:22:21.482Z"},"timestamp":"2025-08-05 00:52:21:5221"}
{"action":"complete","agentType":"orchestrator","confidence":0.5925,"details":{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:21.465Z","questionId":27,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["production"],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:21.482Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.74,"executed":true,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Found 1 similar questions. Most similar: \"IBM Cloud Pak for Data Deployment\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:21.465Z","questionId":27,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["production"],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:21.482Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:22:21.485Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Deployment\". Discovered 5 expertise areas. Strongest expertise: security (expert level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:21.485Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0.5,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Deployment\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":27,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Deployment","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":27,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:21.482Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0.13,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:22:21.482Z"},"timestamp":"2025-08-04T19:22:21.472Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:21:5221"}
{"agentResults":{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:21.465Z","questionId":27,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["production"],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:21.482Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.74,"executed":true,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Found 1 similar questions. Most similar: \"IBM Cloud Pak for Data Deployment\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:21.465Z","questionId":27,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["production"],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:21.482Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:22:21.485Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Deployment\". Discovered 5 expertise areas. Strongest expertise: security (expert level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:21.485Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0.5,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Deployment\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":27,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Deployment","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":27,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:21.482Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0.13,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:22:21.482Z"},"timestamp":"2025-08-04T19:22:21.472Z"},"level":"info","message":"Agent orchestration completed","questionId":27,"timestamp":"2025-08-05 00:52:21:5221"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 00:52:21:5221"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 00:52:21:5221"}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:52:27:5227","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:52:27:5227"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:27:5227"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:27:5227"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:27:5227"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:27:5227"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:27:5227"}
{"action":"question_created","details":{"questionId":28,"title":"IBM Cloud Pak for Data Deployment"},"level":"info","message":"User action","timestamp":"2025-08-05 00:52:27:5227","userId":1}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 00:52:27:5227"}
{"action":"start","agentType":"orchestrator","confidence":1,"details":{"questionId":28},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:27:5227"}
{"context":{"teamContext":"","timestamp":"2025-08-04T19:22:27.701Z","urgency":"normal","userExpertise":[]},"level":"debug","message":"Perception completed","metadata":{"hasCode":true,"hasError":false,"technologyKeywords":["cloud","kubernetes","ibm cloud","cloud pak"],"wordCount":23},"question":{"content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?","id":28,"tags":["ibm-cloud","kubernetes","deployment","cloud-pak","production"],"title":"IBM Cloud Pak for Data Deployment","userId":1},"timestamp":"2025-08-05 00:52:27:5227"}
{"action":"reason","agentType":"SmartRoutingAgent","confidence":1,"details":{"questionId":28},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:27:5227"}
{"action":"reason","agentType":"DuplicateDetectionAgent","confidence":1,"details":{"questionId":28},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:27:5227"}
{"action":"reason","agentType":"KnowledgeGapAgent","confidence":1,"details":{"questionId":28},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:27:5227"}
{"action":"reason","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"questionId":28},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:27:5227"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n        SELECT DISTINCT u.id, u.first_name, u.last_name, u.email, u.department, u.team,\n               u.expertise, u.reputation, em.skill, em.proficiency_level, em.evidence_count\n        FROM users u\n        LEFT JOIN expertise_mapping em ON u.id = em.user_id\n        WHERE u.id IS NOT NULL\n        AND (\n          em.skill = $1 OR em.skill = $2\n          OR u.expertise && $3\n        )\n        ORDER BY u.reputation DESC, em.evidence_count DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 00:52:27:5227"}
{"level":"error","message":"Failed to check availability Cannot read properties of undefined (reading 'get')","stack":"TypeError: Cannot read properties of undefined (reading 'get')\n    at SmartRoutingAgent.checkAvailability (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:282:52)\n    at SmartRoutingAgent.calculateSuggestions (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:223:44)\n    at SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:32:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:52:27:5227"}
{"action":"reason_complete","agentType":"SmartRoutingAgent","confidence":0.13,"details":{"agentType":"SmartRoutingAgent","confidence":0.13,"reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:22:27.704Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:27:5227"}
{"duration":2,"level":"debug","message":"Executed query","rows":48,"text":"\n        SELECT \n          q.title, q.content, q.created_at,\n          a.content as answer_content, a.is_accepted,\n          array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN answers a ON q.user_id = a.user_id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.user_id = $1 OR a.user_id = $1\n        GROUP BY q.id, a.id\n        ORDER BY q.created_at DESC, a.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 00:52:27:5227"}
{"duration":2,"level":"debug","message":"Executed query","rows":0,"text":"\n          SELECT id, title, frequency, priority\n          FROM knowledge_gaps\n          WHERE title ILIKE $1 OR description ILIKE $2\n          ORDER BY frequency DESC\n          LIMIT 1\n        ","timestamp":"2025-08-05 00:52:27:5227"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          SELECT id, title, frequency, priority\n          FROM knowledge_gaps\n          WHERE title ILIKE $1 OR description ILIKE $2\n          ORDER BY frequency DESC\n          LIMIT 1\n        ","timestamp":"2025-08-05 00:52:27:5227"}
{"action":"reason_complete","agentType":"KnowledgeGapAgent","confidence":0.5,"details":{"agentType":"KnowledgeGapAgent","confidence":0.5,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Deployment\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":28,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Deployment","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":28,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:27.705Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:27:5227"}
{"duration":2,"level":"debug","message":"Executed query","rows":0,"text":"\n        SELECT a.content, a.created_at, q.title, q.content as question_content,\n               array_agg(t.name) as tags\n        FROM answers a\n        JOIN questions q ON a.question_id = q.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE a.user_id = $1 AND a.is_accepted = true\n        GROUP BY a.id, q.id\n        ORDER BY a.created_at DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 00:52:27:5227"}
{"action":"reason_complete","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Deployment\". Discovered 5 expertise areas. Strongest expertise: security (expert level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:27.706Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:27:5227"}
{"duration":6,"level":"debug","message":"Executed query","rows":18,"text":"\n        SELECT q.id, q.title, q.content, q.created_at, q.vote_count, q.view_count,\n               u.first_name, u.last_name,\n               array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN users u ON q.user_id = u.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.id != $1\n        AND (\n          (q.title ILIKE $2 OR q.content ILIKE $2) OR (q.title ILIKE $3 OR q.content ILIKE $3) OR (q.title ILIKE $4 OR q.content ILIKE $4) OR (q.title ILIKE $5 OR q.content ILIKE $5) OR (q.title ILIKE $6 OR q.content ILIKE $6) OR (q.title ILIKE $7 OR q.content ILIKE $7) OR (q.title ILIKE $8 OR q.content ILIKE $8) OR (q.title ILIKE $9 OR q.content ILIKE $9) OR (q.title ILIKE $10 OR q.content ILIKE $10)\n        )\n        GROUP BY q.id, u.first_name, u.last_name\n        ORDER BY q.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 00:52:27:5227"}
{"action":"reason_complete","agentType":"DuplicateDetectionAgent","confidence":0.734,"details":{"agentType":"DuplicateDetectionAgent","confidence":0.734,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Found 2 similar questions. Most similar: \"IBM Cloud Pak for Data Deployment\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:21.465Z","questionId":27,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["production"],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:27.698Z","questionId":28,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 0.0%; Technology similarity: 0.0%","similarity":0.7,"tags":[],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:27.708Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:27:5227"}
{"duplicate":{"agentType":"DuplicateDetectionAgent","confidence":0.734,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Found 2 similar questions. Most similar: \"IBM Cloud Pak for Data Deployment\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:21.465Z","questionId":27,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["production"],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:27.698Z","questionId":28,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 0.0%; Technology similarity: 0.0%","similarity":0.7,"tags":[],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:27.708Z"},"expertise":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Deployment\". Discovered 5 expertise areas. Strongest expertise: security (expert level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:27.706Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"agentType":"KnowledgeGapAgent","confidence":0.5,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Deployment\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":28,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Deployment","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":28,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:27.705Z"},"level":"debug","message":"Reasoning completed","routing":{"agentType":"SmartRoutingAgent","confidence":0.13,"reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:22:27.704Z"},"timestamp":"2025-08-05 00:52:27:5227"}
{"action":"act","agentType":"DuplicateDetectionAgent","confidence":0.734,"details":{"similarQuestions":[{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:21.465Z","questionId":27,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["production"],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:27.698Z","questionId":28,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 0.0%; Technology similarity: 0.0%","similarity":0.7,"tags":[],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:27.709Z","type":"duplicate_suggestions","warning":"Found 2 similar questions. Consider checking these before posting."},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:27:5227"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:27:5227"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:27:5227"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:27:5227"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:27:5227"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:27:5227"}
{"action":"act","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:22:27.712Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:27:5227"}
{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:21.465Z","questionId":27,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["production"],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:27.698Z","questionId":28,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 0.0%; Technology similarity: 0.0%","similarity":0.7,"tags":[],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:27.709Z","type":"duplicate_suggestions","warning":"Found 2 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.734,"executed":true,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Found 2 similar questions. Most similar: \"IBM Cloud Pak for Data Deployment\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:21.465Z","questionId":27,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["production"],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:27.698Z","questionId":28,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 0.0%; Technology similarity: 0.0%","similarity":0.7,"tags":[],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:27.709Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:22:27.712Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Deployment\". Discovered 5 expertise areas. Strongest expertise: security (expert level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:27.712Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0.5,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Deployment\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":28,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Deployment","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":28,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:27.709Z"},"level":"debug","message":"Actions completed","routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0.13,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:22:27.709Z"},"timestamp":"2025-08-05 00:52:27:5227"}
{"action":"complete","agentType":"orchestrator","confidence":0.591,"details":{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:21.465Z","questionId":27,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["production"],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:27.698Z","questionId":28,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 0.0%; Technology similarity: 0.0%","similarity":0.7,"tags":[],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:27.709Z","type":"duplicate_suggestions","warning":"Found 2 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.734,"executed":true,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Found 2 similar questions. Most similar: \"IBM Cloud Pak for Data Deployment\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:21.465Z","questionId":27,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["production"],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:27.698Z","questionId":28,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 0.0%; Technology similarity: 0.0%","similarity":0.7,"tags":[],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:27.709Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:22:27.712Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Deployment\". Discovered 5 expertise areas. Strongest expertise: security (expert level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:27.712Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0.5,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Deployment\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":28,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Deployment","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":28,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:27.709Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0.13,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:22:27.709Z"},"timestamp":"2025-08-04T19:22:27.701Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:27:5227"}
{"agentResults":{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:21.465Z","questionId":27,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["production"],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:27.698Z","questionId":28,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 0.0%; Technology similarity: 0.0%","similarity":0.7,"tags":[],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:27.709Z","type":"duplicate_suggestions","warning":"Found 2 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.734,"executed":true,"reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Found 2 similar questions. Most similar: \"IBM Cloud Pak for Data Deployment\" (74.0% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:21.465Z","questionId":27,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 20.0%; Technology similarity: 0.0%","similarity":0.74,"tags":["production"],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I need help deploying IBM Cloud Pak for Data in our Kubernetes cluster. What are the prerequisites and best practices for production deployment?...","createdAt":"2025-08-04T19:22:27.698Z","questionId":28,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 0.0%; Technology similarity: 0.0%","similarity":0.7,"tags":[],"title":"IBM Cloud Pak for Data Deployment","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:27.709Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:22:27.712Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"kubernetes","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned kubernetes in question","skill":"kubernetes","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"IBM Cloud Pak for Data Deployment\". Discovered 5 expertise areas. Strongest expertise: security (expert level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:27.712Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0.5,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":2},"knowledgeGaps":[{"description":"Users are asking about best practices for \"IBM Cloud Pak for Data Deployment\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":28,"technologies":["cloud","kubernetes","ibm cloud","cloud pak"],"title":"Best practices guide needed for: IBM Cloud Pak for Data Deployment","type":"best_practices"},{"description":"Users need comprehensive guides for deploying applications on Kubernetes.","frequency":1,"priority":"high","questionId":28,"technologies":["kubernetes"],"title":"Kubernetes deployment guides","type":"technology_specific"}],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"IBM Cloud Pak for Data Deployment\". Identified 2 potential knowledge gaps. High priority gaps: 1. Most critical: Kubernetes deployment guides. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:27.709Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0.13,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: kubernetes, container_orchestration. Found 1 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: kubernetes; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["kubernetes"],"team":"Red Hat","userId":5}],"timestamp":"2025-08-04T19:22:27.709Z"},"timestamp":"2025-08-04T19:22:27.701Z"},"level":"info","message":"Agent orchestration completed","questionId":28,"timestamp":"2025-08-05 00:52:27:5227"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 00:52:27:5227"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 00:52:27:5227"}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:52:34:5234","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:52:34:5234"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:34:5234"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:34:5234"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:34:5234"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:34:5234"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:34:5234"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:34:5234"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:52:34:5234"}
{"action":"question_created","details":{"questionId":29,"title":"Missing Watson AI Documentation"},"level":"info","message":"User action","timestamp":"2025-08-05 00:52:34:5234","userId":1}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 00:52:34:5234"}
{"action":"start","agentType":"orchestrator","confidence":1,"details":{"questionId":29},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:34:5234"}
{"context":{"teamContext":"","timestamp":"2025-08-04T19:22:34.912Z","urgency":"normal","userExpertise":[]},"level":"debug","message":"Perception completed","metadata":{"hasCode":true,"hasError":false,"technologyKeywords":["watson","ai"],"wordCount":26},"question":{"content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing and model validation.","id":29,"tags":["watson","ai","documentation","training","missing","outdated"],"title":"Missing Watson AI Documentation","userId":1},"timestamp":"2025-08-05 00:52:34:5234"}
{"action":"reason","agentType":"SmartRoutingAgent","confidence":1,"details":{"questionId":29},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:34:5234"}
{"action":"reason","agentType":"DuplicateDetectionAgent","confidence":1,"details":{"questionId":29},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:34:5234"}
{"action":"reason","agentType":"KnowledgeGapAgent","confidence":1,"details":{"questionId":29},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:34:5234"}
{"action":"reason","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"questionId":29},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:34:5234"}
{"duration":2,"level":"debug","message":"Executed query","rows":50,"text":"\n        SELECT \n          q.title, q.content, q.created_at,\n          a.content as answer_content, a.is_accepted,\n          array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN answers a ON q.user_id = a.user_id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.user_id = $1 OR a.user_id = $1\n        GROUP BY q.id, a.id\n        ORDER BY q.created_at DESC, a.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 00:52:34:5234"}
{"duration":2,"level":"debug","message":"Executed query","rows":0,"text":"\n        SELECT DISTINCT u.id, u.first_name, u.last_name, u.email, u.department, u.team,\n               u.expertise, u.reputation, em.skill, em.proficiency_level, em.evidence_count\n        FROM users u\n        LEFT JOIN expertise_mapping em ON u.id = em.user_id\n        WHERE u.id IS NOT NULL\n        AND (\n          em.skill = $1\n          OR u.expertise && $2\n        )\n        ORDER BY u.reputation DESC, em.evidence_count DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 00:52:34:5234"}
{"duration":3,"level":"debug","message":"Executed query","rows":13,"text":"\n        SELECT q.id, q.title, q.content, q.created_at, q.vote_count, q.view_count,\n               u.first_name, u.last_name,\n               array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN users u ON q.user_id = u.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.id != $1\n        AND (\n          (q.title ILIKE $2 OR q.content ILIKE $2) OR (q.title ILIKE $3 OR q.content ILIKE $3) OR (q.title ILIKE $4 OR q.content ILIKE $4) OR (q.title ILIKE $5 OR q.content ILIKE $5) OR (q.title ILIKE $6 OR q.content ILIKE $6) OR (q.title ILIKE $7 OR q.content ILIKE $7) OR (q.title ILIKE $8 OR q.content ILIKE $8)\n        )\n        GROUP BY q.id, u.first_name, u.last_name\n        ORDER BY q.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 00:52:34:5234"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n        SELECT a.content, a.created_at, q.title, q.content as question_content,\n               array_agg(t.name) as tags\n        FROM answers a\n        JOIN questions q ON a.question_id = q.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE a.user_id = $1 AND a.is_accepted = true\n        GROUP BY a.id, q.id\n        ORDER BY a.created_at DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 00:52:34:5234"}
{"action":"reason_complete","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"watson_ai","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned watson in question","skill":"watson_ai","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"Missing Watson AI Documentation\". Discovered 5 expertise areas. Strongest expertise: security (expert level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:34.915Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:34:5234"}
{"action":"reason_complete","agentType":"SmartRoutingAgent","confidence":0,"details":{"agentType":"SmartRoutingAgent","confidence":0,"reasoning":"Question requires expertise in: watson_ai. Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:22:34.915Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:34:5234"}
{"duration":3,"level":"debug","message":"Executed query","rows":0,"text":"\n          SELECT id, title, frequency, priority\n          FROM knowledge_gaps\n          WHERE title ILIKE $1 OR description ILIKE $2\n          ORDER BY frequency DESC\n          LIMIT 1\n        ","timestamp":"2025-08-05 00:52:34:5234"}
{"action":"reason_complete","agentType":"DuplicateDetectionAgent","confidence":0.7333333333333333,"details":{"agentType":"DuplicateDetectionAgent","confidence":0.7333333333333333,"reasoning":"Analyzed question: \"Missing Watson AI Documentation\". Found 1 similar questions. Most similar: \"Missing Watson AI Documentation\" (73.3% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing and model validation....","createdAt":"2025-08-04T19:22:34.907Z","questionId":29,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarity":0.7333333333333333,"tags":["outdated"],"title":"Missing Watson AI Documentation","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:34.915Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:34:5234"}
{"action":"reason_complete","agentType":"KnowledgeGapAgent","confidence":0.30000000000000004,"details":{"agentType":"KnowledgeGapAgent","confidence":0.30000000000000004,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":1},"knowledgeGaps":[{"description":"Users need better documentation for Watson AI services and APIs.","frequency":1,"priority":"high","questionId":29,"technologies":["watson"],"title":"Watson AI documentation gaps","type":"technology_specific"}],"reasoning":"Analyzed question: \"Missing Watson AI Documentation\". Identified 1 potential knowledge gaps. High priority gaps: 1. Most critical: Watson AI documentation gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:34.915Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:34:5234"}
{"duplicate":{"agentType":"DuplicateDetectionAgent","confidence":0.7333333333333333,"reasoning":"Analyzed question: \"Missing Watson AI Documentation\". Found 1 similar questions. Most similar: \"Missing Watson AI Documentation\" (73.3% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing and model validation....","createdAt":"2025-08-04T19:22:34.907Z","questionId":29,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarity":0.7333333333333333,"tags":["outdated"],"title":"Missing Watson AI Documentation","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:34.915Z"},"expertise":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"watson_ai","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned watson in question","skill":"watson_ai","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"Missing Watson AI Documentation\". Discovered 5 expertise areas. Strongest expertise: security (expert level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:34.915Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"agentType":"KnowledgeGapAgent","confidence":0.30000000000000004,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":1},"knowledgeGaps":[{"description":"Users need better documentation for Watson AI services and APIs.","frequency":1,"priority":"high","questionId":29,"technologies":["watson"],"title":"Watson AI documentation gaps","type":"technology_specific"}],"reasoning":"Analyzed question: \"Missing Watson AI Documentation\". Identified 1 potential knowledge gaps. High priority gaps: 1. Most critical: Watson AI documentation gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:34.915Z"},"level":"debug","message":"Reasoning completed","routing":{"agentType":"SmartRoutingAgent","confidence":0,"reasoning":"Question requires expertise in: watson_ai. Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:22:34.915Z"},"timestamp":"2025-08-05 00:52:34:5234"}
{"action":"act","agentType":"DuplicateDetectionAgent","confidence":0.7333333333333333,"details":{"similarQuestions":[{"author":"John Doe","content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing and model validation....","createdAt":"2025-08-04T19:22:34.907Z","questionId":29,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarity":0.7333333333333333,"tags":["outdated"],"title":"Missing Watson AI Documentation","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:34.916Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:34:5234"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:34:5234"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:34:5234"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:34:5234"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:34:5234"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:34:5234"}
{"action":"act","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:22:34.918Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"watson_ai"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:34:5234"}
{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing and model validation....","createdAt":"2025-08-04T19:22:34.907Z","questionId":29,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarity":0.7333333333333333,"tags":["outdated"],"title":"Missing Watson AI Documentation","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:34.916Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.7333333333333333,"executed":true,"reasoning":"Analyzed question: \"Missing Watson AI Documentation\". Found 1 similar questions. Most similar: \"Missing Watson AI Documentation\" (73.3% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing and model validation....","createdAt":"2025-08-04T19:22:34.907Z","questionId":29,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarity":0.7333333333333333,"tags":["outdated"],"title":"Missing Watson AI Documentation","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:34.916Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:22:34.918Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"watson_ai"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"watson_ai","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned watson in question","skill":"watson_ai","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"Missing Watson AI Documentation\". Discovered 5 expertise areas. Strongest expertise: security (expert level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:34.918Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0.30000000000000004,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":1},"knowledgeGaps":[{"description":"Users need better documentation for Watson AI services and APIs.","frequency":1,"priority":"high","questionId":29,"technologies":["watson"],"title":"Watson AI documentation gaps","type":"technology_specific"}],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"Missing Watson AI Documentation\". Identified 1 potential knowledge gaps. High priority gaps: 1. Most critical: Watson AI documentation gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:34.916Z"},"level":"debug","message":"Actions completed","routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: watson_ai. Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:22:34.916Z"},"timestamp":"2025-08-05 00:52:34:5234"}
{"action":"complete","agentType":"orchestrator","confidence":0.6777777777777777,"details":{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing and model validation....","createdAt":"2025-08-04T19:22:34.907Z","questionId":29,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarity":0.7333333333333333,"tags":["outdated"],"title":"Missing Watson AI Documentation","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:34.916Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.7333333333333333,"executed":true,"reasoning":"Analyzed question: \"Missing Watson AI Documentation\". Found 1 similar questions. Most similar: \"Missing Watson AI Documentation\" (73.3% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing and model validation....","createdAt":"2025-08-04T19:22:34.907Z","questionId":29,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarity":0.7333333333333333,"tags":["outdated"],"title":"Missing Watson AI Documentation","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:34.916Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:22:34.918Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"watson_ai"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"watson_ai","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned watson in question","skill":"watson_ai","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"Missing Watson AI Documentation\". Discovered 5 expertise areas. Strongest expertise: security (expert level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:34.918Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0.30000000000000004,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":1},"knowledgeGaps":[{"description":"Users need better documentation for Watson AI services and APIs.","frequency":1,"priority":"high","questionId":29,"technologies":["watson"],"title":"Watson AI documentation gaps","type":"technology_specific"}],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"Missing Watson AI Documentation\". Identified 1 potential knowledge gaps. High priority gaps: 1. Most critical: Watson AI documentation gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:34.916Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: watson_ai. Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:22:34.916Z"},"timestamp":"2025-08-04T19:22:34.912Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:34:5234"}
{"agentResults":{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing and model validation....","createdAt":"2025-08-04T19:22:34.907Z","questionId":29,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarity":0.7333333333333333,"tags":["outdated"],"title":"Missing Watson AI Documentation","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:34.916Z","type":"duplicate_suggestions","warning":"Found 1 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.7333333333333333,"executed":true,"reasoning":"Analyzed question: \"Missing Watson AI Documentation\". Found 1 similar questions. Most similar: \"Missing Watson AI Documentation\" (73.3% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I cannot find proper documentation for training custom Watson AI models. The existing docs are outdated and missing crucial information about data preprocessing and model validation....","createdAt":"2025-08-04T19:22:34.907Z","questionId":29,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarity":0.7333333333333333,"tags":["outdated"],"title":"Missing Watson AI Documentation","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:34.916Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:22:34.918Z","totalExpertise":5,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"watson_ai"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":4,"proficiency":"expert","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7,"evidenceCount":1,"proficiency":"beginner","skill":"technical_writing","sources":["code_blocks"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"watson_ai","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned watson in question","skill":"watson_ai","source":"question_content"},{"confidence":0.7,"evidence":"Question contains code blocks","skill":"technical_writing","source":"code_blocks"}],"reasoning":"Analyzed expertise for question: \"Missing Watson AI Documentation\". Discovered 5 expertise areas. Strongest expertise: security (expert level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:34.918Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0.30000000000000004,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":1},"knowledgeGaps":[{"description":"Users need better documentation for Watson AI services and APIs.","frequency":1,"priority":"high","questionId":29,"technologies":["watson"],"title":"Watson AI documentation gaps","type":"technology_specific"}],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"Missing Watson AI Documentation\". Identified 1 potential knowledge gaps. High priority gaps: 1. Most critical: Watson AI documentation gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:34.916Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: watson_ai. Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:22:34.916Z"},"timestamp":"2025-08-04T19:22:34.912Z"},"level":"info","message":"Agent orchestration completed","questionId":29,"timestamp":"2025-08-05 00:52:34:5234"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 00:52:34:5234"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 00:52:34:5234"}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 00:52:41:5241","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO question_tags (question_id, tag_id)\n            VALUES ($1, $2)\n            ON CONFLICT DO NOTHING\n          ","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 00:52:41:5241"}
{"action":"question_created","details":{"questionId":30,"title":"Docker Container Security Vulnerabilities"},"level":"info","message":"User action","timestamp":"2025-08-05 00:52:41:5241","userId":1}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 00:52:41:5241"}
{"action":"start","agentType":"orchestrator","confidence":1,"details":{"questionId":30},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:41:5241"}
{"context":{"teamContext":"","timestamp":"2025-08-04T19:22:41.359Z","urgency":"normal","userExpertise":[]},"level":"debug","message":"Perception completed","metadata":{"hasCode":false,"hasError":false,"technologyKeywords":["docker","security","ai"],"wordCount":27},"question":{"content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices and vulnerability scanning tools.","id":30,"tags":["docker","security","containers","vulnerabilities","scanning","best-practices"],"title":"Docker Container Security Vulnerabilities","userId":1},"timestamp":"2025-08-05 00:52:41:5241"}
{"action":"reason","agentType":"SmartRoutingAgent","confidence":1,"details":{"questionId":30},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:41:5241"}
{"action":"reason","agentType":"DuplicateDetectionAgent","confidence":1,"details":{"questionId":30},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:41:5241"}
{"action":"reason","agentType":"KnowledgeGapAgent","confidence":1,"details":{"questionId":30},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:41:5241"}
{"action":"reason","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"questionId":30},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":1,"level":"debug","message":"Executed query","rows":2,"text":"\n        SELECT DISTINCT u.id, u.first_name, u.last_name, u.email, u.department, u.team,\n               u.expertise, u.reputation, em.skill, em.proficiency_level, em.evidence_count\n        FROM users u\n        LEFT JOIN expertise_mapping em ON u.id = em.user_id\n        WHERE u.id IS NOT NULL\n        AND (\n          em.skill = $1 OR em.skill = $2 OR em.skill = $3\n          OR u.expertise && $4\n        )\n        ORDER BY u.reputation DESC, em.evidence_count DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 00:52:41:5241"}
{"level":"error","message":"Failed to check availability Cannot read properties of undefined (reading 'get')","stack":"TypeError: Cannot read properties of undefined (reading 'get')\n    at SmartRoutingAgent.checkAvailability (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:282:52)\n    at SmartRoutingAgent.calculateSuggestions (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:223:44)\n    at SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:32:38)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:52:41:5241"}
{"level":"error","message":"Failed to check availability Cannot read properties of undefined (reading 'get')","stack":"TypeError: Cannot read properties of undefined (reading 'get')\n    at SmartRoutingAgent.checkAvailability (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:282:52)\n    at SmartRoutingAgent.calculateSuggestions (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:223:44)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:32:27)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          SELECT id, title, frequency, priority\n          FROM knowledge_gaps\n          WHERE title ILIKE $1 OR description ILIKE $2\n          ORDER BY frequency DESC\n          LIMIT 1\n        ","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":2,"level":"debug","message":"Executed query","rows":50,"text":"\n        SELECT \n          q.title, q.content, q.created_at,\n          a.content as answer_content, a.is_accepted,\n          array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN answers a ON q.user_id = a.user_id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.user_id = $1 OR a.user_id = $1\n        GROUP BY q.id, a.id\n        ORDER BY q.created_at DESC, a.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 00:52:41:5241"}
{"action":"reason_complete","agentType":"SmartRoutingAgent","confidence":0.13,"details":{"agentType":"SmartRoutingAgent","confidence":0.13,"reasoning":"Question requires expertise in: docker, containerization, security. Found 2 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["docker"],"team":"Red Hat","userId":5},{"confidence":0.13,"department":"Security","email":"mike.johnson@ibm.com","firstName":"Mike","lastName":"Johnson","reasoning":"Reputation: 0; Skill matches: security; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["security"],"team":"Cyber Security","userId":8}],"timestamp":"2025-08-04T19:22:41.360Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          SELECT id, title, frequency, priority\n          FROM knowledge_gaps\n          WHERE title ILIKE $1 OR description ILIKE $2\n          ORDER BY frequency DESC\n          LIMIT 1\n        ","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":2,"level":"debug","message":"Executed query","rows":15,"text":"\n        SELECT q.id, q.title, q.content, q.created_at, q.vote_count, q.view_count,\n               u.first_name, u.last_name,\n               array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN users u ON q.user_id = u.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.id != $1\n        AND (\n          (q.title ILIKE $2 OR q.content ILIKE $2) OR (q.title ILIKE $3 OR q.content ILIKE $3) OR (q.title ILIKE $4 OR q.content ILIKE $4) OR (q.title ILIKE $5 OR q.content ILIKE $5) OR (q.title ILIKE $6 OR q.content ILIKE $6) OR (q.title ILIKE $7 OR q.content ILIKE $7) OR (q.title ILIKE $8 OR q.content ILIKE $8) OR (q.title ILIKE $9 OR q.content ILIKE $9)\n        )\n        GROUP BY q.id, u.first_name, u.last_name\n        ORDER BY q.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          SELECT id, title, frequency, priority\n          FROM knowledge_gaps\n          WHERE title ILIKE $1 OR description ILIKE $2\n          ORDER BY frequency DESC\n          LIMIT 1\n        ","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n        SELECT a.content, a.created_at, q.title, q.content as question_content,\n               array_agg(t.name) as tags\n        FROM answers a\n        JOIN questions q ON a.question_id = q.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE a.user_id = $1 AND a.is_accepted = true\n        GROUP BY a.id, q.id\n        ORDER BY a.created_at DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 00:52:41:5241"}
{"action":"reason_complete","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7714285714285714,"evidenceCount":7,"proficiency":"intermediate","skill":"security","sources":["question_content","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"docker","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned docker in question","skill":"docker","source":"question_content"},{"confidence":0.6,"evidence":"Mentioned security in question","skill":"security","source":"question_content"}],"reasoning":"Analyzed expertise for question: \"Docker Container Security Vulnerabilities\". Discovered 4 expertise areas. Strongest expertise: security (intermediate level, 77.1% confidence). Evidence sources: question_content, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:41.362Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:41:5241"}
{"action":"reason_complete","agentType":"DuplicateDetectionAgent","confidence":0.7285507246376811,"details":{"agentType":"DuplicateDetectionAgent","confidence":0.7285507246376811,"reasoning":"Analyzed question: \"Docker Container Security Vulnerabilities\". Found 2 similar questions. Most similar: \"Docker Container Security Vulnerabilities\" (73.3% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices and vulnerability scanning tools....","createdAt":"2025-08-04T19:22:41.354Z","questionId":30,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarity":0.7333333333333333,"tags":["scanning"],"title":"Docker Container Security Vulnerabilities","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices....","createdAt":"2025-08-04T19:17:06.850Z","questionId":22,"reasoning":"Title similarity: 100.0%; Content similarity: 78.3%; Tag similarity: 33.3%; Technology similarity: 0.0%","similarity":0.7014492753623188,"tags":["containers","vulnerabilities"],"title":"Docker Container Security Vulnerabilities","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:41.361Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:41:5241"}
{"action":"reason_complete","agentType":"KnowledgeGapAgent","confidence":0.7,"details":{"agentType":"KnowledgeGapAgent","confidence":0.7,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":3},"knowledgeGaps":[{"description":"Users are asking about best practices for \"Docker Container Security Vulnerabilities\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":30,"technologies":["docker","security","ai"],"title":"Best practices guide needed for: Docker Container Security Vulnerabilities","type":"best_practices"},{"description":"Users need help with Docker containerization and best practices.","frequency":1,"priority":"medium","questionId":30,"technologies":["docker"],"title":"Docker containerization guides","type":"technology_specific"},{"description":"Users need comprehensive security guidelines and best practices.","frequency":1,"priority":"high","questionId":30,"technologies":["security"],"title":"Security best practices","type":"technology_specific"}],"reasoning":"Analyzed question: \"Docker Container Security Vulnerabilities\". Identified 3 potential knowledge gaps. High priority gaps: 1. Most critical: Security best practices. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:41.361Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:41:5241"}
{"duplicate":{"agentType":"DuplicateDetectionAgent","confidence":0.7285507246376811,"reasoning":"Analyzed question: \"Docker Container Security Vulnerabilities\". Found 2 similar questions. Most similar: \"Docker Container Security Vulnerabilities\" (73.3% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices and vulnerability scanning tools....","createdAt":"2025-08-04T19:22:41.354Z","questionId":30,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarity":0.7333333333333333,"tags":["scanning"],"title":"Docker Container Security Vulnerabilities","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices....","createdAt":"2025-08-04T19:17:06.850Z","questionId":22,"reasoning":"Title similarity: 100.0%; Content similarity: 78.3%; Tag similarity: 33.3%; Technology similarity: 0.0%","similarity":0.7014492753623188,"tags":["containers","vulnerabilities"],"title":"Docker Container Security Vulnerabilities","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:41.361Z"},"expertise":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7714285714285714,"evidenceCount":7,"proficiency":"intermediate","skill":"security","sources":["question_content","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"docker","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned docker in question","skill":"docker","source":"question_content"},{"confidence":0.6,"evidence":"Mentioned security in question","skill":"security","source":"question_content"}],"reasoning":"Analyzed expertise for question: \"Docker Container Security Vulnerabilities\". Discovered 4 expertise areas. Strongest expertise: security (intermediate level, 77.1% confidence). Evidence sources: question_content, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:41.362Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"agentType":"KnowledgeGapAgent","confidence":0.7,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":3},"knowledgeGaps":[{"description":"Users are asking about best practices for \"Docker Container Security Vulnerabilities\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":30,"technologies":["docker","security","ai"],"title":"Best practices guide needed for: Docker Container Security Vulnerabilities","type":"best_practices"},{"description":"Users need help with Docker containerization and best practices.","frequency":1,"priority":"medium","questionId":30,"technologies":["docker"],"title":"Docker containerization guides","type":"technology_specific"},{"description":"Users need comprehensive security guidelines and best practices.","frequency":1,"priority":"high","questionId":30,"technologies":["security"],"title":"Security best practices","type":"technology_specific"}],"reasoning":"Analyzed question: \"Docker Container Security Vulnerabilities\". Identified 3 potential knowledge gaps. High priority gaps: 1. Most critical: Security best practices. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:41.361Z"},"level":"debug","message":"Reasoning completed","routing":{"agentType":"SmartRoutingAgent","confidence":0.13,"reasoning":"Question requires expertise in: docker, containerization, security. Found 2 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["docker"],"team":"Red Hat","userId":5},{"confidence":0.13,"department":"Security","email":"mike.johnson@ibm.com","firstName":"Mike","lastName":"Johnson","reasoning":"Reputation: 0; Skill matches: security; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["security"],"team":"Cyber Security","userId":8}],"timestamp":"2025-08-04T19:22:41.360Z"},"timestamp":"2025-08-05 00:52:41:5241"}
{"action":"act","agentType":"DuplicateDetectionAgent","confidence":0.7285507246376811,"details":{"similarQuestions":[{"author":"John Doe","content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices and vulnerability scanning tools....","createdAt":"2025-08-04T19:22:41.354Z","questionId":30,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarity":0.7333333333333333,"tags":["scanning"],"title":"Docker Container Security Vulnerabilities","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices....","createdAt":"2025-08-04T19:17:06.850Z","questionId":22,"reasoning":"Title similarity: 100.0%; Content similarity: 78.3%; Tag similarity: 33.3%; Technology similarity: 0.0%","similarity":0.7014492753623188,"tags":["containers","vulnerabilities"],"title":"Docker Container Security Vulnerabilities","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:41.362Z","type":"duplicate_suggestions","warning":"Found 2 similar questions. Consider checking these before posting."},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:41:5241"}
{"error":"there is no unique or exclusion constraint matching the ON CONFLICT specification","level":"error","message":"Database query error:","params":["Security best practices","Users need comprehensive security guidelines and best practices.",1,"high","open"],"text":"\n              INSERT INTO knowledge_gaps (title, description, frequency, priority, status)\n              VALUES ($1, $2, $3, $4, $5)\n              ON CONFLICT (title) DO UPDATE SET\n                frequency = knowledge_gaps.frequency + 1,\n                updated_at = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:41:5241"}
{"code":"42P10","file":"plancat.c","length":148,"level":"error","line":"879","message":"Failed to create knowledge gap there is no unique or exclusion constraint matching the ON CONFLICT specification","name":"error","routine":"infer_arbiter_indexes","severity":"ERROR","stack":"error: there is no unique or exclusion constraint matching the ON CONFLICT specification\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async KnowledgeGapAgent.act (/Users/sandeep22/IBM_project/server/agents/knowledgeGapAgent.js:74:28)\n    at async AgentOrchestrator.act (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:137:26)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:46:23)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 00:52:41:5241"}
{"action":"act","agentType":"KnowledgeGapAgent","confidence":0.7,"details":{"gaps":[],"highPriorityGaps":0,"timestamp":"2025-08-04T19:22:41.363Z","totalGaps":3,"type":"knowledge_gaps_identified"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 00:52:41:5241"}
{"action":"act","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:22:41.365Z","totalExpertise":4,"type":"expertise_updated","updatedExpertise":[{"confidence":0.7714285714285714,"evidenceCount":7,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"docker"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:41:5241"}
{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices and vulnerability scanning tools....","createdAt":"2025-08-04T19:22:41.354Z","questionId":30,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarity":0.7333333333333333,"tags":["scanning"],"title":"Docker Container Security Vulnerabilities","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices....","createdAt":"2025-08-04T19:17:06.850Z","questionId":22,"reasoning":"Title similarity: 100.0%; Content similarity: 78.3%; Tag similarity: 33.3%; Technology similarity: 0.0%","similarity":0.7014492753623188,"tags":["containers","vulnerabilities"],"title":"Docker Container Security Vulnerabilities","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:41.362Z","type":"duplicate_suggestions","warning":"Found 2 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.7285507246376811,"executed":true,"reasoning":"Analyzed question: \"Docker Container Security Vulnerabilities\". Found 2 similar questions. Most similar: \"Docker Container Security Vulnerabilities\" (73.3% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices and vulnerability scanning tools....","createdAt":"2025-08-04T19:22:41.354Z","questionId":30,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarity":0.7333333333333333,"tags":["scanning"],"title":"Docker Container Security Vulnerabilities","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices....","createdAt":"2025-08-04T19:17:06.850Z","questionId":22,"reasoning":"Title similarity: 100.0%; Content similarity: 78.3%; Tag similarity: 33.3%; Technology similarity: 0.0%","similarity":0.7014492753623188,"tags":["containers","vulnerabilities"],"title":"Docker Container Security Vulnerabilities","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:41.362Z"},"expertise":{"action":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:22:41.365Z","totalExpertise":4,"type":"expertise_updated","updatedExpertise":[{"confidence":0.7714285714285714,"evidenceCount":7,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"docker"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7714285714285714,"evidenceCount":7,"proficiency":"intermediate","skill":"security","sources":["question_content","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"docker","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned docker in question","skill":"docker","source":"question_content"},{"confidence":0.6,"evidence":"Mentioned security in question","skill":"security","source":"question_content"}],"reasoning":"Analyzed expertise for question: \"Docker Container Security Vulnerabilities\". Discovered 4 expertise areas. Strongest expertise: security (intermediate level, 77.1% confidence). Evidence sources: question_content, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:41.365Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":{"gaps":[],"highPriorityGaps":0,"timestamp":"2025-08-04T19:22:41.363Z","totalGaps":3,"type":"knowledge_gaps_identified"},"agentType":"KnowledgeGapAgent","confidence":0.7,"executed":true,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":3},"knowledgeGaps":[{"description":"Users are asking about best practices for \"Docker Container Security Vulnerabilities\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":30,"technologies":["docker","security","ai"],"title":"Best practices guide needed for: Docker Container Security Vulnerabilities","type":"best_practices"},{"description":"Users need help with Docker containerization and best practices.","frequency":1,"priority":"medium","questionId":30,"technologies":["docker"],"title":"Docker containerization guides","type":"technology_specific"},{"description":"Users need comprehensive security guidelines and best practices.","frequency":1,"priority":"high","questionId":30,"technologies":["security"],"title":"Security best practices","type":"technology_specific"}],"reasoning":"Analyzed question: \"Docker Container Security Vulnerabilities\". Identified 3 potential knowledge gaps. High priority gaps: 1. Most critical: Security best practices. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:41.363Z"},"level":"debug","message":"Actions completed","routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0.13,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: docker, containerization, security. Found 2 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["docker"],"team":"Red Hat","userId":5},{"confidence":0.13,"department":"Security","email":"mike.johnson@ibm.com","firstName":"Mike","lastName":"Johnson","reasoning":"Reputation: 0; Skill matches: security; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["security"],"team":"Cyber Security","userId":8}],"timestamp":"2025-08-04T19:22:41.362Z"},"timestamp":"2025-08-05 00:52:41:5241"}
{"action":"complete","agentType":"orchestrator","confidence":0.6396376811594202,"details":{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices and vulnerability scanning tools....","createdAt":"2025-08-04T19:22:41.354Z","questionId":30,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarity":0.7333333333333333,"tags":["scanning"],"title":"Docker Container Security Vulnerabilities","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices....","createdAt":"2025-08-04T19:17:06.850Z","questionId":22,"reasoning":"Title similarity: 100.0%; Content similarity: 78.3%; Tag similarity: 33.3%; Technology similarity: 0.0%","similarity":0.7014492753623188,"tags":["containers","vulnerabilities"],"title":"Docker Container Security Vulnerabilities","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:41.362Z","type":"duplicate_suggestions","warning":"Found 2 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.7285507246376811,"executed":true,"reasoning":"Analyzed question: \"Docker Container Security Vulnerabilities\". Found 2 similar questions. Most similar: \"Docker Container Security Vulnerabilities\" (73.3% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices and vulnerability scanning tools....","createdAt":"2025-08-04T19:22:41.354Z","questionId":30,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarity":0.7333333333333333,"tags":["scanning"],"title":"Docker Container Security Vulnerabilities","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices....","createdAt":"2025-08-04T19:17:06.850Z","questionId":22,"reasoning":"Title similarity: 100.0%; Content similarity: 78.3%; Tag similarity: 33.3%; Technology similarity: 0.0%","similarity":0.7014492753623188,"tags":["containers","vulnerabilities"],"title":"Docker Container Security Vulnerabilities","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:41.362Z"},"expertise":{"action":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:22:41.365Z","totalExpertise":4,"type":"expertise_updated","updatedExpertise":[{"confidence":0.7714285714285714,"evidenceCount":7,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"docker"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7714285714285714,"evidenceCount":7,"proficiency":"intermediate","skill":"security","sources":["question_content","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"docker","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned docker in question","skill":"docker","source":"question_content"},{"confidence":0.6,"evidence":"Mentioned security in question","skill":"security","source":"question_content"}],"reasoning":"Analyzed expertise for question: \"Docker Container Security Vulnerabilities\". Discovered 4 expertise areas. Strongest expertise: security (intermediate level, 77.1% confidence). Evidence sources: question_content, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:41.365Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":{"gaps":[],"highPriorityGaps":0,"timestamp":"2025-08-04T19:22:41.363Z","totalGaps":3,"type":"knowledge_gaps_identified"},"agentType":"KnowledgeGapAgent","confidence":0.7,"executed":true,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":3},"knowledgeGaps":[{"description":"Users are asking about best practices for \"Docker Container Security Vulnerabilities\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":30,"technologies":["docker","security","ai"],"title":"Best practices guide needed for: Docker Container Security Vulnerabilities","type":"best_practices"},{"description":"Users need help with Docker containerization and best practices.","frequency":1,"priority":"medium","questionId":30,"technologies":["docker"],"title":"Docker containerization guides","type":"technology_specific"},{"description":"Users need comprehensive security guidelines and best practices.","frequency":1,"priority":"high","questionId":30,"technologies":["security"],"title":"Security best practices","type":"technology_specific"}],"reasoning":"Analyzed question: \"Docker Container Security Vulnerabilities\". Identified 3 potential knowledge gaps. High priority gaps: 1. Most critical: Security best practices. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:41.363Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0.13,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: docker, containerization, security. Found 2 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["docker"],"team":"Red Hat","userId":5},{"confidence":0.13,"department":"Security","email":"mike.johnson@ibm.com","firstName":"Mike","lastName":"Johnson","reasoning":"Reputation: 0; Skill matches: security; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["security"],"team":"Cyber Security","userId":8}],"timestamp":"2025-08-04T19:22:41.362Z"},"timestamp":"2025-08-04T19:22:41.359Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 00:52:41:5241"}
{"agentResults":{"duplicate":{"action":{"similarQuestions":[{"author":"John Doe","content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices and vulnerability scanning tools....","createdAt":"2025-08-04T19:22:41.354Z","questionId":30,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarity":0.7333333333333333,"tags":["scanning"],"title":"Docker Container Security Vulnerabilities","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices....","createdAt":"2025-08-04T19:17:06.850Z","questionId":22,"reasoning":"Title similarity: 100.0%; Content similarity: 78.3%; Tag similarity: 33.3%; Technology similarity: 0.0%","similarity":0.7014492753623188,"tags":["containers","vulnerabilities"],"title":"Docker Container Security Vulnerabilities","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:41.362Z","type":"duplicate_suggestions","warning":"Found 2 similar questions. Consider checking these before posting."},"agentType":"DuplicateDetectionAgent","confidence":0.7285507246376811,"executed":true,"reasoning":"Analyzed question: \"Docker Container Security Vulnerabilities\". Found 2 similar questions. Most similar: \"Docker Container Security Vulnerabilities\" (73.3% match). Reasoning: Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarQuestions":[{"author":"John Doe","content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices and vulnerability scanning tools....","createdAt":"2025-08-04T19:22:41.354Z","questionId":30,"reasoning":"Title similarity: 100.0%; Content similarity: 100.0%; Tag similarity: 16.7%; Technology similarity: 0.0%","similarity":0.7333333333333333,"tags":["scanning"],"title":"Docker Container Security Vulnerabilities","viewCount":0,"voteCount":0},{"author":"John Doe","content":"I found security vulnerabilities in our Docker containers. How can I scan and fix these issues? Need help with container security best practices....","createdAt":"2025-08-04T19:17:06.850Z","questionId":22,"reasoning":"Title similarity: 100.0%; Content similarity: 78.3%; Tag similarity: 33.3%; Technology similarity: 0.0%","similarity":0.7014492753623188,"tags":["containers","vulnerabilities"],"title":"Docker Container Security Vulnerabilities","viewCount":0,"voteCount":0}],"timestamp":"2025-08-04T19:22:41.362Z"},"expertise":{"action":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:22:41.365Z","totalExpertise":4,"type":"expertise_updated","updatedExpertise":[{"confidence":0.7714285714285714,"evidenceCount":7,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"docker"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7714285714285714,"evidenceCount":7,"proficiency":"intermediate","skill":"security","sources":["question_content","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":1,"proficiency":"beginner","skill":"docker","sources":["question_content"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[{"confidence":0.6,"evidence":"Mentioned docker in question","skill":"docker","source":"question_content"},{"confidence":0.6,"evidence":"Mentioned security in question","skill":"security","source":"question_content"}],"reasoning":"Analyzed expertise for question: \"Docker Container Security Vulnerabilities\". Discovered 4 expertise areas. Strongest expertise: security (intermediate level, 77.1% confidence). Evidence sources: question_content, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:22:41.365Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":{"gaps":[],"highPriorityGaps":0,"timestamp":"2025-08-04T19:22:41.363Z","totalGaps":3,"type":"knowledge_gaps_identified"},"agentType":"KnowledgeGapAgent","confidence":0.7,"executed":true,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":1,"recurringGaps":0,"totalGaps":3},"knowledgeGaps":[{"description":"Users are asking about best practices for \"Docker Container Security Vulnerabilities\". A comprehensive guide would improve adoption and success.","frequency":1,"priority":"medium","questionId":30,"technologies":["docker","security","ai"],"title":"Best practices guide needed for: Docker Container Security Vulnerabilities","type":"best_practices"},{"description":"Users need help with Docker containerization and best practices.","frequency":1,"priority":"medium","questionId":30,"technologies":["docker"],"title":"Docker containerization guides","type":"technology_specific"},{"description":"Users need comprehensive security guidelines and best practices.","frequency":1,"priority":"high","questionId":30,"technologies":["security"],"title":"Security best practices","type":"technology_specific"}],"reasoning":"Analyzed question: \"Docker Container Security Vulnerabilities\". Identified 3 potential knowledge gaps. High priority gaps: 1. Most critical: Security best practices. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:22:41.363Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0.13,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: docker, containerization, security. Found 2 potential experts. Top suggestion: Jane Smith (0.13 confidence). Reasoning: Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","suggestions":[{"confidence":0.13,"department":"Infrastructure","email":"jane.smith@ibm.com","firstName":"Jane","lastName":"Smith","reasoning":"Reputation: 0; Skill matches: docker; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["docker"],"team":"Red Hat","userId":5},{"confidence":0.13,"department":"Security","email":"mike.johnson@ibm.com","firstName":"Mike","lastName":"Johnson","reasoning":"Reputation: 0; Skill matches: security; Evidence count: 0; Availability: Medium","reputation":0,"skillMatches":["security"],"team":"Cyber Security","userId":8}],"timestamp":"2025-08-04T19:22:41.362Z"},"timestamp":"2025-08-04T19:22:41.359Z"},"level":"info","message":"Agent orchestration completed","questionId":30,"timestamp":"2025-08-05 00:52:41:5241"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 00:52:41:5241"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 00:52:41:5241"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:52:46:5246","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:52:46:5246"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:52:46:5246","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":18,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:52:46:5246"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:52:56:5256","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:52:56:5256","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:52:56:5256"}
{"duration":3,"level":"debug","message":"Executed query","rows":18,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:52:56:5256"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:52:58:5258","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:52:58:5258","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:52:58:5258"}
{"duration":4,"level":"debug","message":"Executed query","rows":18,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:52:58:5258"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:52:58:5258","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:52:58:5258"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:52:58:5258","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:52:58:5258"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 00:53:11:5311","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 00:53:11:5311"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 00:53:11:5311","userId":1}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 00:53:11:5311","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 00:53:11:5311","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 00:53:11:5311"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 00:53:11:5311","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 00:53:12:5312"}
{"duration":3,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 00:53:12:5312"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:53:12:5312","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 00:53:12:5312"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:53:12:5312"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:53:12:5312"}
{"duration":8,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 00:53:12:5312"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:53:14:5314","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:53:14:5314","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":18,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:53:14:5314"}
{"duration":3,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:53:14:5314"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:53:56:5356","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:53:56:5356","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:53:56:5356"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:53:56:5356"}
{"duration":6,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:53:56:5356"}
{"duration":6,"level":"debug","message":"Executed query","rows":18,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:53:56:5356"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:54:57:5457","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:54:57:5457","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:54:57:5457"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:54:57:5457"}
{"duration":6,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:54:57:5457"}
{"duration":7,"level":"debug","message":"Executed query","rows":18,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:54:57:5457"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:54:58:5458","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:54:58:5458","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":19,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:54:58:5458"}
{"duration":21,"level":"debug","message":"Executed query","rows":18,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:54:58:5458"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:54:59:5459","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:54:59:5459","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:54:59:5459"}
{"duration":2,"level":"debug","message":"Executed query","rows":18,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:54:59:5459"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:56:28:5628","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:56:28:5628","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:56:28:5628"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:56:28:5628"}
{"duration":5,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:56:28:5628"}
{"duration":6,"level":"debug","message":"Executed query","rows":18,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:56:28:5628"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:57:05:575","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:57:05:575","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:57:05:575"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 00:57:05:575"}
{"duration":6,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:57:05:575"}
{"duration":8,"level":"debug","message":"Executed query","rows":18,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:57:05:575"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:57:06:576","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:57:06:576","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:57:06:576"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:57:06:576","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":18,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:57:06:576"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:57:06:576"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 00:57:06:576","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 00:57:06:576"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:57:13:5713","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:57:13:5713","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:57:13:5713"}
{"duration":3,"level":"debug","message":"Executed query","rows":18,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:57:13:5713"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:57:23:5723","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:57:23:5723","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:57:24:5724"}
{"duration":2,"level":"debug","message":"Executed query","rows":18,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:57:24:5724"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:57:27:5727","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:57:27:5727","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:57:27:5727"}
{"duration":3,"level":"debug","message":"Executed query","rows":18,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:57:27:5727"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:57:41:5741","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:57:41:5741","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:57:41:5741"}
{"duration":1,"level":"debug","message":"Executed query","rows":18,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:57:41:5741"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:57:41:5741","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:57:41:5741","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:57:41:5741"}
{"duration":1,"level":"debug","message":"Executed query","rows":18,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:57:41:5741"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:57:49:5749","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:57:49:5749","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:57:49:5749"}
{"duration":2,"level":"debug","message":"Executed query","rows":18,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:57:49:5749"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 00:58:04:584","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 00:58:04:584","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 00:58:04:584"}
{"duration":2,"level":"debug","message":"Executed query","rows":18,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 00:58:04:584"}
{"level":"info","message":"SIGTERM received, shutting down gracefully","timestamp":"2025-08-05 01:01:35:135"}
{"level":"info","message":"Redis connection ended","timestamp":"2025-08-05 01:01:35:135"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 01:01:37:137"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-05 01:01:37:137"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-05 01:01:37:137"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-05 01:01:37:137"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-05 01:01:37:137"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-05 01:01:37:137"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 01:01:43:143","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:01:43:143"}
{"duration":11,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 01:01:43:143"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 01:01:43:143","userId":1}
{"level":"info","message":"SIGTERM received, shutting down gracefully","timestamp":"2025-08-05 01:02:51:251"}
{"level":"info","message":"Redis connection ended","timestamp":"2025-08-05 01:02:51:251"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 01:02:53:253"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-05 01:02:53:253"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-05 01:02:53:253"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-05 01:02:53:253"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-05 01:02:53:253"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-05 01:02:53:253"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 01:02:59:259","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:02:59:259"}
{"duration":12,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 01:02:59:259"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 01:02:59:259","userId":1}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 01:03:12:312","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 01:03:12:312"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 01:03:33:333","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 01:03:33:333"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 01:03:33:333","userId":1}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:03:33:333","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:03:33:333","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:03:33:333","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":4,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:03:33:333"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 01:03:33:333","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:03:33:333"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:03:33:333"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:03:33:333"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:03:33:333"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:03:33:333"}
{"duration":7,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:03:33:333"}
{"duration":10,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:03:33:333"}
{"duration":7,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 01:03:33:333"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:03:41:341","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:03:41:341","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:03:41:341"}
{"duration":6,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:03:41:341"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:03:47:347","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:03:47:347"}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 01:03:58:358","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 01:03:58:358"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 01:03:58:358"}
{"action":"question_created","details":{"questionId":31,"title":"sandeep"},"level":"info","message":"User action","timestamp":"2025-08-05 01:03:58:358","userId":1}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 01:03:58:358"}
{"action":"start","agentType":"orchestrator","confidence":1,"details":{"questionId":31},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:03:58:358"}
{"context":{"teamContext":"","timestamp":"2025-08-04T19:33:58.512Z","urgency":"normal","userExpertise":[]},"level":"debug","message":"Perception completed","metadata":{"hasCode":false,"hasError":false,"technologyKeywords":[],"wordCount":1},"question":{"content":"sandeep","id":31,"tags":["ai"],"title":"sandeep","userId":1},"timestamp":"2025-08-05 01:03:58:358"}
{"action":"reason","agentType":"SmartRoutingAgent","confidence":1,"details":{"questionId":31},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:03:58:358"}
{"action":"reason","agentType":"DuplicateDetectionAgent","confidence":1,"details":{"questionId":31},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:03:58:358"}
{"action":"reason","agentType":"KnowledgeGapAgent","confidence":1,"details":{"questionId":31},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:03:58:358"}
{"action":"reason","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"questionId":31},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:03:58:358"}
{"error":"syntax error at or near \"OR\"","level":"error","message":"Database query error:","params":[[]],"text":"\n        SELECT DISTINCT u.id, u.first_name, u.last_name, u.email, u.department, u.team,\n               u.expertise, u.reputation, em.skill, em.proficiency_level, em.evidence_count\n        FROM users u\n        LEFT JOIN expertise_mapping em ON u.id = em.user_id\n        WHERE u.id IS NOT NULL\n        AND (\n          \n          OR u.expertise && $1\n        )\n        ORDER BY u.reputation DESC, em.evidence_count DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 01:03:58:358"}
{"code":"42601","file":"scan.l","length":92,"level":"error","line":"1180","message":"Failed to find potential experts syntax error at or near \"OR\"","name":"error","position":"329","routine":"scanner_yyerror","severity":"ERROR","stack":"error: syntax error at or near \"OR\"\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async SmartRoutingAgent.findPotentialExperts (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:163:22)\n    at async SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:29:32)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 01:03:58:358"}
{"action":"reason_complete","agentType":"SmartRoutingAgent","confidence":0,"details":{"agentType":"SmartRoutingAgent","confidence":0,"reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:33:58.516Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:03:58:358"}
{"action":"reason_complete","agentType":"KnowledgeGapAgent","confidence":0,"details":{"agentType":"KnowledgeGapAgent","confidence":0,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reasoning":"Analyzed question: \"sandeep\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:33:58.519Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:03:58:358"}
{"duration":6,"level":"debug","message":"Executed query","rows":50,"text":"\n        SELECT \n          q.title, q.content, q.created_at,\n          a.content as answer_content, a.is_accepted,\n          array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN answers a ON q.user_id = a.user_id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.user_id = $1 OR a.user_id = $1\n        GROUP BY q.id, a.id\n        ORDER BY q.created_at DESC, a.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 01:03:58:358"}
{"duration":4,"level":"debug","message":"Executed query","rows":0,"text":"\n        SELECT q.id, q.title, q.content, q.created_at, q.vote_count, q.view_count,\n               u.first_name, u.last_name,\n               array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN users u ON q.user_id = u.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.id != $1\n        AND (\n          (q.title ILIKE $2 OR q.content ILIKE $2)\n        )\n        GROUP BY q.id, u.first_name, u.last_name\n        ORDER BY q.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 01:03:58:358"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n        SELECT a.content, a.created_at, q.title, q.content as question_content,\n               array_agg(t.name) as tags\n        FROM answers a\n        JOIN questions q ON a.question_id = q.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE a.user_id = $1 AND a.is_accepted = true\n        GROUP BY a.id, q.id\n        ORDER BY a.created_at DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 01:03:58:358"}
{"action":"reason_complete","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sandeep\". Discovered 3 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:33:58.522Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:03:58:358"}
{"action":"reason_complete","agentType":"DuplicateDetectionAgent","confidence":0,"details":{"agentType":"DuplicateDetectionAgent","confidence":0,"reasoning":"Analyzed question: \"sandeep\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:33:58.522Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:03:58:358"}
{"duplicate":{"agentType":"DuplicateDetectionAgent","confidence":0,"reasoning":"Analyzed question: \"sandeep\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:33:58.522Z"},"expertise":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sandeep\". Discovered 3 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:33:58.522Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"agentType":"KnowledgeGapAgent","confidence":0,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reasoning":"Analyzed question: \"sandeep\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:33:58.519Z"},"level":"debug","message":"Reasoning completed","routing":{"agentType":"SmartRoutingAgent","confidence":0,"reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:33:58.516Z"},"timestamp":"2025-08-05 01:03:58:358"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 01:03:58:358"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 01:03:58:358"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 01:03:58:358"}
{"action":"act","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:33:58.525Z","totalExpertise":3,"type":"expertise_updated","updatedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:03:58:358"}
{"duplicate":{"action":null,"agentType":"DuplicateDetectionAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sandeep\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:33:58.523Z"},"expertise":{"action":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:33:58.525Z","totalExpertise":3,"type":"expertise_updated","updatedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sandeep\". Discovered 3 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:33:58.526Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sandeep\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:33:58.523Z"},"level":"debug","message":"Actions completed","routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:33:58.523Z"},"timestamp":"2025-08-05 01:03:58:358"}
{"action":"complete","agentType":"orchestrator","confidence":1,"details":{"duplicate":{"action":null,"agentType":"DuplicateDetectionAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sandeep\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:33:58.523Z"},"expertise":{"action":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:33:58.525Z","totalExpertise":3,"type":"expertise_updated","updatedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sandeep\". Discovered 3 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:33:58.526Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sandeep\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:33:58.523Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:33:58.523Z"},"timestamp":"2025-08-04T19:33:58.512Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:03:58:358"}
{"agentResults":{"duplicate":{"action":null,"agentType":"DuplicateDetectionAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sandeep\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:33:58.523Z"},"expertise":{"action":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:33:58.525Z","totalExpertise":3,"type":"expertise_updated","updatedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sandeep\". Discovered 3 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:33:58.526Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sandeep\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:33:58.523Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:33:58.523Z"},"timestamp":"2025-08-04T19:33:58.512Z"},"level":"info","message":"Agent orchestration completed","questionId":31,"timestamp":"2025-08-05 01:03:58:358"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 01:03:58:358"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:03:58:358","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:03:58:358","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:03:58:358"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:03:58:358"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:04:01:41","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:04:01:41","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:04:01:41","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:04:01:41"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:04:01:41"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:04:01:41"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:04:01:41"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:04:01:41"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:04:04:44","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:04:04:44"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:04:05:45","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:04:05:45"}
{"ip":"::1","level":"info","message":"GET /api/analytics/users","timestamp":"2025-08-05 01:04:05:45","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:04:05:45"}
{"ip":"::1","level":"info","message":"GET /api/analytics/questions","timestamp":"2025-08-05 01:04:05:45","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:04:05:45"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) as questions_asked,\n             COUNT(DISTINCT a.id) as answers_given,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id AND q.created_at >= NOW() - INTERVAL '30 days'\n      LEFT JOIN answers a ON u.id = a.user_id AND a.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY (COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id)) DESC\n      LIMIT 20\n    ","timestamp":"2025-08-05 01:04:05:45"}
{"duration":1,"level":"debug","message":"Executed query","rows":2,"text":"\n      SELECT DATE(created_at) as date, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY DATE(created_at)\n      ORDER BY date\n    ","timestamp":"2025-08-05 01:04:05:45"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT department, COUNT(*) as count\n      FROM users\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY department\n      ORDER BY count DESC\n    ","timestamp":"2025-08-05 01:04:05:45"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id) as total_contributions,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id\n      LEFT JOIN answers a ON u.id = a.user_id\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY total_contributions DESC, u.reputation DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 01:04:05:45"}
{"duration":2,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.name as tag, COUNT(*) as count\n      FROM questions q\n      JOIN question_tags qt ON q.id = qt.question_id\n      JOIN tags t ON qt.tag_id = t.id\n      WHERE q.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY t.name\n      ORDER BY count DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 01:04:05:45"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT status, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY status\n    ","timestamp":"2025-08-05 01:04:05:45"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:04:16:416","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:04:16:416","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:04:16:416"}
{"duration":1,"level":"debug","message":"Executed query","rows":19,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:04:16:416"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:04:21:421","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:04:21:421","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":19,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:04:21:421"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:04:21:421"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:04:32:432","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:04:32:432","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:04:32:432"}
{"duration":3,"level":"debug","message":"Executed query","rows":19,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:04:32:432"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 01:04:44:444","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 01:04:44:444"}
{"action":"login","details":{"ibmId":"EMP003"},"level":"info","message":"User action","timestamp":"2025-08-05 01:04:44:444","userId":8}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:04:44:444","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:04:44:444","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:04:44:444","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:04:44:444"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 01:04:44:444","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:04:44:444"}
{"duration":9,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:04:44:444"}
{"duration":7,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:04:44:444"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:04:44:444"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:04:44:444"}
{"duration":19,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:04:44:444"}
{"duration":18,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 01:04:44:444"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:04:48:448","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:04:48:448","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:04:48:448"}
{"duration":2,"level":"debug","message":"Executed query","rows":19,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:04:48:448"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:06:35:635","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:06:35:635"}
{"duration":5,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:06:35:635"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:06:50:650","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:06:50:650","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:06:50:650"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:06:50:650"}
{"duration":9,"level":"debug","message":"Executed query","rows":19,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:06:50:650"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:06:50:650","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:06:50:650","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:06:50:650"}
{"duration":2,"level":"debug","message":"Executed query","rows":19,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:06:50:650"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 01:06:50:650","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 01:06:50:650"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 01:06:50:650","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 01:06:50:650"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:06:50:650","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:06:50:650","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:06:50:650"}
{"duration":1,"level":"debug","message":"Executed query","rows":19,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:06:50:650"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:07:04:74","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:07:04:74","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:07:04:74"}
{"duration":1,"level":"debug","message":"Executed query","rows":19,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:07:04:74"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:07:14:714","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:07:14:714","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:07:14:714"}
{"duration":1,"level":"debug","message":"Executed query","rows":19,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:07:14:714"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:07:34:734","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:07:34:734","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:07:34:734"}
{"duration":3,"level":"debug","message":"Executed query","rows":19,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:07:34:734"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:07:39:739","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:07:39:739","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:07:39:739"}
{"duration":3,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:07:39:739"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:07:45:745","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:07:45:745"}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 01:07:52:752","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 01:07:52:752"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 01:07:52:752"}
{"action":"question_created","details":{"questionId":32,"title":"sandeep"},"level":"info","message":"User action","timestamp":"2025-08-05 01:07:52:752","userId":8}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 01:07:52:752"}
{"action":"start","agentType":"orchestrator","confidence":1,"details":{"questionId":32},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:07:52:752"}
{"context":{"teamContext":"","timestamp":"2025-08-04T19:37:52.460Z","urgency":"normal","userExpertise":[]},"level":"debug","message":"Perception completed","metadata":{"hasCode":false,"hasError":false,"technologyKeywords":[],"wordCount":1},"question":{"content":"sandeep","id":32,"tags":["deployment"],"title":"sandeep","userId":8},"timestamp":"2025-08-05 01:07:52:752"}
{"action":"reason","agentType":"SmartRoutingAgent","confidence":1,"details":{"questionId":32},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:07:52:752"}
{"action":"reason","agentType":"DuplicateDetectionAgent","confidence":1,"details":{"questionId":32},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:07:52:752"}
{"action":"reason","agentType":"KnowledgeGapAgent","confidence":1,"details":{"questionId":32},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:07:52:752"}
{"action":"reason","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"questionId":32},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:07:52:752"}
{"error":"syntax error at or near \"OR\"","level":"error","message":"Database query error:","params":[[]],"text":"\n        SELECT DISTINCT u.id, u.first_name, u.last_name, u.email, u.department, u.team,\n               u.expertise, u.reputation, em.skill, em.proficiency_level, em.evidence_count\n        FROM users u\n        LEFT JOIN expertise_mapping em ON u.id = em.user_id\n        WHERE u.id IS NOT NULL\n        AND (\n          \n          OR u.expertise && $1\n        )\n        ORDER BY u.reputation DESC, em.evidence_count DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 01:07:52:752"}
{"code":"42601","file":"scan.l","length":92,"level":"error","line":"1180","message":"Failed to find potential experts syntax error at or near \"OR\"","name":"error","position":"329","routine":"scanner_yyerror","severity":"ERROR","stack":"error: syntax error at or near \"OR\"\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async SmartRoutingAgent.findPotentialExperts (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:163:22)\n    at async SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:29:32)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 01:07:52:752"}
{"action":"reason_complete","agentType":"SmartRoutingAgent","confidence":0,"details":{"agentType":"SmartRoutingAgent","confidence":0,"reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:37:52.462Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:07:52:752"}
{"action":"reason_complete","agentType":"KnowledgeGapAgent","confidence":0,"details":{"agentType":"KnowledgeGapAgent","confidence":0,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reasoning":"Analyzed question: \"sandeep\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:37:52.464Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:07:52:752"}
{"duration":5,"level":"debug","message":"Executed query","rows":3,"text":"\n        SELECT \n          q.title, q.content, q.created_at,\n          a.content as answer_content, a.is_accepted,\n          array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN answers a ON q.user_id = a.user_id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.user_id = $1 OR a.user_id = $1\n        GROUP BY q.id, a.id\n        ORDER BY q.created_at DESC, a.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 01:07:52:752"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n        SELECT a.content, a.created_at, q.title, q.content as question_content,\n               array_agg(t.name) as tags\n        FROM answers a\n        JOIN questions q ON a.question_id = q.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE a.user_id = $1 AND a.is_accepted = true\n        GROUP BY a.id, q.id\n        ORDER BY a.created_at DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 01:07:52:752"}
{"action":"reason_complete","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":1,"proficiency":"beginner","skill":"security","sources":["content_analysis"]}],"confidence":1,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sandeep\". Discovered 1 expertise areas. Strongest expertise: security (beginner level, 80.0% confidence). Evidence sources: content_analysis","timestamp":"2025-08-04T19:37:52.468Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:07:52:752"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:07:52:752"}
{"duration":8,"level":"debug","message":"Executed query","rows":0,"text":"\n        SELECT q.id, q.title, q.content, q.created_at, q.vote_count, q.view_count,\n               u.first_name, u.last_name,\n               array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN users u ON q.user_id = u.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.id != $1\n        AND (\n          (q.title ILIKE $2 OR q.content ILIKE $2)\n        )\n        GROUP BY q.id, u.first_name, u.last_name\n        ORDER BY q.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 01:07:52:752"}
{"action":"reason_complete","agentType":"DuplicateDetectionAgent","confidence":0,"details":{"agentType":"DuplicateDetectionAgent","confidence":0,"reasoning":"Analyzed question: \"sandeep\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:37:52.471Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:07:52:752"}
{"duplicate":{"agentType":"DuplicateDetectionAgent","confidence":0,"reasoning":"Analyzed question: \"sandeep\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:37:52.471Z"},"expertise":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":1,"proficiency":"beginner","skill":"security","sources":["content_analysis"]}],"confidence":1,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sandeep\". Discovered 1 expertise areas. Strongest expertise: security (beginner level, 80.0% confidence). Evidence sources: content_analysis","timestamp":"2025-08-04T19:37:52.468Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"}]},"knowledgeGap":{"agentType":"KnowledgeGapAgent","confidence":0,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reasoning":"Analyzed question: \"sandeep\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:37:52.464Z"},"level":"debug","message":"Reasoning completed","routing":{"agentType":"SmartRoutingAgent","confidence":0,"reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:37:52.462Z"},"timestamp":"2025-08-05 01:07:52:752"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 01:07:52:752"}
{"action":"act","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:37:52.473Z","totalExpertise":1,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":1,"proficiency":"beginner","skill":"security"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:07:52:752"}
{"duplicate":{"action":null,"agentType":"DuplicateDetectionAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sandeep\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:37:52.472Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:37:52.473Z","totalExpertise":1,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":1,"proficiency":"beginner","skill":"security"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":1,"proficiency":"beginner","skill":"security","sources":["content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sandeep\". Discovered 1 expertise areas. Strongest expertise: security (beginner level, 80.0% confidence). Evidence sources: content_analysis","timestamp":"2025-08-04T19:37:52.473Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sandeep\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:37:52.472Z"},"level":"debug","message":"Actions completed","routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:37:52.472Z"},"timestamp":"2025-08-05 01:07:52:752"}
{"action":"complete","agentType":"orchestrator","confidence":1,"details":{"duplicate":{"action":null,"agentType":"DuplicateDetectionAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sandeep\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:37:52.472Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:37:52.473Z","totalExpertise":1,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":1,"proficiency":"beginner","skill":"security"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":1,"proficiency":"beginner","skill":"security","sources":["content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sandeep\". Discovered 1 expertise areas. Strongest expertise: security (beginner level, 80.0% confidence). Evidence sources: content_analysis","timestamp":"2025-08-04T19:37:52.473Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sandeep\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:37:52.472Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:37:52.472Z"},"timestamp":"2025-08-04T19:37:52.460Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:07:52:752"}
{"agentResults":{"duplicate":{"action":null,"agentType":"DuplicateDetectionAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sandeep\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:37:52.472Z"},"expertise":{"action":{"highConfidenceExpertise":1,"timestamp":"2025-08-04T19:37:52.473Z","totalExpertise":1,"type":"expertise_updated","updatedExpertise":[{"confidence":0.8,"evidenceCount":1,"proficiency":"beginner","skill":"security"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.8,"evidenceCount":1,"proficiency":"beginner","skill":"security","sources":["content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sandeep\". Discovered 1 expertise areas. Strongest expertise: security (beginner level, 80.0% confidence). Evidence sources: content_analysis","timestamp":"2025-08-04T19:37:52.473Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sandeep\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:37:52.472Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:37:52.472Z"},"timestamp":"2025-08-04T19:37:52.460Z"},"level":"info","message":"Agent orchestration completed","questionId":32,"timestamp":"2025-08-05 01:07:52:752"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 01:07:52:752"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:07:52:752","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:07:52:752","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:07:52:752"}
{"duration":2,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:07:52:752"}
{"level":"info","message":"SIGTERM received, shutting down gracefully","timestamp":"2025-08-05 01:10:46:1046"}
{"level":"info","message":"Redis connection ended","timestamp":"2025-08-05 01:10:46:1046"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 01:10:49:1049"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-05 01:10:49:1049"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-05 01:10:49:1049"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-05 01:10:49:1049"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-05 01:10:49:1049"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-05 01:10:49:1049"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 01:10:56:1056","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:10:56:1056"}
{"duration":8,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 01:10:56:1056"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 01:10:56:1056","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 01:11:02:112","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 01:11:02:112"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 01:11:02:112","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 01:11:03:113","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 01:11:03:113"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 01:11:03:113","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 01:11:04:114","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 01:11:04:114"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 01:11:04:114","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 01:11:05:115","userAgent":"curl/8.7.1"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 01:11:05:115"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 01:11:05:115","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 01:11:06:116","userAgent":"curl/8.7.1"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 01:11:06:116"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 01:11:06:116","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-05 01:11:24:1124","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-05 01:11:24:1124"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-05 01:11:24:1124","userId":1}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:11:24:1124","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:11:24:1124","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:11:24:1124","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:11:24:1124"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 01:11:24:1124","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:11:24:1124"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:11:24:1124"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:11:24:1124"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:11:24:1124"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:11:24:1124"}
{"duration":5,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 01:11:24:1124"}
{"duration":7,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:11:24:1124"}
{"duration":8,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:11:24:1124"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:11:25:1125","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/users","timestamp":"2025-08-05 01:11:25:1125","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/questions","timestamp":"2025-08-05 01:11:25:1125","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":4,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:11:25:1125"}
{"duration":2,"level":"debug","message":"Executed query","rows":2,"text":"\n      SELECT DATE(created_at) as date, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY DATE(created_at)\n      ORDER BY date\n    ","timestamp":"2025-08-05 01:11:25:1125"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:11:25:1125"}
{"duration":5,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) as questions_asked,\n             COUNT(DISTINCT a.id) as answers_given,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id AND q.created_at >= NOW() - INTERVAL '30 days'\n      LEFT JOIN answers a ON u.id = a.user_id AND a.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY (COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id)) DESC\n      LIMIT 20\n    ","timestamp":"2025-08-05 01:11:25:1125"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT department, COUNT(*) as count\n      FROM users\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY department\n      ORDER BY count DESC\n    ","timestamp":"2025-08-05 01:11:25:1125"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:11:25:1125"}
{"duration":3,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.name as tag, COUNT(*) as count\n      FROM questions q\n      JOIN question_tags qt ON q.id = qt.question_id\n      JOIN tags t ON qt.tag_id = t.id\n      WHERE q.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY t.name\n      ORDER BY count DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 01:11:25:1125"}
{"duration":3,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id) as total_contributions,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id\n      LEFT JOIN answers a ON u.id = a.user_id\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY total_contributions DESC, u.reputation DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 01:11:25:1125"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT status, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY status\n    ","timestamp":"2025-08-05 01:11:25:1125"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:11:27:1127","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:11:27:1127","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":4,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:11:27:1127"}
{"duration":4,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:11:27:1127"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:11:35:1135","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:11:35:1135","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:11:35:1135"}
{"duration":1,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:11:35:1135"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:11:44:1144","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:11:44:1144","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:11:44:1144"}
{"duration":1,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:11:44:1144"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:11:51:1151","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:11:51:1151","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:11:51:1151"}
{"duration":0,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:11:51:1151"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:12:01:121","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:12:01:121","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:12:01:121"}
{"duration":1,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:12:01:121"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:12:05:125","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:12:05:125","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:12:05:125"}
{"duration":1,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:12:05:125"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:12:05:125","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:12:05:125","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:12:05:125"}
{"duration":1,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:12:05:125"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:12:56:1256","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:12:56:1256","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:12:56:1256"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:12:56:1256"}
{"duration":7,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:12:56:1256"}
{"duration":8,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:12:56:1256"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:13:08:138","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:13:08:138","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":4,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:13:08:138"}
{"duration":4,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:13:08:138"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:13:53:1353","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:13:53:1353","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:13:53:1353"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:13:53:1353"}
{"duration":17,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:13:53:1353"}
{"duration":16,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:13:53:1353"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:13:54:1354","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:13:54:1354","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:13:54:1354"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 01:13:54:1354","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:13:54:1354"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 01:13:54:1354"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 01:13:54:1354","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 01:13:54:1354"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:14:14:1414","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:14:14:1414","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:14:14:1414"}
{"duration":1,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:14:14:1414"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:14:29:1429","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:14:29:1429","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:14:29:1429"}
{"duration":1,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:14:29:1429"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:14:52:1452","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:14:52:1452","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:14:52:1452"}
{"duration":1,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:14:52:1452"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:14:55:1455","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/questions","timestamp":"2025-08-05 01:14:55:1455","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/users","timestamp":"2025-08-05 01:14:55:1455","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":7,"level":"debug","message":"Executed query","rows":2,"text":"\n      SELECT DATE(created_at) as date, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY DATE(created_at)\n      ORDER BY date\n    ","timestamp":"2025-08-05 01:14:55:1455"}
{"duration":9,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:14:55:1455"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:14:55:1455"}
{"duration":2,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.name as tag, COUNT(*) as count\n      FROM questions q\n      JOIN question_tags qt ON q.id = qt.question_id\n      JOIN tags t ON qt.tag_id = t.id\n      WHERE q.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY t.name\n      ORDER BY count DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 01:14:55:1455"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:14:55:1455"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT status, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY status\n    ","timestamp":"2025-08-05 01:14:55:1455"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:14:55:1455"}
{"duration":14,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) as questions_asked,\n             COUNT(DISTINCT a.id) as answers_given,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id AND q.created_at >= NOW() - INTERVAL '30 days'\n      LEFT JOIN answers a ON u.id = a.user_id AND a.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY (COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id)) DESC\n      LIMIT 20\n    ","timestamp":"2025-08-05 01:14:55:1455"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT department, COUNT(*) as count\n      FROM users\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY department\n      ORDER BY count DESC\n    ","timestamp":"2025-08-05 01:14:55:1455"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id) as total_contributions,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id\n      LEFT JOIN answers a ON u.id = a.user_id\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY total_contributions DESC, u.reputation DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 01:14:55:1455"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:14:56:1456","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:14:56:1456"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:14:57:1457","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:14:57:1457","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:14:57:1457"}
{"duration":2,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:14:57:1457"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:14:57:1457","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:14:57:1457","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:14:57:1457","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:14:57:1457"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:14:57:1457"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:14:57:1457"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:14:57:1457"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:14:57:1457"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:15:07:157","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:15:07:157","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:15:07:157"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:15:07:157","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:15:07:157"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:15:07:157"}
{"duration":6,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:15:07:157"}
{"duration":11,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:15:07:157"}
{"level":"info","message":"SIGTERM received, shutting down gracefully","timestamp":"2025-08-05 01:15:43:1543"}
{"level":"info","message":"Redis connection ended","timestamp":"2025-08-05 01:15:43:1543"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 01:16:03:163"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-05 01:16:03:163"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-05 01:16:03:163"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-05 01:16:03:163"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-05 01:16:03:163"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-05 01:16:03:163"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:16:22:1622","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:16:22:1622","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:16:22:1622","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:16:22:1622"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:16:22:1622"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:16:22:1622"}
{"duration":17,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:16:22:1622"}
{"duration":12,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:16:22:1622"}
{"duration":3,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:16:22:1622"}
{"duration":16,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:16:22:1622"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:16:22:1622"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:16:22:1622","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:16:22:1622","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:16:22:1622"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:16:22:1622","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":0,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:16:22:1622"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:16:22:1622"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:16:22:1622"}
{"duration":4,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:16:22:1622"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 01:16:22:1622","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 01:16:22:1622"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 01:16:22:1622","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 01:16:22:1622"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:16:44:1644","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:16:44:1644","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:16:44:1644","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:16:44:1644"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:16:44:1644"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:16:44:1644"}
{"duration":5,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:16:44:1644"}
{"duration":15,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:16:44:1644"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:16:46:1646","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:16:46:1646"}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 01:16:51:1651","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 01:16:51:1651"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 01:16:51:1651"}
{"action":"question_created","details":{"questionId":33,"title":"sa"},"level":"info","message":"User action","timestamp":"2025-08-05 01:16:51:1651","userId":1}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 01:16:51:1651"}
{"action":"start","agentType":"orchestrator","confidence":1,"details":{"questionId":33},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:16:51:1651"}
{"context":{"teamContext":"","timestamp":"2025-08-04T19:46:51.365Z","urgency":"normal","userExpertise":[]},"level":"debug","message":"Perception completed","metadata":{"hasCode":false,"hasError":false,"technologyKeywords":[],"wordCount":1},"question":{"content":"sa","id":33,"tags":["api"],"title":"sa","userId":1},"timestamp":"2025-08-05 01:16:51:1651"}
{"action":"reason","agentType":"SmartRoutingAgent","confidence":1,"details":{"questionId":33},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:16:51:1651"}
{"action":"reason","agentType":"DuplicateDetectionAgent","confidence":1,"details":{"questionId":33},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:16:51:1651"}
{"action":"reason","agentType":"KnowledgeGapAgent","confidence":1,"details":{"questionId":33},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:16:51:1651"}
{"action":"reason","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"questionId":33},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:16:51:1651"}
{"error":"syntax error at or near \"OR\"","level":"error","message":"Database query error:","params":[[]],"text":"\n        SELECT DISTINCT u.id, u.first_name, u.last_name, u.email, u.department, u.team,\n               u.expertise, u.reputation, em.skill, em.proficiency_level, em.evidence_count\n        FROM users u\n        LEFT JOIN expertise_mapping em ON u.id = em.user_id\n        WHERE u.id IS NOT NULL\n        AND (\n          \n          OR u.expertise && $1\n        )\n        ORDER BY u.reputation DESC, em.evidence_count DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 01:16:51:1651"}
{"code":"42601","file":"scan.l","length":92,"level":"error","line":"1180","message":"Failed to find potential experts syntax error at or near \"OR\"","name":"error","position":"329","routine":"scanner_yyerror","severity":"ERROR","stack":"error: syntax error at or near \"OR\"\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async SmartRoutingAgent.findPotentialExperts (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:163:22)\n    at async SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:29:32)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 01:16:51:1651"}
{"duration":3,"level":"debug","message":"Executed query","rows":50,"text":"\n        SELECT \n          q.title, q.content, q.created_at,\n          a.content as answer_content, a.is_accepted,\n          array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN answers a ON q.user_id = a.user_id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.user_id = $1 OR a.user_id = $1\n        GROUP BY q.id, a.id\n        ORDER BY q.created_at DESC, a.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 01:16:51:1651"}
{"action":"reason_complete","agentType":"KnowledgeGapAgent","confidence":0,"details":{"agentType":"KnowledgeGapAgent","confidence":0,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reasoning":"Analyzed question: \"sa\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:46:51.369Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:16:51:1651"}
{"action":"reason_complete","agentType":"SmartRoutingAgent","confidence":0,"details":{"agentType":"SmartRoutingAgent","confidence":0,"reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:46:51.370Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:16:51:1651"}
{"duration":3,"level":"debug","message":"Executed query","rows":0,"text":"\n        SELECT q.id, q.title, q.content, q.created_at, q.vote_count, q.view_count,\n               u.first_name, u.last_name,\n               array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN users u ON q.user_id = u.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.id != $1\n        AND (\n          (q.title ILIKE $2 OR q.content ILIKE $2)\n        )\n        GROUP BY q.id, u.first_name, u.last_name\n        ORDER BY q.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 01:16:51:1651"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n        SELECT a.content, a.created_at, q.title, q.content as question_content,\n               array_agg(t.name) as tags\n        FROM answers a\n        JOIN questions q ON a.question_id = q.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE a.user_id = $1 AND a.is_accepted = true\n        GROUP BY a.id, q.id\n        ORDER BY a.created_at DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 01:16:51:1651"}
{"action":"reason_complete","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sa\". Discovered 3 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:46:51.371Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:16:51:1651"}
{"action":"reason_complete","agentType":"DuplicateDetectionAgent","confidence":0,"details":{"agentType":"DuplicateDetectionAgent","confidence":0,"reasoning":"Analyzed question: \"sa\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:46:51.371Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:16:51:1651"}
{"duplicate":{"agentType":"DuplicateDetectionAgent","confidence":0,"reasoning":"Analyzed question: \"sa\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:46:51.371Z"},"expertise":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sa\". Discovered 3 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:46:51.371Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"agentType":"KnowledgeGapAgent","confidence":0,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reasoning":"Analyzed question: \"sa\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:46:51.369Z"},"level":"debug","message":"Reasoning completed","routing":{"agentType":"SmartRoutingAgent","confidence":0,"reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:46:51.370Z"},"timestamp":"2025-08-05 01:16:51:1651"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 01:16:51:1651"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 01:16:51:1651"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 01:16:51:1651"}
{"action":"act","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:46:51.374Z","totalExpertise":3,"type":"expertise_updated","updatedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:16:51:1651"}
{"duplicate":{"action":null,"agentType":"DuplicateDetectionAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sa\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:46:51.372Z"},"expertise":{"action":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:46:51.374Z","totalExpertise":3,"type":"expertise_updated","updatedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sa\". Discovered 3 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:46:51.374Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sa\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:46:51.372Z"},"level":"debug","message":"Actions completed","routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:46:51.371Z"},"timestamp":"2025-08-05 01:16:51:1651"}
{"action":"complete","agentType":"orchestrator","confidence":1,"details":{"duplicate":{"action":null,"agentType":"DuplicateDetectionAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sa\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:46:51.372Z"},"expertise":{"action":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:46:51.374Z","totalExpertise":3,"type":"expertise_updated","updatedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sa\". Discovered 3 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:46:51.374Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sa\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:46:51.372Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:46:51.371Z"},"timestamp":"2025-08-04T19:46:51.365Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:16:51:1651"}
{"agentResults":{"duplicate":{"action":null,"agentType":"DuplicateDetectionAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sa\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:46:51.372Z"},"expertise":{"action":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:46:51.374Z","totalExpertise":3,"type":"expertise_updated","updatedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sa\". Discovered 3 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:46:51.374Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sa\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:46:51.372Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:46:51.371Z"},"timestamp":"2025-08-04T19:46:51.365Z"},"level":"info","message":"Agent orchestration completed","questionId":33,"timestamp":"2025-08-05 01:16:51:1651"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 01:16:51:1651"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:16:51:1651","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:16:51:1651","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:16:51:1651"}
{"duration":0,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:16:51:1651"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:16:53:1653","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:16:53:1653","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:16:53:1653"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:16:53:1653"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:16:56:1656","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:16:56:1656","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:16:56:1656"}
{"duration":1,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:16:56:1656"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:17:00:170","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:17:00:170","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:17:00:170"}
{"duration":1,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:17:00:170"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:17:03:173","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/questions","timestamp":"2025-08-05 01:17:03:173","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/users","timestamp":"2025-08-05 01:17:03:173","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:17:03:173"}
{"duration":2,"level":"debug","message":"Executed query","rows":2,"text":"\n      SELECT DATE(created_at) as date, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY DATE(created_at)\n      ORDER BY date\n    ","timestamp":"2025-08-05 01:17:03:173"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:17:03:173"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.name as tag, COUNT(*) as count\n      FROM questions q\n      JOIN question_tags qt ON q.id = qt.question_id\n      JOIN tags t ON qt.tag_id = t.id\n      WHERE q.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY t.name\n      ORDER BY count DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 01:17:03:173"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:17:03:173"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT status, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY status\n    ","timestamp":"2025-08-05 01:17:03:173"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:17:03:173"}
{"duration":13,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) as questions_asked,\n             COUNT(DISTINCT a.id) as answers_given,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id AND q.created_at >= NOW() - INTERVAL '30 days'\n      LEFT JOIN answers a ON u.id = a.user_id AND a.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY (COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id)) DESC\n      LIMIT 20\n    ","timestamp":"2025-08-05 01:17:03:173"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT department, COUNT(*) as count\n      FROM users\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY department\n      ORDER BY count DESC\n    ","timestamp":"2025-08-05 01:17:03:173"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id) as total_contributions,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id\n      LEFT JOIN answers a ON u.id = a.user_id\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY total_contributions DESC, u.reputation DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 01:17:03:173"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:17:05:175","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:17:05:175","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:17:05:175"}
{"duration":2,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:17:05:175"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:17:07:177","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:17:07:177"}
{"ip":"::1","level":"info","message":"POST /api/questions","timestamp":"2025-08-05 01:17:10:1710","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO questions (title, content, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, title, content, created_at\n    ","timestamp":"2025-08-05 01:17:10:1710"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n          INSERT INTO tags (name, category)\n          VALUES ($1, 'technology')\n          ON CONFLICT (name) DO NOTHING\n          RETURNING id\n        ","timestamp":"2025-08-05 01:17:10:1710"}
{"action":"question_created","details":{"questionId":34,"title":"sa"},"level":"info","message":"User action","timestamp":"2025-08-05 01:17:10:1710","userId":1}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 01:17:10:1710"}
{"action":"start","agentType":"orchestrator","confidence":1,"details":{"questionId":34},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:17:10:1710"}
{"context":{"teamContext":"","timestamp":"2025-08-04T19:47:10.907Z","urgency":"normal","userExpertise":[]},"level":"debug","message":"Perception completed","metadata":{"hasCode":false,"hasError":false,"technologyKeywords":[],"wordCount":1},"question":{"content":"sa","id":34,"tags":["devops"],"title":"sa","userId":1},"timestamp":"2025-08-05 01:17:10:1710"}
{"action":"reason","agentType":"SmartRoutingAgent","confidence":1,"details":{"questionId":34},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:17:10:1710"}
{"action":"reason","agentType":"DuplicateDetectionAgent","confidence":1,"details":{"questionId":34},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:17:10:1710"}
{"action":"reason","agentType":"KnowledgeGapAgent","confidence":1,"details":{"questionId":34},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:17:10:1710"}
{"action":"reason","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"questionId":34},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:17:10:1710"}
{"action":"reason_complete","agentType":"KnowledgeGapAgent","confidence":0,"details":{"agentType":"KnowledgeGapAgent","confidence":0,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reasoning":"Analyzed question: \"sa\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:47:10.908Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:17:10:1710"}
{"duration":2,"level":"debug","message":"Executed query","rows":50,"text":"\n        SELECT \n          q.title, q.content, q.created_at,\n          a.content as answer_content, a.is_accepted,\n          array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN answers a ON q.user_id = a.user_id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.user_id = $1 OR a.user_id = $1\n        GROUP BY q.id, a.id\n        ORDER BY q.created_at DESC, a.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 01:17:10:1710"}
{"duration":2,"level":"debug","message":"Executed query","rows":0,"text":"\n        SELECT q.id, q.title, q.content, q.created_at, q.vote_count, q.view_count,\n               u.first_name, u.last_name,\n               array_agg(t.name) as tags\n        FROM questions q\n        LEFT JOIN users u ON q.user_id = u.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE q.id != $1\n        AND (\n          (q.title ILIKE $2 OR q.content ILIKE $2)\n        )\n        GROUP BY q.id, u.first_name, u.last_name\n        ORDER BY q.created_at DESC\n        LIMIT 50\n      ","timestamp":"2025-08-05 01:17:10:1710"}
{"action":"reason_complete","agentType":"DuplicateDetectionAgent","confidence":0,"details":{"agentType":"DuplicateDetectionAgent","confidence":0,"reasoning":"Analyzed question: \"sa\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:47:10.910Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:17:10:1710"}
{"duration":0,"level":"debug","message":"Executed query","rows":0,"text":"\n        SELECT a.content, a.created_at, q.title, q.content as question_content,\n               array_agg(t.name) as tags\n        FROM answers a\n        JOIN questions q ON a.question_id = q.id\n        LEFT JOIN question_tags qt ON q.id = qt.question_id\n        LEFT JOIN tags t ON qt.tag_id = t.id\n        WHERE a.user_id = $1 AND a.is_accepted = true\n        GROUP BY a.id, q.id\n        ORDER BY a.created_at DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 01:17:10:1710"}
{"action":"reason_complete","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sa\". Discovered 3 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:47:10.910Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:17:10:1710"}
{"error":"syntax error at or near \"OR\"","level":"error","message":"Database query error:","params":[[]],"text":"\n        SELECT DISTINCT u.id, u.first_name, u.last_name, u.email, u.department, u.team,\n               u.expertise, u.reputation, em.skill, em.proficiency_level, em.evidence_count\n        FROM users u\n        LEFT JOIN expertise_mapping em ON u.id = em.user_id\n        WHERE u.id IS NOT NULL\n        AND (\n          \n          OR u.expertise && $1\n        )\n        ORDER BY u.reputation DESC, em.evidence_count DESC\n        LIMIT 20\n      ","timestamp":"2025-08-05 01:17:10:1710"}
{"code":"42601","file":"scan.l","length":92,"level":"error","line":"1180","message":"Failed to find potential experts syntax error at or near \"OR\"","name":"error","position":"329","routine":"scanner_yyerror","severity":"ERROR","stack":"error: syntax error at or near \"OR\"\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async SmartRoutingAgent.findPotentialExperts (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:163:22)\n    at async SmartRoutingAgent.reason (/Users/sandeep22/IBM_project/server/agents/smartRoutingAgent.js:29:32)\n    at async Promise.allSettled (index 0)\n    at async AgentOrchestrator.reason (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:99:83)\n    at async AgentOrchestrator.orchestrate (/Users/sandeep22/IBM_project/server/agents/orchestrator.js:43:25)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:212:28","timestamp":"2025-08-05 01:17:10:1710"}
{"action":"reason_complete","agentType":"SmartRoutingAgent","confidence":0,"details":{"agentType":"SmartRoutingAgent","confidence":0,"reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:47:10.912Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:17:10:1710"}
{"duplicate":{"agentType":"DuplicateDetectionAgent","confidence":0,"reasoning":"Analyzed question: \"sa\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:47:10.910Z"},"expertise":{"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sa\". Discovered 3 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:47:10.910Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"agentType":"KnowledgeGapAgent","confidence":0,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reasoning":"Analyzed question: \"sa\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:47:10.908Z"},"level":"debug","message":"Reasoning completed","routing":{"agentType":"SmartRoutingAgent","confidence":0,"reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:47:10.912Z"},"timestamp":"2025-08-05 01:17:10:1710"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 01:17:10:1710"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 01:17:10:1710"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n              INSERT INTO expertise_mapping (user_id, skill, proficiency_level, evidence_count)\n              VALUES ($1, $2, $3, $4)\n              ON CONFLICT (user_id, skill) DO UPDATE SET\n                proficiency_level = CASE \n                  WHEN expertise_mapping.evidence_count < $4 THEN $3\n                  ELSE expertise_mapping.proficiency_level\n                END,\n                evidence_count = GREATEST(expertise_mapping.evidence_count, $4),\n                last_updated = CURRENT_TIMESTAMP\n              RETURNING id\n            ","timestamp":"2025-08-05 01:17:10:1710"}
{"action":"act","agentType":"ExpertiseDiscoveryAgent","confidence":1,"details":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:47:10.915Z","totalExpertise":3,"type":"expertise_updated","updatedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:17:10:1710"}
{"duplicate":{"action":null,"agentType":"DuplicateDetectionAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sa\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:47:10.912Z"},"expertise":{"action":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:47:10.915Z","totalExpertise":3,"type":"expertise_updated","updatedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sa\". Discovered 3 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:47:10.915Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sa\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:47:10.912Z"},"level":"debug","message":"Actions completed","routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:47:10.912Z"},"timestamp":"2025-08-05 01:17:10:1710"}
{"action":"complete","agentType":"orchestrator","confidence":1,"details":{"duplicate":{"action":null,"agentType":"DuplicateDetectionAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sa\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:47:10.912Z"},"expertise":{"action":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:47:10.915Z","totalExpertise":3,"type":"expertise_updated","updatedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sa\". Discovered 3 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:47:10.915Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sa\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:47:10.912Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:47:10.912Z"},"timestamp":"2025-08-04T19:47:10.907Z"},"level":"info","message":"Agent action","timestamp":"2025-08-05 01:17:10:1710"}
{"agentResults":{"duplicate":{"action":null,"agentType":"DuplicateDetectionAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sa\". Found 0 similar questions","similarQuestions":[],"timestamp":"2025-08-04T19:47:10.912Z"},"expertise":{"action":{"highConfidenceExpertise":0,"timestamp":"2025-08-04T19:47:10.915Z","totalExpertise":3,"type":"expertise_updated","updatedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security"},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing"},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization"}]},"agentType":"ExpertiseDiscoveryAgent","answerExpertise":[],"combinedExpertise":[{"confidence":0.7999999999999999,"evidenceCount":6,"proficiency":"intermediate","skill":"security","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.7000000000000001,"evidenceCount":6,"proficiency":"intermediate","skill":"testing","sources":["content_analysis","content_analysis","content_analysis","content_analysis","content_analysis","content_analysis"]},{"confidence":0.6,"evidenceCount":2,"proficiency":"intermediate","skill":"performance_optimization","sources":["content_analysis","content_analysis"]}],"confidence":1,"executed":true,"expertiseIndicators":[],"reasoning":"Analyzed expertise for question: \"sa\". Discovered 3 expertise areas. Strongest expertise: security (intermediate level, 80.0% confidence). Evidence sources: content_analysis, content_analysis, content_analysis, content_analysis, content_analysis, content_analysis","timestamp":"2025-08-04T19:47:10.915Z","userExpertise":[{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.8,"evidence":"Discusses security topics","skill":"security","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.7,"evidence":"Discusses testing practices","skill":"testing","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"},{"confidence":0.6,"evidence":"Discusses performance or optimization","skill":"performance_optimization","source":"content_analysis"}]},"knowledgeGap":{"action":null,"agentType":"KnowledgeGapAgent","confidence":0,"executed":false,"impactAssessment":{"estimatedImpact":"low","highPriorityGaps":0,"recurringGaps":0,"totalGaps":0},"knowledgeGaps":[],"reason":"Below confidence threshold","reasoning":"Analyzed question: \"sa\". Identified 0 potential knowledge gaps. Estimated impact: low","recurringPattern":[],"timestamp":"2025-08-04T19:47:10.912Z"},"routing":{"action":null,"agentType":"SmartRoutingAgent","confidence":0,"executed":false,"reason":"Below confidence threshold","reasoning":"Question requires expertise in: . Found 0 potential experts","suggestions":[],"timestamp":"2025-08-04T19:47:10.912Z"},"timestamp":"2025-08-04T19:47:10.907Z"},"level":"info","message":"Agent orchestration completed","questionId":34,"timestamp":"2025-08-05 01:17:10:1710"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n            INSERT INTO agent_suggestions (agent_type, question_id, suggested_user_id, confidence_score, reasoning, accepted)\n            VALUES ($1, $2, $3, $4, $5, $6)\n          ","timestamp":"2025-08-05 01:17:10:1710"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:17:10:1710","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:17:10:1710","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:17:10:1710"}
{"duration":4,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:17:10:1710"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:17:11:1711","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/questions","timestamp":"2025-08-05 01:17:11:1711","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/users","timestamp":"2025-08-05 01:17:11:1711","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:17:11:1711"}
{"duration":1,"level":"debug","message":"Executed query","rows":2,"text":"\n      SELECT DATE(created_at) as date, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY DATE(created_at)\n      ORDER BY date\n    ","timestamp":"2025-08-05 01:17:11:1711"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:17:11:1711"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.name as tag, COUNT(*) as count\n      FROM questions q\n      JOIN question_tags qt ON q.id = qt.question_id\n      JOIN tags t ON qt.tag_id = t.id\n      WHERE q.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY t.name\n      ORDER BY count DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 01:17:11:1711"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:17:11:1711"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT status, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY status\n    ","timestamp":"2025-08-05 01:17:11:1711"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:17:11:1711"}
{"duration":8,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) as questions_asked,\n             COUNT(DISTINCT a.id) as answers_given,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id AND q.created_at >= NOW() - INTERVAL '30 days'\n      LEFT JOIN answers a ON u.id = a.user_id AND a.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY (COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id)) DESC\n      LIMIT 20\n    ","timestamp":"2025-08-05 01:17:11:1711"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT department, COUNT(*) as count\n      FROM users\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY department\n      ORDER BY count DESC\n    ","timestamp":"2025-08-05 01:17:11:1711"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id) as total_contributions,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id\n      LEFT JOIN answers a ON u.id = a.user_id\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY total_contributions DESC, u.reputation DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 01:17:11:1711"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:17:15:1715","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:17:15:1715","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:17:15:1715"}
{"duration":3,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:17:15:1715"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:17:16:1716","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:17:16:1716","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:17:16:1716","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:17:16:1716"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:17:16:1716"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:17:16:1716"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:17:16:1716"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:17:16:1716"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:17:20:1720","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:17:20:1720","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:17:20:1720"}
{"duration":2,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:17:20:1720"}
{"ip":"::1","level":"info","message":"GET /api/questions/26","timestamp":"2025-08-05 01:17:26:1726","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/answers/questions/26/answers","timestamp":"2025-08-05 01:17:26:1726","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      UPDATE questions\n      SET view_count = view_count + 1\n      WHERE id = $1\n    ","timestamp":"2025-08-05 01:17:26:1726"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT a.id, a.content, a.is_accepted, a.vote_count, a.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team\n      FROM answers a\n      LEFT JOIN users u ON a.user_id = u.id\n      WHERE a.question_id = $1\n      ORDER BY a.is_accepted DESC, a.vote_count DESC, a.created_at ASC\n    ","timestamp":"2025-08-05 01:17:26:1726"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n      WHERE q.id = $1\n      GROUP BY q.id, u.id, u.first_name, u.last_name, u.department, u.team\n    ","timestamp":"2025-08-05 01:17:26:1726"}
{"ip":"::1","level":"info","message":"POST /api/answers/questions/26/answers","timestamp":"2025-08-05 01:17:33:1733","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id FROM questions WHERE id = $1\n    ","timestamp":"2025-08-05 01:17:33:1733"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO answers (content, question_id, user_id)\n      VALUES ($1, $2, $3)\n      RETURNING id, content, created_at\n    ","timestamp":"2025-08-05 01:17:33:1733"}
{"action":"answer_created","details":{"answerId":7,"questionId":"26"},"level":"info","message":"User action","timestamp":"2025-08-05 01:17:33:1733","userId":1}
{"ip":"::1","level":"info","message":"GET /api/answers/questions/26/answers","timestamp":"2025-08-05 01:17:33:1733","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT a.id, a.content, a.is_accepted, a.vote_count, a.created_at,\n             u.id as user_id, u.first_name, u.last_name, u.department, u.team\n      FROM answers a\n      LEFT JOIN users u ON a.user_id = u.id\n      WHERE a.question_id = $1\n      ORDER BY a.is_accepted DESC, a.vote_count DESC, a.created_at ASC\n    ","timestamp":"2025-08-05 01:17:33:1733"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:17:35:1735","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/users","timestamp":"2025-08-05 01:17:35:1735","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/questions","timestamp":"2025-08-05 01:17:35:1735","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:17:35:1735"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) as questions_asked,\n             COUNT(DISTINCT a.id) as answers_given,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id AND q.created_at >= NOW() - INTERVAL '30 days'\n      LEFT JOIN answers a ON u.id = a.user_id AND a.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY (COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id)) DESC\n      LIMIT 20\n    ","timestamp":"2025-08-05 01:17:35:1735"}
{"duration":1,"level":"debug","message":"Executed query","rows":2,"text":"\n      SELECT DATE(created_at) as date, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY DATE(created_at)\n      ORDER BY date\n    ","timestamp":"2025-08-05 01:17:35:1735"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:17:35:1735"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT department, COUNT(*) as count\n      FROM users\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY department\n      ORDER BY count DESC\n    ","timestamp":"2025-08-05 01:17:35:1735"}
{"duration":1,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.name as tag, COUNT(*) as count\n      FROM questions q\n      JOIN question_tags qt ON q.id = qt.question_id\n      JOIN tags t ON qt.tag_id = t.id\n      WHERE q.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY t.name\n      ORDER BY count DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 01:17:35:1735"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:17:35:1735"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id) as total_contributions,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id\n      LEFT JOIN answers a ON u.id = a.user_id\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY total_contributions DESC, u.reputation DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 01:17:35:1735"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT status, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY status\n    ","timestamp":"2025-08-05 01:17:35:1735"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:17:39:1739","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:17:39:1739"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:17:39:1739","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:17:39:1739","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:17:39:1739"}
{"duration":2,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:17:39:1739"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:17:40:1740","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:17:40:1740","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:17:40:1740","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:17:40:1740"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:17:40:1740"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:17:40:1740"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:17:40:1740"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:17:40:1740"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:17:54:1754","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:17:54:1754","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:17:54:1754","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:17:54:1754"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:17:54:1754"}
{"duration":3,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:17:54:1754"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:17:54:1754"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:17:54:1754"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:17:57:1757","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:17:57:1757","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 01:17:57:1757","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:17:57:1757","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":11,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:17:57:1757"}
{"duration":11,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:17:57:1757"}
{"duration":11,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 01:17:57:1757"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-05 01:17:57:1757","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:17:57:1757"}
{"duration":3,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:17:57:1757"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-05 01:17:57:1757"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:17:57:1757"}
{"duration":15,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:17:57:1757"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:17:59:1759","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:17:59:1759","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:17:59:1759","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:17:59:1759"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:17:59:1759"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:17:59:1759"}
{"duration":4,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:17:59:1759"}
{"duration":6,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:17:59:1759"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:18:25:1825","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:18:25:1825","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:18:25:1825","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:18:25:1825"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:18:25:1825"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:18:25:1825"}
{"duration":0,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:18:25:1825"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:18:25:1825"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:18:26:1826","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:18:26:1826","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:18:26:1826","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:18:26:1826"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:18:26:1826"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:18:26:1826"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:18:26:1826"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:18:26:1826"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:18:27:1827","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:18:27:1827","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:18:27:1827"}
{"duration":1,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:18:27:1827"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:18:28:1828","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:18:28:1828"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:18:28:1828","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/questions","timestamp":"2025-08-05 01:18:28:1828","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/users","timestamp":"2025-08-05 01:18:28:1828","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:18:28:1828"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:18:28:1828"}
{"duration":2,"level":"debug","message":"Executed query","rows":2,"text":"\n      SELECT DATE(created_at) as date, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY DATE(created_at)\n      ORDER BY date\n    ","timestamp":"2025-08-05 01:18:28:1828"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) as questions_asked,\n             COUNT(DISTINCT a.id) as answers_given,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id AND q.created_at >= NOW() - INTERVAL '30 days'\n      LEFT JOIN answers a ON u.id = a.user_id AND a.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY (COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id)) DESC\n      LIMIT 20\n    ","timestamp":"2025-08-05 01:18:28:1828"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT department, COUNT(*) as count\n      FROM users\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY department\n      ORDER BY count DESC\n    ","timestamp":"2025-08-05 01:18:28:1828"}
{"duration":3,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:18:28:1828"}
{"duration":3,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT t.name as tag, COUNT(*) as count\n      FROM questions q\n      JOIN question_tags qt ON q.id = qt.question_id\n      JOIN tags t ON qt.tag_id = t.id\n      WHERE q.created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY t.name\n      ORDER BY count DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 01:18:28:1828"}
{"duration":3,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT u.first_name, u.last_name, u.department,\n             COUNT(DISTINCT q.id) + COUNT(DISTINCT a.id) as total_contributions,\n             u.reputation\n      FROM users u\n      LEFT JOIN questions q ON u.id = q.user_id\n      LEFT JOIN answers a ON u.id = a.user_id\n      GROUP BY u.id, u.first_name, u.last_name, u.department, u.reputation\n      ORDER BY total_contributions DESC, u.reputation DESC\n      LIMIT 10\n    ","timestamp":"2025-08-05 01:18:28:1828"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT status, COUNT(*) as count\n      FROM questions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY status\n    ","timestamp":"2025-08-05 01:18:28:1828"}
{"ip":"::1","level":"info","message":"GET /api/agents/performance","timestamp":"2025-08-05 01:18:30:1830","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/agents/suggestions","timestamp":"2025-08-05 01:18:30:1830","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_suggestions,\n             COUNT(CASE WHEN accepted = false THEN 1 END) as rejected_suggestions\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '30 days'\n      GROUP BY agent_type\n      ORDER BY total_suggestions DESC\n    ","timestamp":"2025-08-05 01:18:30:1830"}
{"duration":1,"level":"debug","message":"Executed query","rows":20,"text":"\n      SELECT s.id, s.agent_type, s.reasoning as suggestion_data, \n             s.confidence_score, s.accepted, s.created_at,\n             u.first_name, u.last_name\n      FROM agent_suggestions s\n      LEFT JOIN users u ON s.suggested_user_id = u.id\n      ORDER BY s.created_at DESC\n      LIMIT $1\n    ","timestamp":"2025-08-05 01:18:30:1830"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:20:40:2040","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:20:40:2040"}
{"duration":8,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:20:40:2040"}
{"level":"info","message":"SIGINT received, shutting down gracefully","timestamp":"2025-08-05 01:23:17:2317"}
{"level":"info","message":"SIGINT received, shutting down gracefully","timestamp":"2025-08-05 01:23:17:2317"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-05 01:39:07:397"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-05 01:39:07:397"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-05 01:39:07:397"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-05 01:39:07:397"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-05 01:39:07:397"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-05 01:39:07:397"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:39:34:3934","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:39:34:3934","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:39:34:3934","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /favicon.ico","timestamp":"2025-08-05 01:39:34:3934","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:39:34:3934"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:39:34:3934"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-05 01:39:34:3934"}
{"duration":10,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:39:34:3934"}
{"duration":12,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:39:34:3934"}
{"duration":10,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:39:34:3934"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:39:34:3934"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:39:34:3934"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:39:35:3935","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:39:35:3935","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:39:35:3935"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:39:35:3935","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:39:35:3935"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:39:35:3935"}
{"duration":0,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:39:35:3935"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:39:35:3935"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:39:37:3937","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:39:37:3937","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:39:37:3937","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:39:37:3937"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:39:37:3937"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:39:37:3937"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:39:37:3937"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:39:37:3937"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:39:41:3941","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:39:41:3941","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:39:41:3941"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:39:41:3941"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:39:41:3941","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:39:41:3941"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:39:41:3941"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:39:41:3941"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:39:41:3941","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:39:41:3941","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:39:41:3941"}
{"duration":3,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:39:41:3941"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:39:42:3942","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-05 01:39:42:3942","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":10,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:39:42:3942"}
{"duration":2,"level":"debug","message":"Executed query","rows":44,"text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-05 01:39:42:3942"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:39:43:3943","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:39:43:3943","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:39:43:3943","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":0,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:39:43:3943"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:39:43:3943"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:39:43:3943"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:39:43:3943"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:39:43:3943"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:39:44:3944","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:39:44:3944","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:39:44:3944","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:39:44:3944"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:39:44:3944"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:39:44:3944"}
{"duration":0,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:39:44:3944"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:39:44:3944"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:39:46:3946","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:39:46:3946","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:39:46:3946","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:39:46:3946"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:39:46:3946"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:39:46:3946"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:39:46:3946"}
{"duration":0,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:39:46:3946"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:39:50:3950","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:39:50:3950","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:39:50:3950"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:39:50:3950","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:39:50:3950"}
{"duration":2,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:39:50:3950"}
{"duration":0,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:39:50:3950"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:39:50:3950"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-05 01:39:52:3952","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-05 01:39:52:3952","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-05 01:39:52:3952","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36"}
{"duration":7,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-05 01:39:52:3952"}
{"duration":5,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-05 01:39:52:3952"}
{"duration":6,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-05 01:39:52:3952"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-05 01:39:52:3952"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-05 01:39:52:3952"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 20:11:59:1159"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 20:11:59:1159"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 20:11:59:1159"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 20:11:59:1159"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 20:11:59:1159"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 20:11:59:1159"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 20:12:01:121","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 20:12:01:121","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 20:12:01:121","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /favicon.ico","timestamp":"2025-08-16 20:12:01:121","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"error":"role \"username\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 20:12:01:121"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Failed to get dashboard analytics: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/analytics.js:13:26","timestamp":"2025-08-16 20:12:01:121"}
{"error":"role \"username\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 20:12:01:121"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Failed to get users: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/users.js:12:20","timestamp":"2025-08-16 20:12:01:121"}
{"error":"role \"username\" does not exist","level":"error","message":"Database query error:","params":[5,0],"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 20:12:01:121"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Failed to get questions: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:51:20","timestamp":"2025-08-16 20:12:01:121"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 20:12:02:122","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 20:12:02:122","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 20:12:03:123","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"error":"role \"username\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 20:12:03:123"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Failed to get dashboard analytics: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/analytics.js:13:26","timestamp":"2025-08-16 20:12:03:123"}
{"error":"role \"username\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 20:12:03:123"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Failed to get users: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/users.js:12:20","timestamp":"2025-08-16 20:12:03:123"}
{"error":"role \"username\" does not exist","level":"error","message":"Database query error:","params":[5,0],"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 20:12:03:123"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Failed to get questions: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:51:20","timestamp":"2025-08-16 20:12:03:123"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 20:12:05:125","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 20:12:05:125","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 20:12:05:125","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"error":"role \"username\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 20:12:05:125"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Failed to get dashboard analytics: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/analytics.js:13:26","timestamp":"2025-08-16 20:12:05:125"}
{"error":"role \"username\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 20:12:05:125"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Failed to get users: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/users.js:12:20","timestamp":"2025-08-16 20:12:05:125"}
{"error":"role \"username\" does not exist","level":"error","message":"Database query error:","params":[5,0],"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 20:12:05:125"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Failed to get questions: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:51:20","timestamp":"2025-08-16 20:12:05:125"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 20:12:09:129","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 20:12:09:129","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 20:12:09:129","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"error":"role \"username\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 20:12:09:129"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Failed to get dashboard analytics: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/analytics.js:13:26","timestamp":"2025-08-16 20:12:09:129"}
{"error":"role \"username\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 20:12:09:129"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Failed to get users: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/users.js:12:20","timestamp":"2025-08-16 20:12:09:129"}
{"error":"role \"username\" does not exist","level":"error","message":"Database query error:","params":[5,0],"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 20:12:09:129"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Failed to get questions: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:51:20","timestamp":"2025-08-16 20:12:09:129"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-16 20:12:11:1211","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 20:12:11:1211","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"error":"role \"username\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-16 20:12:11:1211"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Failed to get tags: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/tags.js:12:20","timestamp":"2025-08-16 20:12:11:1211"}
{"error":"role \"username\" does not exist","level":"error","message":"Database query error:","params":[10,0],"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 20:12:11:1211"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Failed to get questions: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:51:20","timestamp":"2025-08-16 20:12:11:1211"}
{"ip":"::1","level":"info","message":"GET /api/tags","timestamp":"2025-08-16 20:12:12:1212","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 20:12:12:1212","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"error":"role \"username\" does not exist","level":"error","message":"Database query error:","text":"\n      SELECT t.id, t.name, t.category, t.description,\n             COUNT(qt.question_id) as question_count\n      FROM tags t\n      LEFT JOIN question_tags qt ON t.id = qt.tag_id\n      GROUP BY t.id, t.name, t.category, t.description\n      ORDER BY question_count DESC, t.name\n    ","timestamp":"2025-08-16 20:12:12:1212"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Failed to get tags: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/tags.js:12:20","timestamp":"2025-08-16 20:12:12:1212"}
{"error":"role \"username\" does not exist","level":"error","message":"Database query error:","params":[10,0],"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 20:12:12:1212"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Failed to get questions: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async /Users/sandeep22/IBM_project/server/routes/questions.js:51:20","timestamp":"2025-08-16 20:12:12:1212"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-16 20:12:21:1221","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"error":"role \"username\" does not exist","level":"error","message":"Database query error:","params":["EMP001","john.doe@ibm.com","John","Doe","Cloud Development","Watson AI",["watson","cloud","ai"]],"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-16 20:12:21:1221"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Failed to create/update user: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async createOrUpdateUser (/Users/sandeep22/IBM_project/server/routes/auth.js:70:20)\n    at async /Users/sandeep22/IBM_project/server/routes/auth.js:144:20","timestamp":"2025-08-16 20:12:21:1221"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Login failed: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async createOrUpdateUser (/Users/sandeep22/IBM_project/server/routes/auth.js:70:20)\n    at async /Users/sandeep22/IBM_project/server/routes/auth.js:144:20","timestamp":"2025-08-16 20:12:21:1221"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-16 20:12:30:1230","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"error":"role \"username\" does not exist","level":"error","message":"Database query error:","params":["EMP001","john.doe@ibm.com","John","Doe","Cloud Development","Watson AI",["watson","cloud","ai"]],"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-16 20:12:30:1230"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Failed to create/update user: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async createOrUpdateUser (/Users/sandeep22/IBM_project/server/routes/auth.js:70:20)\n    at async /Users/sandeep22/IBM_project/server/routes/auth.js:144:20","timestamp":"2025-08-16 20:12:30:1230"}
{"code":"28000","file":"miscinit.c","length":100,"level":"error","line":"755","message":"Login failed: role \"username\" does not exist","name":"error","routine":"InitializeSessionUserId","severity":"FATAL","stack":"error: role \"username\" does not exist\n    at /Users/sandeep22/IBM_project/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (/Users/sandeep22/IBM_project/server/utils/database.js:27:17)\n    at async createOrUpdateUser (/Users/sandeep22/IBM_project/server/routes/auth.js:70:20)\n    at async /Users/sandeep22/IBM_project/server/routes/auth.js:144:20","timestamp":"2025-08-16 20:12:30:1230"}
{"ip":"::1","level":"info","message":"GET /","timestamp":"2025-08-16 20:12:46:1246","userAgent":"curl/8.7.1"}
{"ip":"::1","level":"info","message":"GET /api/health","timestamp":"2025-08-16 20:12:53:1253","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:13:59:1359"}
{"duration":37,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS users (\n        id SERIAL PRIMARY KEY,\n        ibm_id VARCHAR(50) UNIQUE NOT NULL,\n        email VARCHAR(255) UNIQUE NOT NULL,\n        first_name VARCHAR(100) NOT NULL,\n        last_name VARCHAR(100) NOT NULL,\n        department VARCHAR(100),\n        team VARCHAR(100),\n        expertise TEXT[],\n        reputation INTEGER DEFAULT 0,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-16 20:13:59:1359"}
{"duration":0,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS tags (\n        id SERIAL PRIMARY KEY,\n        name VARCHAR(100) UNIQUE NOT NULL,\n        category VARCHAR(50) NOT NULL,\n        description TEXT,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-16 20:13:59:1359"}
{"duration":0,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS questions (\n        id SERIAL PRIMARY KEY,\n        title VARCHAR(500) NOT NULL,\n        content TEXT NOT NULL,\n        user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,\n        status VARCHAR(20) DEFAULT 'open',\n        view_count INTEGER DEFAULT 0,\n        vote_count INTEGER DEFAULT 0,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-16 20:13:59:1359"}
{"duration":1,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS question_tags (\n        question_id INTEGER REFERENCES questions(id) ON DELETE CASCADE,\n        tag_id INTEGER REFERENCES tags(id) ON DELETE CASCADE,\n        PRIMARY KEY (question_id, tag_id)\n      )\n    ","timestamp":"2025-08-16 20:13:59:1359"}
{"duration":0,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS answers (\n        id SERIAL PRIMARY KEY,\n        content TEXT NOT NULL,\n        question_id INTEGER REFERENCES questions(id) ON DELETE CASCADE,\n        user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,\n        is_accepted BOOLEAN DEFAULT FALSE,\n        vote_count INTEGER DEFAULT 0,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-16 20:13:59:1359"}
{"duration":0,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS votes (\n        id SERIAL PRIMARY KEY,\n        user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,\n        question_id INTEGER REFERENCES questions(id) ON DELETE CASCADE,\n        answer_id INTEGER REFERENCES answers(id) ON DELETE CASCADE,\n        vote_type VARCHAR(10) NOT NULL CHECK (vote_type IN ('up', 'down')),\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        UNIQUE(user_id, question_id),\n        UNIQUE(user_id, answer_id)\n      )\n    ","timestamp":"2025-08-16 20:13:59:1359"}
{"duration":0,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS agent_suggestions (\n        id SERIAL PRIMARY KEY,\n        agent_type VARCHAR(50) NOT NULL,\n        question_id INTEGER REFERENCES questions(id) ON DELETE CASCADE,\n        suggested_user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,\n        confidence_score DECIMAL(3,2) NOT NULL,\n        reasoning TEXT,\n        accepted BOOLEAN DEFAULT FALSE,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-16 20:13:59:1359"}
{"duration":1,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS agent_performance (\n        id SERIAL PRIMARY KEY,\n        agent_type VARCHAR(50) NOT NULL,\n        total_suggestions INTEGER DEFAULT 0,\n        accepted_suggestions INTEGER DEFAULT 0,\n        average_confidence DECIMAL(3,2) DEFAULT 0,\n        last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-16 20:13:59:1359"}
{"duration":0,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS knowledge_gaps (\n        id SERIAL PRIMARY KEY,\n        title VARCHAR(500) NOT NULL,\n        description TEXT,\n        frequency INTEGER DEFAULT 1,\n        priority VARCHAR(20) DEFAULT 'medium',\n        assigned_to INTEGER REFERENCES users(id),\n        status VARCHAR(20) DEFAULT 'open',\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n      )\n    ","timestamp":"2025-08-16 20:13:59:1359"}
{"duration":0,"level":"debug","message":"Executed query","rows":null,"text":"\n      CREATE TABLE IF NOT EXISTS expertise_mapping (\n        id SERIAL PRIMARY KEY,\n        user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,\n        skill VARCHAR(100) NOT NULL,\n        proficiency_level VARCHAR(20) DEFAULT 'intermediate',\n        evidence_count INTEGER DEFAULT 0,\n        last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        UNIQUE(user_id, skill)\n      )\n    ","timestamp":"2025-08-16 20:13:59:1359"}
{"duration":13,"level":"debug","message":"Executed query","rows":0,"text":"\n      INSERT INTO tags (name, category, description) VALUES\n      ('Watson', 'AI', 'IBM Watson AI and machine learning technologies'),\n      ('Cloud Pak', 'Cloud', 'IBM Cloud Pak for Data, AI, and Integration'),\n      ('Red Hat', 'Infrastructure', 'Red Hat OpenShift and container technologies'),\n      ('IBM Cloud', 'Cloud', 'IBM Cloud platform and services'),\n      ('Kubernetes', 'Infrastructure', 'Container orchestration and management'),\n      ('Docker', 'Infrastructure', 'Containerization technology'),\n      ('Microservices', 'Architecture', 'Microservices architecture patterns'),\n      ('API', 'Development', 'Application Programming Interfaces'),\n      ('Security', 'Security', 'Security and compliance topics'),\n      ('DevOps', 'Process', 'Development operations and CI/CD')\n      ON CONFLICT (name) DO NOTHING\n    ","timestamp":"2025-08-16 20:13:59:1359"}
{"level":"info","message":"Database initialized successfully","timestamp":"2025-08-16 20:13:59:1359"}
{"level":"info","message":"SIGTERM received, shutting down gracefully","timestamp":"2025-08-16 20:14:33:1433"}
{"level":"info","message":"Redis connection ended","timestamp":"2025-08-16 20:14:33:1433"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 20:14:37:1437"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 20:14:37:1437"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 20:14:37:1437"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 20:14:37:1437"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 20:14:37:1437"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 20:14:37:1437"}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-16 20:14:46:1446","userAgent":"curl/8.7.1"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:14:46:1446"}
{"duration":21,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-16 20:14:46:1446"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-16 20:14:46:1446","userId":1}
{"ip":"::1","level":"info","message":"POST /api/auth/login","timestamp":"2025-08-16 20:15:00:150","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"duration":3,"level":"debug","message":"Executed query","rows":1,"text":"\n      INSERT INTO users (ibm_id, email, first_name, last_name, department, team, expertise)\n      VALUES ($1, $2, $3, $4, $5, $6, $7)\n      ON CONFLICT (ibm_id) DO UPDATE SET\n        email = EXCLUDED.email,\n        first_name = EXCLUDED.first_name,\n        last_name = EXCLUDED.last_name,\n        department = EXCLUDED.department,\n        team = EXCLUDED.team,\n        expertise = EXCLUDED.expertise,\n        updated_at = CURRENT_TIMESTAMP\n      RETURNING *\n    ","timestamp":"2025-08-16 20:15:00:150"}
{"action":"login","details":{"ibmId":"EMP001"},"level":"info","message":"User action","timestamp":"2025-08-16 20:15:00:150","userId":1}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 20:15:00:150","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 20:15:00:150","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 20:15:00:150","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:15:00:150"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:15:00:150"}
{"duration":13,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 20:15:00:150"}
{"duration":10,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 20:15:00:150"}
{"duration":3,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-16 20:15:00:150"}
{"duration":13,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 20:15:00:150"}
{"duration":3,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-16 20:15:00:150"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 20:17:41:1741","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 20:17:41:1741","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 20:17:41:1741","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:17:41:1741"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:17:41:1741"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:17:41:1741"}
{"duration":9,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 20:17:41:1741"}
{"duration":10,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 20:17:41:1741"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-16 20:17:41:1741"}
{"duration":11,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 20:17:41:1741"}
{"duration":2,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-16 20:17:41:1741"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 20:17:42:1742","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 20:17:42:1742","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 20:17:42:1742","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 20:17:42:1742"}
{"duration":1,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 20:17:42:1742"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-16 20:17:42:1742"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-16 20:17:42:1742"}
{"duration":4,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 20:17:42:1742"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 20:24:09:249"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 20:24:09:249"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 20:24:09:249"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 20:24:09:249"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 20:24:09:249"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 20:24:09:249"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 20:24:10:2410"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 20:24:10:2410"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 20:24:10:2410"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 20:24:10:2410"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 20:24:10:2410"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 20:24:10:2410"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 20:26:28:2628"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 20:26:28:2628"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 20:26:28:2628"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 20:26:28:2628"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 20:26:28:2628"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 20:26:28:2628"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 20:28:52:2852","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 20:28:52:2852","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 20:28:52:2852","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:28:52:2852"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:28:52:2852"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:28:52:2852"}
{"duration":12,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 20:28:52:2852"}
{"duration":18,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 20:28:52:2852"}
{"duration":16,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 20:28:52:2852"}
{"duration":1,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-16 20:28:52:2852"}
{"duration":2,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-16 20:28:52:2852"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 20:31:13:3113"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 20:31:13:3113"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 20:31:13:3113"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 20:31:13:3113"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 20:31:13:3113"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 20:31:13:3113"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 20:31:15:3115"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 20:31:15:3115"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 20:31:15:3115"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 20:31:15:3115"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 20:31:15:3115"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 20:31:15:3115"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 20:31:49:3149","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 20:31:49:3149","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 20:31:49:3149","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:31:49:3149"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:31:49:3149"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:31:49:3149"}
{"duration":14,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 20:31:49:3149"}
{"duration":13,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 20:31:49:3149"}
{"duration":16,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 20:31:49:3149"}
{"duration":4,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-16 20:31:49:3149"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-16 20:31:49:3149"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 20:31:50:3150","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 20:31:50:3150","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 20:31:50:3150","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"duration":18,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 20:31:50:3150"}
{"duration":17,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 20:31:50:3150"}
{"duration":20,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 20:31:50:3150"}
{"duration":6,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-16 20:31:50:3150"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-16 20:31:50:3150"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 20:33:15:3315"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 20:33:15:3315"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 20:33:15:3315"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 20:33:15:3315"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 20:33:15:3315"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 20:33:15:3315"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 20:33:16:3316"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 20:33:16:3316"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 20:33:16:3316"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 20:33:16:3316"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 20:33:16:3316"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 20:33:16:3316"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 20:48:17:4817"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 20:48:17:4817"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 20:48:17:4817"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 20:48:17:4817"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 20:48:17:4817"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 20:48:17:4817"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 20:48:18:4818","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 20:48:18:4818","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 20:48:18:4818","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-16 20:48:18:4818","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:48:18:4818"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:48:18:4818"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:48:18:4818"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:48:18:4818"}
{"duration":24,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 20:48:18:4818"}
{"duration":22,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 20:48:18:4818"}
{"duration":24,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 20:48:18:4818"}
{"duration":22,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-16 20:48:18:4818"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-16 20:48:18:4818"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-16 20:48:18:4818","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"duration":1,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-16 20:48:18:4818"}
{"duration":4,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-16 20:48:18:4818"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 20:51:16:5116"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 20:51:16:5116"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 20:51:16:5116"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 20:51:16:5116"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 20:51:16:5116"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 20:51:16:5116"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 20:51:17:5117"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 20:51:17:5117"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 20:51:17:5117"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 20:51:17:5117"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 20:51:17:5117"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 20:51:17:5117"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 20:51:21:5121"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 20:51:21:5121"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 20:51:21:5121"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 20:51:21:5121"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 20:51:21:5121"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 20:51:21:5121"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 20:51:22:5122","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 20:51:22:5122","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 20:51:22:5122","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-16 20:51:22:5122","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:51:22:5122"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:51:22:5122"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:51:22:5122"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:51:22:5122"}
{"duration":14,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-16 20:51:22:5122"}
{"duration":18,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 20:51:22:5122"}
{"duration":21,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 20:51:22:5122"}
{"duration":20,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 20:51:22:5122"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-16 20:51:22:5122"}
{"duration":2,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-16 20:51:22:5122"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 20:51:23:5123"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 20:51:23:5123"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 20:51:23:5123"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 20:51:23:5123"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 20:51:23:5123"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 20:51:23:5123"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 20:51:27:5127"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 20:51:27:5127"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 20:51:27:5127"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 20:51:27:5127"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 20:51:27:5127"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 20:51:27:5127"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 20:51:28:5128","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 20:51:28:5128","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 20:51:28:5128","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-16 20:51:28:5128","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:51:28:5128"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:51:28:5128"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:51:28:5128"}
{"duration":22,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 20:51:28:5128"}
{"duration":23,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 20:51:28:5128"}
{"duration":4,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-16 20:51:28:5128"}
{"duration":24,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 20:51:28:5128"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 20:51:28:5128"}
{"duration":2,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-16 20:51:28:5128"}
{"duration":24,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-16 20:51:28:5128"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 20:51:37:5137"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 20:51:37:5137"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 20:51:37:5137"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 20:51:37:5137"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 20:51:37:5137"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 20:51:37:5137"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 20:54:05:545"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 20:54:05:545"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 20:54:05:545"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 20:54:05:545"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 20:54:05:545"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 20:54:05:545"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 21:04:55:455"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 21:04:55:455"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 21:04:55:455"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 21:04:55:455"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 21:04:55:455"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 21:04:55:455"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 21:06:15:615"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 21:06:15:615"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 21:06:15:615"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 21:06:15:615"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 21:06:15:615"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 21:06:15:615"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 21:06:18:618"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 21:06:18:618"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 21:06:18:618"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 21:06:18:618"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 21:06:18:618"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 21:06:18:618"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 21:07:05:75"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 21:07:05:75"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 21:07:05:75"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 21:07:05:75"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 21:07:05:75"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 21:07:05:75"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 21:08:15:815"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 21:08:15:815"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 21:08:15:815"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 21:08:15:815"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 21:08:15:815"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 21:08:15:815"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 21:08:18:818"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 21:08:18:818"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 21:08:18:818"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 21:08:18:818"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 21:08:18:818"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 21:08:18:818"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 21:08:31:831"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 21:08:31:831"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 21:08:31:831"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 21:08:31:831"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 21:08:31:831"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 21:08:31:831"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 21:08:33:833"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 21:08:33:833"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 21:08:33:833"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 21:08:33:833"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 21:08:33:833"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 21:08:33:833"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 21:09:43:943"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 21:09:43:943"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 21:09:43:943"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 21:09:43:943"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 21:09:43:943"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 21:09:43:943"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 21:09:45:945"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 21:09:45:945"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 21:09:45:945"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 21:09:45:945"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 21:09:45:945"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 21:09:45:945"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 21:13:05:135"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 21:13:05:135"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 21:13:05:135"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 21:13:05:135"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 21:13:05:135"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 21:13:05:135"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 21:13:07:137"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 21:13:07:137"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 21:13:07:137"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 21:13:07:137"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 21:13:07:137"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 21:13:07:137"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:04:57:457"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:04:57:457"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:04:57:457"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:04:57:457"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:04:57:457"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:04:57:457"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:05:32:532"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:05:32:532"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:05:32:532"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:05:32:532"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:05:32:532"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:05:32:532"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:06:39:639"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:06:39:639"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:06:39:639"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:06:39:639"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:06:39:639"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:06:39:639"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:06:42:642"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:06:42:642"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:06:42:642"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:06:42:642"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:06:42:642"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:06:42:642"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:06:58:658"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:06:58:658"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:06:58:658"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:06:58:658"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:06:58:658"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:06:58:658"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:07:00:70"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:07:00:70"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:07:00:70"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:07:00:70"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:07:00:70"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:07:00:70"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:07:19:719"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:07:19:719"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:07:19:719"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:07:19:719"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:07:19:719"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:07:19:719"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:07:22:722"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:07:22:722"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:07:22:722"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:07:22:722"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:07:22:722"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:07:22:722"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:16:03:163"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:16:03:163"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:16:03:163"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:16:03:163"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:16:03:163"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:16:03:163"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:16:16:1616"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:16:16:1616"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:16:16:1616"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:16:16:1616"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:16:16:1616"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:16:16:1616"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:16:22:1622"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:16:22:1622"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:16:22:1622"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:16:22:1622"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:16:22:1622"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:16:22:1622"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:16:25:1625"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:16:25:1625"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:16:25:1625"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:16:25:1625"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:16:25:1625"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:16:25:1625"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:17:20:1720"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:17:20:1720"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:17:20:1720"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:17:20:1720"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:17:20:1720"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:17:20:1720"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:20:37:2037"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:20:37:2037"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:20:37:2037"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:20:37:2037"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:20:37:2037"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:20:37:2037"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 23:20:38:2038","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 23:20:38:2038","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 23:20:38:2038","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-16 23:20:38:2038","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:20:38:2038"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:20:38:2038"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:20:38:2038"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:20:38:2038"}
{"duration":24,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 23:20:38:2038"}
{"duration":24,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-16 23:20:38:2038"}
{"duration":28,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 23:20:38:2038"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-16 23:20:38:2038"}
{"duration":29,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 23:20:38:2038"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-16 23:20:38:2038"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:21:20:2120"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:21:20:2120"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:21:20:2120"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:21:20:2120"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:21:20:2120"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:21:20:2120"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:21:23:2123"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:21:23:2123"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:21:23:2123"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:21:23:2123"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:21:23:2123"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:21:23:2123"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:21:24:2124"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:21:24:2124"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:21:24:2124"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:21:24:2124"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:21:24:2124"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:21:24:2124"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:21:26:2126"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:21:26:2126"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:21:26:2126"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:21:26:2126"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:21:26:2126"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:21:26:2126"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:23:24:2324"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:23:24:2324"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:23:24:2324"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:23:24:2324"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:23:24:2324"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:23:24:2324"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:23:26:2326"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:23:26:2326"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:23:26:2326"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:23:26:2326"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:23:26:2326"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:23:26:2326"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:23:27:2327"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:23:27:2327"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:23:27:2327"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:23:27:2327"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:23:27:2327"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:23:27:2327"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:23:29:2329"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:23:29:2329"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:23:29:2329"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:23:29:2329"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:23:29:2329"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:23:29:2329"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:23:43:2343"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:23:43:2343"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:23:43:2343"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:23:43:2343"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:23:43:2343"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:23:43:2343"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 23:23:44:2344","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-16 23:23:44:2344","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 23:23:44:2344","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 23:23:44:2344","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:23:44:2344"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:23:44:2344"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:23:44:2344"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:23:44:2344"}
{"duration":11,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-16 23:23:44:2344"}
{"duration":12,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 23:23:44:2344"}
{"duration":15,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 23:23:44:2344"}
{"duration":13,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 23:23:44:2344"}
{"duration":3,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-16 23:23:44:2344"}
{"duration":2,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-16 23:23:44:2344"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:23:51:2351"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:23:51:2351"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:23:51:2351"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:23:51:2351"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:23:51:2351"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:23:51:2351"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:23:54:2354"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:23:54:2354"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:23:54:2354"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:23:54:2354"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:23:54:2354"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:23:54:2354"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:23:55:2355"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:23:55:2355"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:23:55:2355"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:23:55:2355"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:23:55:2355"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:23:55:2355"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:23:57:2357"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:23:57:2357"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:23:57:2357"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:23:57:2357"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:23:57:2357"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:23:57:2357"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:26:14:2614"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:26:14:2614"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:26:14:2614"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:26:14:2614"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:26:14:2614"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:26:14:2614"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 23:26:15:2615","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 23:26:15:2615","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 23:26:15:2615","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-16 23:26:15:2615","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:26:15:2615"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:26:15:2615"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:26:15:2615"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:26:15:2615"}
{"duration":12,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 23:26:15:2615"}
{"duration":10,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-16 23:26:15:2615"}
{"duration":18,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 23:26:15:2615"}
{"duration":15,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 23:26:15:2615"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-16 23:26:15:2615"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-16 23:26:15:2615"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:26:18:2618"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:26:18:2618"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:26:18:2618"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:26:18:2618"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:26:18:2618"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:26:18:2618"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:26:36:2636"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:26:36:2636"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:26:36:2636"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:26:36:2636"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:26:36:2636"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:26:36:2636"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 23:26:36:2636","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 23:26:36:2636","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 23:26:36:2636","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/auth/me","timestamp":"2025-08-16 23:26:36:2636","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:26:36:2636"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:26:36:2636"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:26:36:2636"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:26:36:2636"}
{"duration":14,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 23:26:36:2636"}
{"duration":11,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation\n      FROM users\n      WHERE id = $1\n    ","timestamp":"2025-08-16 23:26:36:2636"}
{"duration":19,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 23:26:36:2636"}
{"duration":17,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 23:26:36:2636"}
{"duration":2,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-16 23:26:36:2636"}
{"duration":1,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-16 23:26:36:2636"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:26:52:2652"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:26:52:2652"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:26:52:2652"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:26:52:2652"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:26:52:2652"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:26:52:2652"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:27:06:276"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:27:06:276"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:27:06:276"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:27:06:276"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:27:06:276"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:27:06:276"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 23:27:07:277","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 23:27:07:277","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 23:27:07:277","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:27:07:277"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:27:07:277"}
{"duration":23,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 23:27:07:277"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:27:07:277"}
{"duration":22,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 23:27:07:277"}
{"duration":22,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 23:27:07:277"}
{"duration":3,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-16 23:27:07:277"}
{"duration":3,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-16 23:27:07:277"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:27:38:2738"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:27:38:2738"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:27:38:2738"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:27:38:2738"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:27:38:2738"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:27:38:2738"}
{"ip":"::1","level":"info","message":"GET /api/analytics/dashboard","timestamp":"2025-08-16 23:27:38:2738","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/questions","timestamp":"2025-08-16 23:27:38:2738","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"ip":"::1","level":"info","message":"GET /api/users","timestamp":"2025-08-16 23:27:38:2738","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:27:38:2738"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:27:38:2738"}
{"level":"info","message":"Connected to PostgreSQL database","timestamp":"2025-08-16 23:27:38:2738"}
{"duration":15,"level":"debug","message":"Executed query","rows":3,"text":"\n      SELECT id, ibm_id, email, first_name, last_name, department, team, expertise, reputation, created_at\n      FROM users\n      ORDER BY reputation DESC, created_at DESC\n    ","timestamp":"2025-08-16 23:27:38:2738"}
{"duration":22,"level":"debug","message":"Executed query","rows":1,"text":"\n      SELECT \n        (SELECT COUNT(*) FROM users) as total_users,\n        (SELECT COUNT(*) FROM questions) as total_questions,\n        (SELECT COUNT(*) FROM answers) as total_answers\n    ","timestamp":"2025-08-16 23:27:38:2738"}
{"duration":19,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.content, q.status, q.view_count, q.vote_count, q.created_at,\n             u.first_name, u.last_name,\n             array_agg(t.name) as tags\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      LEFT JOIN question_tags qt ON q.id = qt.question_id\n      LEFT JOIN tags t ON qt.tag_id = t.id\n    \n      GROUP BY q.id, u.first_name, u.last_name\n      ORDER BY q.created_at DESC\n      LIMIT $1 OFFSET $2\n    ","timestamp":"2025-08-16 23:27:38:2738"}
{"duration":4,"level":"debug","message":"Executed query","rows":5,"text":"\n      SELECT q.id, q.title, q.created_at, u.first_name, u.last_name\n      FROM questions q\n      LEFT JOIN users u ON q.user_id = u.id\n      ORDER BY q.created_at DESC\n      LIMIT 5\n    ","timestamp":"2025-08-16 23:27:38:2738"}
{"duration":2,"level":"debug","message":"Executed query","rows":0,"text":"\n      SELECT agent_type, \n             COUNT(*) as total_suggestions,\n             AVG(confidence_score) as avg_confidence,\n             COUNT(CASE WHEN accepted = true THEN 1 END) as accepted_count\n      FROM agent_suggestions\n      WHERE created_at >= NOW() - INTERVAL '7 days'\n      GROUP BY agent_type\n    ","timestamp":"2025-08-16 23:27:38:2738"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:27:49:2749"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:27:49:2749"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:27:49:2749"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:27:49:2749"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:27:49:2749"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:27:49:2749"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:27:50:2750"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:27:50:2750"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:27:50:2750"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:27:50:2750"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:27:50:2750"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:27:50:2750"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:28:01:281"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:28:01:281"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:28:01:281"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:28:01:281"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:28:01:281"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:28:01:281"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:28:04:284"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:28:04:284"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:28:04:284"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:28:04:284"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:28:04:284"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:28:04:284"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:28:06:286"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:28:06:286"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:28:06:286"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:28:06:286"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:28:06:286"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:28:06:286"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:28:11:2811"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:28:11:2811"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:28:11:2811"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:28:11:2811"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:28:11:2811"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:28:11:2811"}
{"level":"info","message":"Agent Orchestrator initialized","timestamp":"2025-08-16 23:28:14:2814"}
{"level":"info","message":"IBM Knowledge Ecosystem server running on port 5000","timestamp":"2025-08-16 23:28:14:2814"}
{"level":"info","message":"Environment: development","timestamp":"2025-08-16 23:28:14:2814"}
{"level":"info","message":"Health check available at: http://localhost:5000/api/health","timestamp":"2025-08-16 23:28:14:2814"}
{"level":"info","message":"Connected to Redis","timestamp":"2025-08-16 23:28:14:2814"}
{"level":"info","message":"Redis client ready","timestamp":"2025-08-16 23:28:14:2814"}
